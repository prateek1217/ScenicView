{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prakh\\\\Desktop\\\\Flight\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport './index.css';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Throttle function for smooth slider performance\nconst throttle = (func, delay) => {\n  let timeoutId = null;\n  let lastExecTime = 0;\n  return (...args) => {\n    const currentTime = Date.now();\n    if (currentTime - lastExecTime > delay) {\n      func(...args);\n      lastExecTime = currentTime;\n    } else {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        func(...args);\n        lastExecTime = Date.now();\n      }, delay - (currentTime - lastExecTime));\n    }\n  };\n};\n\n// Fix for default markers\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\n\n// Types\n\n// Airport coordinates database\nconst AIRPORTS = {\n  // Indian Airports\n  'DEL': [28.5562, 77.1000],\n  // Delhi\n  'BOM': [19.0896, 72.8656],\n  // Mumbai\n  'BLR': [12.9716, 77.5946],\n  // Bangalore\n  'MAA': [12.9941, 80.1709],\n  // Chennai\n  'CCU': [22.6547, 88.4467],\n  // Kolkata\n  'HYD': [17.2403, 78.4294],\n  // Hyderabad\n  'COK': [9.9312, 76.2673],\n  // Kochi\n  'GOI': [15.3808, 73.8314],\n  // Goa\n  'AMD': [23.0725, 72.6347],\n  // Ahmedabad\n  'PNQ': [18.5679, 73.9143],\n  // Pune\n  'BHO': [23.2599, 77.4126],\n  // Bhopal\n  'JAI': [26.9124, 75.7873],\n  // Jaipur\n  'LKO': [26.7606, 80.8843],\n  // Lucknow\n\n  // International Airports\n  'JFK': [40.6413, -73.7781],\n  // New York JFK\n  'LHR': [51.4700, -0.4543],\n  // London Heathrow\n  'NRT': [35.7720, 140.3929],\n  // Tokyo Narita\n  'LAX': [33.9425, -118.4081],\n  // Los Angeles\n  'DXB': [25.2532, 55.3657],\n  // Dubai\n  'SIN': [1.3644, 103.9915],\n  // Singapore\n  'SYD': [-33.9461, 151.1772],\n  // Sydney\n  'CDG': [49.0097, 2.5479],\n  // Paris Charles de Gaulle\n  'FRA': [50.0379, 8.5622],\n  // Frankfurt\n  'HKG': [22.3080, 113.9185],\n  // Hong Kong\n  'ICN': [37.4602, 126.4407],\n  // Seoul Incheon\n  'BKK': [13.6900, 100.7501],\n  // Bangkok\n  'DOH': [25.2731, 51.6080],\n  // Doha\n  'IST': [41.2619, 28.7414],\n  // Istanbul\n  'MAD': [40.4719, -3.5626] // Madrid\n};\n\n// Simplified flight analysis function\nconst generateSimplifiedFlightAnalysis = (fromAirport, toAirport, departureTime, flightDuration) => {\n  console.log(`Analyzing flight: ${fromAirport} → ${toAirport}, ${departureTime}, ${flightDuration} min`);\n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  if (!fromCoords || !toCoords) {\n    throw new Error(`Unknown airport: ${fromAirport} or ${toAirport}`);\n  }\n\n  // Parse departure time\n  const depTime = new Date(departureTime);\n  const arrivalTime = new Date(depTime.getTime() + flightDuration * 60 * 1000);\n\n  // Generate basic flight path (5 waypoints)\n  const path = [];\n  for (let i = 0; i <= 4; i++) {\n    const fraction = i / 4;\n    const lat = fromCoords[0] + (toCoords[0] - fromCoords[0]) * fraction;\n    const lon = fromCoords[1] + (toCoords[1] - fromCoords[1]) * fraction;\n    path.push({\n      lat,\n      lon\n    });\n  }\n\n  // Generate basic sun analysis\n  const enhancedAnalysis = generateBasicSunAnalysis(fromAirport, toAirport, depTime, arrivalTime, flightDuration);\n\n  // Generate sun positions with correct side placement based on flight direction\n  const sunPositions = path.map((waypoint, index) => {\n    const timeAtWaypoint = new Date(depTime.getTime() + index / 4 * flightDuration * 60 * 1000);\n    const hour = timeAtWaypoint.getHours();\n    const minute = timeAtWaypoint.getMinutes();\n    const timeInMinutes = hour * 60 + minute;\n\n    // Calculate flight direction\n    const fromCoords = AIRPORTS[fromAirport];\n    const toCoords = AIRPORTS[toAirport];\n    const lonDiff = toCoords[1] - fromCoords[1]; // + means flying east, - means flying west\n\n    // Simplified sun elevation based on time of day\n    let elevation;\n    if (hour >= 6 && hour <= 8) elevation = Math.random() * 10; // Sunrise\n    else if (hour >= 18 && hour <= 20) elevation = Math.random() * 10; // Sunset\n    else if (hour >= 9 && hour <= 17) elevation = 30 + Math.random() * 40; // Day\n    else elevation = -10 - Math.random() * 20; // Night\n\n    // Calculate azimuth based on flight direction and DEPARTURE time (not current time)\n    let azimuth;\n\n    // Use departure time to determine sun position for the entire flight\n    const depHour = depTime.getHours();\n    const depMinute = depTime.getMinutes();\n    const depTimeInMinutes = depHour * 60 + depMinute;\n\n    // Define time intervals in minutes (same as in generateBasicSunAnalysis)\n    const GOLDEN_HOUR_BEFORE_SUNRISE_START = 4 * 60; // 4:00 AM\n    const GOLDEN_HOUR_BEFORE_SUNRISE_END = 4 * 60 + 59; // 4:59 AM\n    const SUNRISE_START = 5 * 60; // 5:00 AM\n    const SUNRISE_END = 8 * 60; // 8:00 AM\n    const SUN_VISIBLE_START = 8 * 60 + 1; // 8:01 AM\n    const SUN_VISIBLE_END = 17 * 60; // 5:00 PM\n    const GOLDEN_HOUR_BEFORE_SUNSET_START = 17 * 60 + 1; // 5:01 PM\n    const GOLDEN_HOUR_BEFORE_SUNSET_END = 17 * 60 + 59; // 5:59 PM\n    const SUNSET_START = 18 * 60; // 6:00 PM\n    const SUNSET_END = 19 * 60; // 7:00 PM\n\n    // Determine sun condition based on CURRENT WAYPOINT TIME (not just departure time)\n    let condition;\n    if (timeInMinutes >= SUNRISE_START && timeInMinutes <= SUNRISE_END) {\n      // Sunrise (5:00 AM - 8:00 AM)\n      condition = 'SUNRISE';\n      azimuth = lonDiff < 0 ? 270 : 90; // West flight: east side (270°), East flight: west side (90°)\n    } else if (timeInMinutes >= GOLDEN_HOUR_BEFORE_SUNRISE_START && timeInMinutes <= GOLDEN_HOUR_BEFORE_SUNRISE_END) {\n      // Golden hour before sunrise (4:00 AM - 4:59 AM)\n      condition = 'GOLDEN_HOUR_BEFORE_SUNRISE';\n      azimuth = lonDiff < 0 ? 270 : 90; // West flight: east side (270°), East flight: west side (90°)\n    } else if (timeInMinutes >= SUN_VISIBLE_START && timeInMinutes <= SUN_VISIBLE_END) {\n      // Day time (8:01 AM - 5:00 PM)\n      condition = 'DAYLIGHT';\n      azimuth = 180; // South\n    } else if (timeInMinutes >= SUNSET_START && timeInMinutes <= SUNSET_END) {\n      // Sunset (6:00 PM - 7:00 PM)\n      condition = 'SUNSET';\n      azimuth = lonDiff < 0 ? 90 : 270; // West flight: west side (90°), East flight: east side (270°)\n    } else if (timeInMinutes >= GOLDEN_HOUR_BEFORE_SUNSET_START && timeInMinutes <= GOLDEN_HOUR_BEFORE_SUNSET_END) {\n      // Golden hour before sunset (5:01 PM - 5:59 PM)\n      condition = 'GOLDEN_HOUR_BEFORE_SUNSET';\n      azimuth = lonDiff < 0 ? 90 : 270; // West flight: west side (90°), East flight: east side (270°)\n    } else {\n      // Night time (7:01 PM - 3:59 AM)\n      condition = 'NIGHT';\n      azimuth = lonDiff < 0 ? 270 : 90; // Default to east side for night\n    }\n    return {\n      lat: waypoint.lat,\n      lon: waypoint.lon,\n      time: timeAtWaypoint.toISOString(),\n      azimuth,\n      elevation,\n      condition\n    };\n  });\n  return {\n    path,\n    sunPositions,\n    recommendation: enhancedAnalysis.seatSuggestion,\n    enhancedAnalysis\n  };\n};\n\n// Enhanced sun analysis based on precise time intervals\nconst generateBasicSunAnalysis = (fromAirport, toAirport, departureTime, arrivalTime, flightDuration) => {\n  const depHour = departureTime.getHours();\n  const depMinute = departureTime.getMinutes();\n  const arrHour = arrivalTime.getHours();\n  const arrMinute = arrivalTime.getMinutes();\n  console.log(`Flight time analysis: Dep ${depHour}:${depMinute.toString().padStart(2, '0')} → Arr ${arrHour}:${arrMinute.toString().padStart(2, '0')}`);\n\n  // Convert times to minutes for easier comparison\n  const depTimeMinutes = depHour * 60 + depMinute;\n  const arrTimeMinutes = arrHour * 60 + arrMinute;\n\n  // Define time intervals in minutes\n  const GOLDEN_HOUR_BEFORE_SUNRISE_START = 4 * 60; // 4:00 AM\n  const GOLDEN_HOUR_BEFORE_SUNRISE_END = 4 * 60 + 59; // 4:59 AM\n  const SUNRISE_START = 5 * 60; // 5:00 AM\n  const SUNRISE_END = 8 * 60; // 8:00 AM\n  const SUN_VISIBLE_START = 8 * 60 + 1; // 8:01 AM\n  const SUN_VISIBLE_END = 17 * 60; // 5:00 PM\n  const GOLDEN_HOUR_BEFORE_SUNSET_START = 17 * 60 + 1; // 5:01 PM\n  const GOLDEN_HOUR_BEFORE_SUNSET_END = 17 * 60 + 59; // 5:59 PM\n  const SUNSET_START = 18 * 60; // 6:00 PM\n  const SUNSET_END = 19 * 60; // 7:00 PM\n  const NIGHT_START = 19 * 60 + 1; // 7:01 PM\n  const NIGHT_END = 3 * 60 + 59; // 3:59 AM\n\n  // Initialize detection flags\n  let willSeeGoldenHourBeforeSunrise = false;\n  let willSeeSunrise = false;\n  let willSeeSunVisible = false;\n  let willSeeGoldenHourBeforeSunset = false;\n  let willSeeSunset = false;\n  let willSeeNight = false;\n\n  // Check if flight crosses overnight boundary (departure > arrival)\n  const isOvernightFlight = depTimeMinutes > arrTimeMinutes;\n\n  // Function to check if a time interval overlaps with flight time\n  const checkTimeOverlap = (startMinutes, endMinutes) => {\n    if (isOvernightFlight) {\n      // For overnight flights, check both day 1 and day 2\n      const day1Overlap = depTimeMinutes <= endMinutes && arrTimeMinutes >= startMinutes;\n      const day2Overlap = depTimeMinutes <= endMinutes + 24 * 60 && arrTimeMinutes >= startMinutes + 24 * 60;\n      return day1Overlap || day2Overlap;\n    } else {\n      // For same-day flights\n      return depTimeMinutes <= endMinutes && arrTimeMinutes >= startMinutes;\n    }\n  };\n\n  // Check each time interval (prioritize main periods over golden hour)\n  willSeeSunrise = checkTimeOverlap(SUNRISE_START, SUNRISE_END);\n  willSeeSunset = checkTimeOverlap(SUNSET_START, SUNSET_END);\n  willSeeNight = checkTimeOverlap(NIGHT_START, NIGHT_END);\n  willSeeSunVisible = checkTimeOverlap(SUN_VISIBLE_START, SUN_VISIBLE_END);\n\n  // Only check golden hour if not already in main sunrise/sunset periods\n  if (!willSeeSunrise) {\n    willSeeGoldenHourBeforeSunrise = checkTimeOverlap(GOLDEN_HOUR_BEFORE_SUNRISE_START, GOLDEN_HOUR_BEFORE_SUNRISE_END);\n  }\n  if (!willSeeSunset) {\n    willSeeGoldenHourBeforeSunset = checkTimeOverlap(GOLDEN_HOUR_BEFORE_SUNSET_START, GOLDEN_HOUR_BEFORE_SUNSET_END);\n  }\n\n  // Golden hour is true if any golden hour period is detected\n  const willSeeGoldenHour = willSeeGoldenHourBeforeSunrise || willSeeGoldenHourBeforeSunset;\n  console.log(`Detection Results:\n    Golden Hour Before Sunrise: ${willSeeGoldenHourBeforeSunrise}\n    Sunrise: ${willSeeSunrise}\n    Sun Visible: ${willSeeSunVisible}\n    Golden Hour Before Sunset: ${willSeeGoldenHourBeforeSunset}\n    Sunset: ${willSeeSunset}\n    Night: ${willSeeNight}\n    Golden Hour: ${willSeeGoldenHour}`);\n\n  // Generate smart recommendations\n  const summary = [];\n  const recommendations = [];\n\n  // Sunrise analysis\n  if (willSeeSunrise) {\n    summary.push(`🌅 You WILL see a beautiful sunrise during this flight!`);\n    recommendations.push(\"Choose a window seat on the EAST side for the best sunrise views.\");\n  }\n\n  // Sunset analysis\n  if (willSeeSunset) {\n    summary.push(`🌇 You WILL see a stunning sunset during this flight!`);\n    recommendations.push(\"Choose a window seat on the WEST side for the best sunset views.\");\n  }\n\n  // Both sunrise and sunset\n  if (willSeeSunrise && willSeeSunset) {\n    summary.push(\"🌟 Amazing! You'll see BOTH sunrise AND sunset during this flight!\");\n    recommendations.push(\"This is a rare treat! You'll experience the full sun cycle during your journey.\");\n  }\n\n  // Golden hour analysis\n  if (willSeeGoldenHour) {\n    if (willSeeGoldenHourBeforeSunrise) {\n      summary.push(`✨ You'll experience magical golden hour lighting before sunrise!`);\n    } else if (willSeeGoldenHourBeforeSunset) {\n      summary.push(`✨ You'll experience beautiful golden hour lighting before sunset!`);\n    }\n  }\n\n  // Night analysis\n  if (willSeeNight) {\n    const nightHours = calculateNightHours(departureTime, arrivalTime);\n    summary.push(`🌙 You'll experience ${nightHours} hours of night flying - perfect for stargazing!`);\n    recommendations.push(\"Great opportunity for night photography and seeing city lights from above.\");\n  }\n\n  // Sun visible analysis\n  if (willSeeSunVisible && !willSeeSunrise && !willSeeSunset) {\n    summary.push(`☀️ This will be a bright daylight flight with excellent visibility.`);\n    recommendations.push(\"Perfect for scenic landscape viewing and aerial photography.\");\n  }\n\n  // Add general recommendations\n  if (willSeeSunrise || willSeeSunset || willSeeGoldenHour) {\n    recommendations.push(\"Bring a camera - the views will be spectacular!\");\n  }\n\n  // Determine seat suggestion based on route\n  const seatSuggestion = determineSeatSuggestion(fromAirport, toAirport, willSeeSunrise, willSeeSunset);\n  return {\n    willSeeSunrise,\n    willSeeSunset,\n    willSeeNight,\n    willSeeGoldenHour,\n    summary,\n    recommendations,\n    seatSuggestion,\n    timeline: [],\n    // Simplified - no detailed timeline\n    nightDuration: willSeeNight ? calculateNightHours(departureTime, arrivalTime) * 60 : 0,\n    dayDuration: flightDuration - (willSeeNight ? calculateNightHours(departureTime, arrivalTime) * 60 : 0)\n  };\n};\n\n// Helper function to calculate night hours\nconst calculateNightHours = (depTime, arrTime) => {\n  const depHour = depTime.getHours();\n  const arrHour = arrTime.getHours();\n  let nightHours = 0;\n\n  // Simple night calculation (10 PM - 6 AM)\n  if (depHour >= 22 || depHour <= 6) nightHours += 1;\n  if (arrHour >= 22 || arrHour <= 6) nightHours += 1;\n  return Math.max(nightHours, 0.5); // Minimum 0.5 hours if any night flying\n};\n\n// Helper function to determine seat suggestion\nconst determineSeatSuggestion = (fromAirport, toAirport, willSeeSunrise, willSeeSunset) => {\n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  if (!fromCoords || !toCoords) return 'either';\n\n  // Calculate if flying generally east/west/north/south\n  const latDiff = toCoords[0] - fromCoords[0]; // + means flying north\n  const lonDiff = toCoords[1] - fromCoords[1]; // + means flying east\n\n  console.log(`Flight direction analysis: ${fromAirport} → ${toAirport}`);\n  console.log(`Lat diff: ${latDiff}, Lon diff: ${lonDiff}`);\n  console.log(`Sunrise: ${willSeeSunrise}, Sunset: ${willSeeSunset}`);\n  if (willSeeSunrise) {\n    // Sunrise is in the EAST, so:\n    // - If flying WEST (negative lonDiff), sunrise will be on LEFT side\n    // - If flying EAST (positive lonDiff), sunrise will be on RIGHT side\n    if (lonDiff < 0) {\n      console.log(`Flying WEST with sunrise → LEFT side recommended`);\n      return 'left'; // Flying west, sunrise on left (east side of plane)\n    } else {\n      console.log(`Flying EAST with sunrise → RIGHT side recommended`);\n      return 'right'; // Flying east, sunrise on right (east side of plane)\n    }\n  }\n  if (willSeeSunset) {\n    // Sunset is in the WEST, so:\n    // - If flying WEST (negative lonDiff), sunset will be on RIGHT side\n    // - If flying EAST (positive lonDiff), sunset will be on LEFT side\n    if (lonDiff < 0) {\n      console.log(`Flying WEST with sunset → RIGHT side recommended`);\n      return 'right'; // Flying west, sunset on right (west side of plane)\n    } else {\n      console.log(`Flying EAST with sunset → LEFT side recommended`);\n      return 'left'; // Flying east, sunset on left (west side of plane)\n    }\n  }\n  console.log(`No sunrise/sunset → EITHER side recommended`);\n  return 'either';\n};\n\n// Function to get the correct marker/emoji for each sun condition\nconst getSunConditionMarker = condition => {\n  switch (condition) {\n    case 'GOLDEN_HOUR_BEFORE_SUNRISE':\n      return '🌄';\n    // Golden hour before sunrise - mountain sunrise\n    case 'SUNRISE':\n      return '🌅';\n    // Sunrise\n    case 'DAYLIGHT':\n      return '☀️';\n    // Bright sun\n    case 'GOLDEN_HOUR_BEFORE_SUNSET':\n      return '🌇';\n    // Golden hour before sunset - cityscape sunset\n    case 'SUNSET':\n      return '🌆';\n    // Sunset over buildings\n    case 'NIGHT':\n      return '🌙';\n    // Crescent moon\n    default:\n      return '☀️';\n    // Default to sun\n  }\n};\n\n// Function to get tooltip content based on sun condition\nconst getSunTooltipContent = sunPos => {\n  var _sunPos$elevation2;\n  if (!sunPos) return '';\n\n  // Handle cases where condition might be undefined (for backward compatibility)\n  if (!sunPos.condition) {\n    var _sunPos$elevation;\n    const elevation = ((_sunPos$elevation = sunPos.elevation) === null || _sunPos$elevation === void 0 ? void 0 : _sunPos$elevation.toFixed(1)) || '--';\n    if (sunPos.elevation && sunPos.elevation < 0) {\n      return `🌙 Night • ${Math.abs(sunPos.elevation).toFixed(1)}° below horizon`;\n    } else if (sunPos.elevation && sunPos.elevation < 10) {\n      return `🌅 Golden Hour • ${elevation}° above horizon`;\n    } else {\n      return `☀️ Sun • ${elevation}° above horizon`;\n    }\n  }\n  const marker = getSunConditionMarker(sunPos.condition);\n  const elevation = ((_sunPos$elevation2 = sunPos.elevation) === null || _sunPos$elevation2 === void 0 ? void 0 : _sunPos$elevation2.toFixed(1)) || '--';\n  switch (sunPos.condition) {\n    case 'GOLDEN_HOUR_BEFORE_SUNRISE':\n      return `${marker} Golden Hour Before Sunrise • ${elevation}° above horizon`;\n    case 'SUNRISE':\n      return `${marker} Sunrise • ${elevation}° above horizon`;\n    case 'DAYLIGHT':\n      return `${marker} Daylight • ${elevation}° above horizon`;\n    case 'GOLDEN_HOUR_BEFORE_SUNSET':\n      return `${marker} Golden Hour Before Sunset • ${elevation}° above horizon`;\n    case 'SUNSET':\n      return `${marker} Sunset • ${elevation}° above horizon`;\n    case 'NIGHT':\n      return `${marker} Night • Moon visible`;\n    default:\n      return `${marker} Sun • ${elevation}° above horizon`;\n  }\n};\n\n// Function to calculate bearing between two points\nconst calculateBearing = (lat1, lon1, lat2, lon2) => {\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const lat1Rad = lat1 * Math.PI / 180;\n  const lat2Rad = lat2 * Math.PI / 180;\n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  let bearing = Math.atan2(y, x) * 180 / Math.PI;\n  bearing = (bearing + 360) % 360; // Normalize to 0-360\n\n  // No adjustment needed for custom SVG airplane - it points north by default\n  // The SVG is designed to point upward (0 degrees = north)\n\n  return bearing;\n};\n\n// Function to create rotated airplane icon\nconst createAirplaneIcon = rotation => {\n  return L.divIcon({\n    className: 'custom-airplane-icon',\n    html: `<div style=\"\n      transform: rotate(${rotation}deg); \n      display: flex; \n      align-items: center; \n      justify-content: center; \n      width: 100%; \n      height: 100%;\n      transform-origin: center center;\n    \">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"60\" height=\"60\" style=\"fill: #000000; filter: drop-shadow(0 3px 6px rgba(255,255,255,1.0));\">\n        <!-- Airplane fuselage (main body) - tapered from nose to tail -->\n        <ellipse cx=\"256\" cy=\"300\" rx=\"16\" ry=\"160\"/>\n        \n        <!-- Very thick pointed nose - clearly shows front direction -->\n        <polygon points=\"256,40 225,130 287,130\"/>\n        \n        <!-- Thick cockpit/nose section -->\n        <ellipse cx=\"256\" cy=\"150\" rx=\"25\" ry=\"40\"/>\n        \n        <!-- Forward fuselage (thick front section) -->\n        <ellipse cx=\"256\" cy=\"200\" rx=\"22\" ry=\"30\"/>\n        \n        <!-- Main wings - positioned toward front -->\n        <path d=\"M40 200 L256 160 L472 200 L472 260 L256 220 L40 260 Z\"/>\n        \n        <!-- Wing tip extensions -->\n        <rect x=\"35\" y=\"190\" width=\"20\" height=\"80\" rx=\"3\"/>\n        <rect x=\"457\" y=\"190\" width=\"20\" height=\"80\" rx=\"3\"/>\n        \n        <!-- Horizontal tail stabilizers (smaller, at back) -->\n        <path d=\"M200 420 L256 410 L312 420 L312 440 L256 435 L200 440 Z\"/>\n        \n        <!-- Vertical tail fin (at back) -->\n        <polygon points=\"256,390 245,450 267,450\"/>\n        \n        <!-- Engine details under wings -->\n        <ellipse cx=\"150\" cy=\"230\" rx=\"8\" ry=\"20\"/>\n        <ellipse cx=\"362\" cy=\"230\" rx=\"8\" ry=\"20\"/>\n        \n        <!-- Rear fuselage taper -->\n        <ellipse cx=\"256\" cy=\"450\" rx=\"8\" ry=\"20\"/>\n      </svg>\n    </div>`,\n    iconSize: [60, 60],\n    iconAnchor: [30, 30]\n  });\n};\n\n// InteractiveAirplane component\n\nconst InteractiveAirplane = ({\n  flightData,\n  flightProgress,\n  onPositionChange\n}) => {\n  _s();\n  const airplaneRef = useRef(null);\n  const getCurrentAirplaneData = () => {\n    if (!flightData || flightData.path.length === 0) return {\n      position: null,\n      rotation: 0\n    };\n\n    // Calculate exact position along the flight path\n    const totalDistance = flightData.path.length - 1;\n    const exactProgress = flightProgress / 100 * totalDistance;\n\n    // Get the two waypoints we're between\n    const currentIndex = Math.floor(exactProgress);\n    const nextIndex = Math.min(currentIndex + 1, flightData.path.length - 1);\n    const currentWaypoint = flightData.path[currentIndex];\n    const nextWaypoint = flightData.path[nextIndex];\n\n    // Calculate the exact position between waypoints (0-1 progress within this segment)\n    const progressInSegment = exactProgress - currentIndex;\n\n    // Interpolate position smoothly between waypoints\n    const lat = currentWaypoint.lat + (nextWaypoint.lat - currentWaypoint.lat) * progressInSegment;\n    const lon = currentWaypoint.lon + (nextWaypoint.lon - currentWaypoint.lon) * progressInSegment;\n\n    // Calculate rotation based on current direction of travel\n    let rotation = 0;\n    if (nextIndex > currentIndex) {\n      // Flying forward - point towards next waypoint\n      rotation = calculateBearing(currentWaypoint.lat, currentWaypoint.lon, nextWaypoint.lat, nextWaypoint.lon);\n    } else {\n      // At the end of the path - use direction from previous to current\n      const prevIndex = Math.max(currentIndex - 1, 0);\n      const prevWaypoint = flightData.path[prevIndex];\n      rotation = calculateBearing(prevWaypoint.lat, prevWaypoint.lon, currentWaypoint.lat, currentWaypoint.lon);\n    }\n    return {\n      position: [lat, lon],\n      rotation: rotation\n    };\n  };\n  const {\n    position: currentPosition,\n    rotation: airplaneRotation\n  } = useMemo(() => getCurrentAirplaneData(), [flightData, flightProgress]);\n  useEffect(() => {\n    if (!flightData || flightData.path.length === 0) return;\n\n    // Calculate smooth position using the same logic as getCurrentAirplaneData\n    const totalDistance = flightData.path.length - 1;\n    const exactProgress = flightProgress / 100 * totalDistance;\n    const currentIndex = Math.floor(exactProgress);\n    const nextIndex = Math.min(currentIndex + 1, flightData.path.length - 1);\n    const currentWaypoint = flightData.path[currentIndex];\n    const nextWaypoint = flightData.path[nextIndex];\n    const progressInSegment = exactProgress - currentIndex;\n\n    // Interpolate position smoothly between waypoints\n    const lat = currentWaypoint.lat + (nextWaypoint.lat - currentWaypoint.lat) * progressInSegment;\n    const lon = currentWaypoint.lon + (nextWaypoint.lon - currentWaypoint.lon) * progressInSegment;\n\n    // Interpolate sun position based on current progress\n    let currentSunPosition = null;\n    if (flightData.sunPositions && flightData.sunPositions.length > 0) {\n      const sunProgress = exactProgress / totalDistance;\n      const sunIndex = Math.floor(sunProgress * (flightData.sunPositions.length - 1));\n      const nextSunIndex = Math.min(sunIndex + 1, flightData.sunPositions.length - 1);\n      const currentSun = flightData.sunPositions[sunIndex];\n      const nextSun = flightData.sunPositions[nextSunIndex];\n      const sunProgressInSegment = sunProgress * (flightData.sunPositions.length - 1) - sunIndex;\n      currentSunPosition = {\n        lat: currentSun.lat + (nextSun.lat - currentSun.lat) * sunProgressInSegment,\n        lon: currentSun.lon + (nextSun.lon - currentSun.lon) * sunProgressInSegment,\n        time: currentSun.time,\n        azimuth: currentSun.azimuth + (nextSun.azimuth - currentSun.azimuth) * sunProgressInSegment,\n        elevation: currentSun.elevation + (nextSun.elevation - currentSun.elevation) * sunProgressInSegment\n      };\n    }\n\n    // Update position callback with smooth position\n    onPositionChange({\n      lat: lat,\n      lon: lon,\n      sunPosition: currentSunPosition\n    });\n\n    // Update map view to follow airplane with smooth animation\n    if (airplaneRef.current) {\n      const leafletElement = airplaneRef.current;\n      const map = leafletElement._map;\n      if (map) {\n        map.setView([lat, lon], map.getZoom(), {\n          animate: true,\n          duration: 0.1 // Very short animation for smooth following\n        });\n      }\n    }\n  }, [flightData, flightProgress, onPositionChange]);\n  if (!currentPosition) return null;\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    ref: airplaneRef,\n    position: currentPosition,\n    icon: createAirplaneIcon(airplaneRotation),\n    draggable: false,\n    interactive: false,\n    bubblingMouseEvents: false,\n    eventHandlers: {\n      dragstart: e => {\n        var _preventDefault, _ref;\n        (_preventDefault = (_ref = e).preventDefault) === null || _preventDefault === void 0 ? void 0 : _preventDefault.call(_ref);\n        return false;\n      },\n      drag: e => {\n        var _preventDefault2, _ref2;\n        (_preventDefault2 = (_ref2 = e).preventDefault) === null || _preventDefault2 === void 0 ? void 0 : _preventDefault2.call(_ref2);\n        return false;\n      },\n      dragend: e => {\n        var _preventDefault3, _ref3;\n        (_preventDefault3 = (_ref3 = e).preventDefault) === null || _preventDefault3 === void 0 ? void 0 : _preventDefault3.call(_ref3);\n        return false;\n      },\n      mousedown: e => {\n        var _e$originalEvent;\n        (_e$originalEvent = e.originalEvent) === null || _e$originalEvent === void 0 ? void 0 : _e$originalEvent.preventDefault();\n        return false;\n      },\n      mouseup: e => {\n        var _e$originalEvent2;\n        (_e$originalEvent2 = e.originalEvent) === null || _e$originalEvent2 === void 0 ? void 0 : _e$originalEvent2.preventDefault();\n        return false;\n      },\n      mousemove: e => {\n        var _e$originalEvent3;\n        (_e$originalEvent3 = e.originalEvent) === null || _e$originalEvent3 === void 0 ? void 0 : _e$originalEvent3.preventDefault();\n        return false;\n      },\n      add: () => {\n        if (airplaneRef.current) {\n          const element = airplaneRef.current.getElement();\n          if (element) {\n            element.style.pointerEvents = 'none';\n            element.style.userSelect = 'none';\n            element.style.touchAction = 'none';\n            element.draggable = false;\n          }\n        }\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: [\"Airplane Position\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 26\n      }, this), \"Use the timeline slider to move me!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 720,\n    columnNumber: 5\n  }, this);\n};\n\n// Page enum for navigation\n_s(InteractiveAirplane, \"PgOkJdpqgD4O2bJUiKF3WjzNbMY=\");\n_c = InteractiveAirplane;\nvar AppPage = /*#__PURE__*/function (AppPage) {\n  AppPage[\"SEARCH\"] = \"search\";\n  AppPage[\"RESULTS\"] = \"results\";\n  return AppPage;\n}(AppPage || {}); // SearchPage Component\nconst SearchPage = ({\n  fromAirport,\n  setFromAirport,\n  toAirport,\n  setToAirport,\n  departureTime,\n  setDepartureTime,\n  flightDuration,\n  setFlightDuration,\n  wantSunrise,\n  setWantSunrise,\n  wantSunset,\n  setWantSunset,\n  wantMountainView,\n  setWantMountainView,\n  loading,\n  error,\n  onSubmit,\n  formatTimeDisplay,\n  getFlightEndTime\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2708\\uFE0F SunSide - Perfect Window Seat Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Find the best window seat for sunrise and sunset views during your flight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"search-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-form card-elevated slide-up\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83C\\uDFAF Plan Your Journey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter your flight details to get personalized seat recommendations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-left-column\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"section-title\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"section-icon\",\n                      children: \"\\uD83D\\uDEEB\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 23\n                    }, this), \"Flight Details\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-grid\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"input-label\",\n                        htmlFor: \"fromAirport\",\n                        children: \"From Airport\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 817,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"input-field\",\n                        id: \"fromAirport\",\n                        value: fromAirport,\n                        onChange: e => setFromAirport(e.target.value),\n                        required: true,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select departure\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 825,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                          label: \"\\uD83C\\uDDEE\\uD83C\\uDDF3 Indian Cities\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DEL\",\n                            children: \"\\uD83C\\uDFDB\\uFE0F Delhi (DEL)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 827,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"JAI\",\n                            children: \"\\uD83C\\uDFF0 Jaipur (JAI)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 828,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BLR\",\n                            children: \"\\uD83C\\uDF06 Bangalore (BLR)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 829,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BOM\",\n                            children: \"\\uD83C\\uDFD9\\uFE0F Mumbai (BOM)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 830,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BHO\",\n                            children: \"\\uD83C\\uDF38 Bhopal (BHO)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 831,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LKO\",\n                            children: \"\\uD83D\\uDD4C Lucknow (LKO)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 832,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 826,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                          label: \"\\uD83C\\uDF0D International Cities\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"JFK\",\n                            children: \"\\uD83D\\uDDFD New York (JFK)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 835,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LHR\",\n                            children: \"\\uD83C\\uDDEC\\uD83C\\uDDE7 London (LHR)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 836,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"NRT\",\n                            children: \"\\uD83D\\uDDFE Tokyo (NRT)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 837,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LAX\",\n                            children: \"\\uD83C\\uDF34 Los Angeles (LAX)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 838,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DXB\",\n                            children: \"\\uD83C\\uDFDC\\uFE0F Dubai (DXB)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 839,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"SIN\",\n                            children: \"\\uD83C\\uDF3A Singapore (SIN)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 840,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"SYD\",\n                            children: \"\\uD83E\\uDD98 Sydney (SYD)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 841,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"CDG\",\n                            children: \"\\uD83D\\uDDFC Paris (CDG)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 842,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"FRA\",\n                            children: \"\\uD83C\\uDDE9\\uD83C\\uDDEA Frankfurt (FRA)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 843,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"HKG\",\n                            children: \"\\uD83C\\uDFD9\\uFE0F Hong Kong (HKG)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 844,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"ICN\",\n                            children: \"\\uD83C\\uDDF0\\uD83C\\uDDF7 Seoul (ICN)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 845,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BKK\",\n                            children: \"\\uD83C\\uDDF9\\uD83C\\uDDED Bangkok (BKK)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 846,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DOH\",\n                            children: \"\\uD83C\\uDFFA Doha (DOH)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 847,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"IST\",\n                            children: \"\\uD83D\\uDD4C Istanbul (IST)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 848,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"MAD\",\n                            children: \"\\uD83C\\uDDEA\\uD83C\\uDDF8 Madrid (MAD)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 849,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 834,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 818,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 816,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"input-label\",\n                        htmlFor: \"toAirport\",\n                        children: \"To Airport\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 855,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"input-field\",\n                        id: \"toAirport\",\n                        value: toAirport,\n                        onChange: e => setToAirport(e.target.value),\n                        required: true,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select destination\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 863,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                          label: \"\\uD83C\\uDDEE\\uD83C\\uDDF3 Indian Cities\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DEL\",\n                            children: \"\\uD83C\\uDFDB\\uFE0F Delhi (DEL)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 865,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"JAI\",\n                            children: \"\\uD83C\\uDFF0 Jaipur (JAI)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 866,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BLR\",\n                            children: \"\\uD83C\\uDF06 Bangalore (BLR)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 867,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BOM\",\n                            children: \"\\uD83C\\uDFD9\\uFE0F Mumbai (BOM)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 868,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BHO\",\n                            children: \"\\uD83C\\uDF38 Bhopal (BHO)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 869,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LKO\",\n                            children: \"\\uD83D\\uDD4C Lucknow (LKO)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 870,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 864,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                          label: \"\\uD83C\\uDF0D International Cities\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"JFK\",\n                            children: \"\\uD83D\\uDDFD New York (JFK)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 873,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LHR\",\n                            children: \"\\uD83C\\uDDEC\\uD83C\\uDDE7 London (LHR)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 874,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"NRT\",\n                            children: \"\\uD83D\\uDDFE Tokyo (NRT)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 875,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LAX\",\n                            children: \"\\uD83C\\uDF34 Los Angeles (LAX)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 876,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DXB\",\n                            children: \"\\uD83C\\uDFDC\\uFE0F Dubai (DXB)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 877,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"SIN\",\n                            children: \"\\uD83C\\uDF3A Singapore (SIN)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 878,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"SYD\",\n                            children: \"\\uD83E\\uDD98 Sydney (SYD)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 879,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"CDG\",\n                            children: \"\\uD83D\\uDDFC Paris (CDG)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 880,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"FRA\",\n                            children: \"\\uD83C\\uDDE9\\uD83C\\uDDEA Frankfurt (FRA)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 881,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"HKG\",\n                            children: \"\\uD83C\\uDFD9\\uFE0F Hong Kong (HKG)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 882,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"ICN\",\n                            children: \"\\uD83C\\uDDF0\\uD83C\\uDDF7 Seoul (ICN)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 883,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BKK\",\n                            children: \"\\uD83C\\uDDF9\\uD83C\\uDDED Bangkok (BKK)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 884,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DOH\",\n                            children: \"\\uD83C\\uDFFA Doha (DOH)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 885,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"IST\",\n                            children: \"\\uD83D\\uDD4C Istanbul (IST)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 886,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"MAD\",\n                            children: \"\\uD83C\\uDDEA\\uD83C\\uDDF8 Madrid (MAD)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 887,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 872,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 856,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 854,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-grid\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"input-label\",\n                        htmlFor: \"departureTime\",\n                        children: \"Departure Date & Time\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 895,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"input-field\",\n                        type: \"datetime-local\",\n                        id: \"departureTime\",\n                        value: departureTime,\n                        onChange: e => setDepartureTime(e.target.value),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 896,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 894,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"input-label\",\n                        htmlFor: \"flightDuration\",\n                        children: \"Flight Duration (minutes)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 907,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"input-field\",\n                        type: \"number\",\n                        id: \"flightDuration\",\n                        min: \"30\",\n                        max: \"1440\",\n                        step: \"1\",\n                        value: flightDuration,\n                        onChange: e => {\n                          const value = e.target.value;\n                          if (value === '') {\n                            setFlightDuration('');\n                          } else {\n                            const intValue = parseInt(value, 10);\n                            if (!isNaN(intValue)) {\n                              setFlightDuration(intValue);\n                            }\n                          }\n                        },\n                        placeholder: \"e.g., 120 (2 hours)\",\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 908,\n                        columnNumber: 25\n                      }, this), departureTime && flightDuration && /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"duration-help\",\n                        style: {\n                          marginTop: '8px',\n                          display: 'block',\n                          color: 'var(--text-muted)',\n                          fontSize: '0.875rem'\n                        },\n                        children: [\"Flight time: \", formatTimeDisplay(new Date(departureTime)), \" \\u2192 \", formatTimeDisplay(getFlightEndTime()), \"(\", Math.floor(Number(flightDuration) / 60), \"h \", Number(flightDuration) % 60, \"m)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 931,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 906,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 893,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-right-column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-section\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sun-preferences\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"section-icon\",\n                        children: \"\\uD83D\\uDC40\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 946,\n                        columnNumber: 25\n                      }, this), \"Viewing Preferences\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 945,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"preference-note\",\n                      children: \"\\uD83D\\uDCA1 Select your viewing preferences during the flight for optimal seat placement\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 949,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"checkbox-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"checkbox-label\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          checked: wantSunrise,\n                          onChange: e => setWantSunrise(e.target.checked)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 955,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"checkbox-text\",\n                          children: \"\\uD83C\\uDF05 I want to see the sunrise\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 960,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 954,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"checkbox-label\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          checked: wantSunset,\n                          onChange: e => setWantSunset(e.target.checked)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 964,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"checkbox-text\",\n                          children: \"\\uD83C\\uDF07 I want to see the sunset\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 969,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 963,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 953,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"checkbox-label\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: wantMountainView,\n                        onChange: e => setWantMountainView(e.target.checked)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 975,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"checkbox-text\",\n                        children: \"\\uD83C\\uDFD4\\uFE0F I want to see mountain views\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 980,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 974,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 944,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 943,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-section\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flight-tips-card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"section-icon\",\n                        children: \"\\uD83D\\uDCA1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 991,\n                        columnNumber: 25\n                      }, this), \"Flight Seat Tips\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 990,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tips-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tip-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tip-icon\",\n                          children: \"\\uD83C\\uDF05\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 996,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"tip-text\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Best Sunrise Views:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 998,\n                            columnNumber: 29\n                          }, this), \" East-facing windows during morning flights\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 997,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 995,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tip-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tip-icon\",\n                          children: \"\\uD83C\\uDF07\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1002,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"tip-text\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Best Sunset Views:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1004,\n                            columnNumber: 29\n                          }, this), \" West-facing windows during evening flights\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1003,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1001,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tip-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tip-icon\",\n                          children: \"\\uD83D\\uDDFA\\uFE0F\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1008,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"tip-text\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Flight Direction:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1010,\n                            columnNumber: 29\n                          }, this), \" Our algorithm considers your exact route for precise recommendations\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1009,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1007,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tip-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tip-icon\",\n                          children: \"\\u23F0\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1014,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"tip-text\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Timing Matters:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1016,\n                            columnNumber: 29\n                          }, this), \" Sun position changes throughout your flight duration\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1015,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1013,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 994,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 989,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 988,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-submit-section\",\n                children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error\",\n                  style: {\n                    marginBottom: 'var(--space-4)'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-icon\",\n                    children: \"\\u26A0\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1028,\n                    columnNumber: 23\n                  }, this), error]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary btn-lg\",\n                  disabled: loading,\n                  style: {\n                    width: '100%'\n                  },\n                  children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"loading-spinner\",\n                      style: {\n                        width: '20px',\n                        height: '20px',\n                        border: '2px solid rgba(255,255,255,0.3)',\n                        borderTop: '2px solid white'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1041,\n                      columnNumber: 25\n                    }, this), \"Finding your perfect seat...\"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: \"\\uD83D\\uDD0D Find My Perfect Seat\"\n                  }, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 791,\n    columnNumber: 5\n  }, this);\n};\n\n// ResultsPage Component\n_c2 = SearchPage;\n// Calculate actual astronomical sunrise and sunset times during flight\nconst getOptimalPeriodsInFlight = (departureTime, flightDuration, flightData) => {\n  var _flightData$path, _flightData$sunPositi;\n  if (!departureTime || !flightDuration || !(flightData !== null && flightData !== void 0 && (_flightData$path = flightData.path) !== null && _flightData$path !== void 0 && _flightData$path.length)) {\n    return {\n      sunrise: false,\n      sunset: false,\n      details: []\n    };\n  }\n  const startTime = new Date(departureTime);\n  const endTime = new Date(startTime.getTime() + (typeof flightDuration === 'number' ? flightDuration * 60 * 60 * 1000 : 0));\n  const details = [];\n  let sunriseInFlight = false;\n  let sunsetInFlight = false;\n  let sunriseTime;\n  let sunsetTime;\n  let sunriseProgress;\n  let sunsetProgress;\n\n  // Check each waypoint for sunrise/sunset during flight\n  console.log('Checking sun positions for sunrise/sunset...');\n  console.log('Flight start time:', startTime);\n  console.log('Flight end time:', endTime);\n  console.log('Sun positions count:', ((_flightData$sunPositi = flightData.sunPositions) === null || _flightData$sunPositi === void 0 ? void 0 : _flightData$sunPositi.length) || 0);\n  if (flightData.sunPositions) {\n    flightData.sunPositions.forEach((sunPos, index) => {\n      const currentTime = new Date(sunPos.time);\n      const prevSunPos = index > 0 ? flightData.sunPositions[index - 1] : null;\n      console.log(`Waypoint ${index}: ${currentTime.toISOString()}, elevation: ${sunPos.elevation}°`);\n      if (currentTime >= startTime && currentTime <= endTime) {\n        // For the first waypoint, consider if sun is already rising (elevation > -10°)\n        if (index === 0 && sunPos.elevation > -10 && sunPos.elevation < 10 && !sunriseInFlight) {\n          sunriseInFlight = true;\n          sunriseTime = currentTime;\n          sunriseProgress = index / (flightData.path.length - 1) * 100;\n          details.push(`🌅 Golden hour/Sunrise conditions at takeoff ${currentTime.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })}`);\n          console.log('Sunrise detected at takeoff');\n        }\n\n        // Check for horizon crossings between waypoints\n        if (prevSunPos) {\n          // Check for sunrise (sun elevation crosses from below to above horizon)\n          if (prevSunPos.elevation <= 0 && sunPos.elevation > 0 && !sunriseInFlight) {\n            sunriseInFlight = true;\n            sunriseTime = currentTime;\n            sunriseProgress = index / (flightData.path.length - 1) * 100;\n            details.push(`🌅 Sunrise at ${currentTime.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })} during flight`);\n            console.log('Sunrise detected - horizon crossing');\n          }\n\n          // Check for sunset (sun elevation crosses from above to below horizon)\n          if (prevSunPos.elevation > 0 && sunPos.elevation <= 0 && !sunsetInFlight) {\n            sunsetInFlight = true;\n            sunsetTime = currentTime;\n            sunsetProgress = index / (flightData.path.length - 1) * 100;\n            details.push(`🌇 Sunset at ${currentTime.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })} during flight`);\n            console.log('Sunset detected - horizon crossing');\n          }\n        }\n      }\n    });\n  }\n\n  // If no exact crossing found, check for golden hour periods and sun conditions\n  if (!sunriseInFlight || !sunsetInFlight) {\n    flightData.sunPositions.forEach((sunPos, index) => {\n      const currentTime = new Date(sunPos.time);\n      const prevSunPos = index > 0 ? flightData.sunPositions[index - 1] : null;\n      if (currentTime >= startTime && currentTime <= endTime) {\n        // Check for morning conditions (sunrise-like)\n        if (!sunriseInFlight) {\n          // Early morning with low sun (good for sunrise viewing)\n          if (sunPos.elevation > -5 && sunPos.elevation < 15) {\n            const hour = currentTime.getHours();\n            if (hour >= 5 && hour <= 9) {\n              // Morning hours\n              sunriseInFlight = true;\n              sunriseTime = currentTime;\n              sunriseProgress = index / (flightData.path.length - 1) * 100;\n              details.push(`🌅 Morning golden hour at ${currentTime.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })}`);\n            }\n          }\n\n          // Golden hour transition (sun crosses 10° elevation upward)\n          if (prevSunPos && prevSunPos.elevation <= 10 && sunPos.elevation > 10) {\n            sunriseInFlight = true;\n            sunriseTime = currentTime;\n            sunriseProgress = index / (flightData.path.length - 1) * 100;\n            details.push(`🌅 Golden hour begins at ${currentTime.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })}`);\n          }\n        }\n\n        // Check for evening conditions (sunset-like)\n        if (!sunsetInFlight) {\n          // Evening with low sun (good for sunset viewing)\n          if (sunPos.elevation > -5 && sunPos.elevation < 15) {\n            const hour = currentTime.getHours();\n            if (hour >= 17 && hour <= 21) {\n              // Evening hours\n              sunsetInFlight = true;\n              sunsetTime = currentTime;\n              sunsetProgress = index / (flightData.path.length - 1) * 100;\n              details.push(`🌇 Evening golden hour at ${currentTime.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })}`);\n            }\n          }\n\n          // Golden hour transition (sun crosses 10° elevation downward)\n          if (prevSunPos && prevSunPos.elevation > 10 && sunPos.elevation <= 10) {\n            sunsetInFlight = true;\n            sunsetTime = currentTime;\n            sunsetProgress = index / (flightData.path.length - 1) * 100;\n            details.push(`🌇 Golden hour begins at ${currentTime.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })}`);\n          }\n        }\n      }\n    });\n  }\n  return {\n    sunrise: sunriseInFlight,\n    sunset: sunsetInFlight,\n    details,\n    sunriseTime,\n    sunsetTime,\n    sunriseProgress,\n    sunsetProgress\n  };\n};\nconst ResultsPage = ({\n  flightData,\n  fromAirport,\n  toAirport,\n  currentPosition,\n  currentSunPosition,\n  flightProgress,\n  handleProgressChange,\n  handlePositionChange,\n  isDragging,\n  handleMouseDown,\n  handleClick,\n  onBack,\n  departureTime,\n  flightDuration,\n  wantMountainView\n}) => {\n  _s2();\n  var _currentPosition$lat$, _currentPosition$lat, _currentPosition$lon$, _currentPosition$lon, _currentSunPosition$e2, _currentSunPosition$e3, _currentSunPosition$a2, _currentSunPosition$a3, _currentSunPosition$e4;\n  // Resizable layout state\n  const [mapWidth, setMapWidth] = useState(60); // 60% default width for map\n  const [isDraggingResize, setIsDraggingResize] = useState(false);\n\n  // Resize handler for the divider\n  const handleResizeMouseDown = e => {\n    e.preventDefault();\n    setIsDraggingResize(true);\n    const handleMouseMove = e => {\n      const containerWidth = window.innerWidth;\n      const newMapWidth = e.clientX / containerWidth * 100;\n\n      // Constrain between 30% and 80%\n      const constrainedWidth = Math.max(30, Math.min(80, newMapWidth));\n      setMapWidth(constrainedWidth);\n    };\n    const handleMouseUp = () => {\n      setIsDraggingResize(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  // Smart tooltip positioning to prevent off-screen tooltips\n  React.useEffect(() => {\n    const adjustTooltipPositions = () => {\n      const tooltipContainers = document.querySelectorAll('.sun-tooltip-container');\n      tooltipContainers.forEach(container => {\n        const rect = container.getBoundingClientRect();\n        const viewportWidth = window.innerWidth;\n\n        // Remove existing positioning classes\n        container.classList.remove('tooltip-left', 'tooltip-right');\n\n        // If tooltip would go off the right edge\n        if (rect.right > viewportWidth - 150) {\n          container.classList.add('tooltip-right');\n        }\n        // If tooltip would go off the left edge\n        else if (rect.left < 150) {\n          container.classList.add('tooltip-left');\n        }\n      });\n    };\n\n    // Adjust on mount and window resize\n    adjustTooltipPositions();\n    window.addEventListener('resize', adjustTooltipPositions);\n    return () => window.removeEventListener('resize', adjustTooltipPositions);\n  }, [currentSunPosition, flightProgress]);\n  if (!flightData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"No flight data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1285,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-page fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"results-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-btn\",\n        children: \"\\u2190 Back to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u2708\\uFE0F Flight Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [fromAirport, \" \\u2192 \", toAirport]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"results-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-section\",\n          style: {\n            width: `${mapWidth}%`\n          },\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: [28.6139, 77.2090],\n            zoom: 6,\n            style: {\n              height: '100vh',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n              attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1311,\n              columnNumber: 15\n            }, this), flightData.path && flightData.path.length > 1 && /*#__PURE__*/_jsxDEV(Polyline, {\n              positions: flightData.path.map(wp => [wp.lat, wp.lon]),\n              color: \"blue\",\n              weight: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1317,\n              columnNumber: 17\n            }, this), flightData.path && flightData.path.length > 0 && /*#__PURE__*/_jsxDEV(Marker, {\n              position: [flightData.path[0].lat, flightData.path[0].lon],\n              icon: L.divIcon({\n                className: 'custom-marker from-marker',\n                html: '<div style=\"background: green; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              }),\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: [\"Departure: \", fromAirport]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1334,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1325,\n              columnNumber: 17\n            }, this), flightData.path && flightData.path.length > 0 && /*#__PURE__*/_jsxDEV(Marker, {\n              position: [flightData.path[flightData.path.length - 1].lat, flightData.path[flightData.path.length - 1].lon],\n              icon: L.divIcon({\n                className: 'custom-marker to-marker',\n                html: '<div style=\"background: red; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              }),\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: [\"Arrival: \", toAirport]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1348,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InteractiveAirplane, {\n              flightData: flightData,\n              flightProgress: flightProgress,\n              onPositionChange: handlePositionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1352,\n              columnNumber: 15\n            }, this), currentPosition && currentSunPosition && flightData && ((_currentSunPosition$a, _currentSunPosition$e) => {\n              // Calculate pure flight bearing for reference\n              const startPoint = flightData.path[0];\n              const endPoint = flightData.path[flightData.path.length - 1];\n              const dLon = (endPoint.lon - startPoint.lon) * Math.PI / 180;\n              const lat1Rad = startPoint.lat * Math.PI / 180;\n              const lat2Rad = endPoint.lat * Math.PI / 180;\n              const y = Math.sin(dLon) * Math.cos(lat2Rad);\n              const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n              let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n              flightBearing = (flightBearing + 360) % 360; // Normalize to 0-360\n\n              // Use REAL sun azimuth from astronomical calculations\n              // SunCalc: South=0°, West=+90°, North=180°/-180°, East=-90°\n              // Map: North=0°, East=90°, South=180°, West=270°\n              // Convert: Add 180° to shift from South=0° to North=0°\n              let sunBearing = (currentSunPosition.azimuth + 180) % 360;\n\n              // Position sun using real azimuth and elevation\n              // Distance from airplane based on elevation (higher sun = farther for better visibility)\n              const elevationDegrees = currentSunPosition.elevation;\n              const sunDistance = Math.max(0.3, 0.8 + (90 - Math.abs(elevationDegrees)) / 180); // 0.3 to 1.3 degrees\n\n              // Convert bearing to map coordinates\n              const sunLat = currentPosition.lat + Math.cos(sunBearing * Math.PI / 180) * sunDistance;\n              const sunLon = currentPosition.lon + Math.sin(sunBearing * Math.PI / 180) * sunDistance;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Marker, {\n                  position: [sunLat, sunLon],\n                  icon: L.divIcon({\n                    className: 'sun-marker',\n                    html: `\n                          <div class=\"map-sun-marker\" style=\"\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            width: 40px;\n                            height: 40px;\n                            background: ${elevationDegrees < 0 ? 'radial-gradient(circle, #4a5568 30%, #2d3748 60%, #1a202c 100%)' : elevationDegrees < 10 ? 'radial-gradient(circle, #ff8c00 30%, #ff6b35 60%, #e53e3e 100%)' : 'radial-gradient(circle, #ffd700 30%, #ffed4e 60%, #ff8c00 100%)'};\n                            border-radius: 50%;\n                            border: 3px solid #fff;\n                            box-shadow: 0 0 20px rgba(255, 215, 0, 0.6), 0 0 40px rgba(255, 215, 0, 0.3);\n                            position: relative;\n                            font-size: 20px;\n                            text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);\n                            cursor: pointer;\n                            transition: all 0.3s ease;\n                          \" title=\"${elevationDegrees < 0 ? `🌙 Nighttime • ${Math.abs(elevationDegrees).toFixed(1)}° below horizon` : elevationDegrees < 10 ? `🌅 Golden Hour • ${elevationDegrees.toFixed(1)}° above horizon` : `☀️ Daylight • ${elevationDegrees.toFixed(1)}° above horizon`}\">\n                            ${elevationDegrees < 0 ? '🌙' : elevationDegrees < 10 ? '🌅' : '☀️'}\n                            <div style=\"\n                              position: absolute;\n                              width: 60px;\n                              height: 60px;\n                              border: 2px solid #ffd700;\n                              border-radius: 50%;\n                              border-style: dashed;\n                              animation: rotate 8s linear infinite;\n                              opacity: 0.4;\n                            \"></div>\n                            <div class=\"map-sun-tooltip\" style=\"\n                              position: absolute;\n                              bottom: 120%;\n                              left: 50%;\n                              transform: translateX(-50%);\n                              background: rgba(0, 0, 0, 0.9);\n                              color: white;\n                              padding: 8px 12px;\n                              border-radius: 6px;\n                              font-size: 12px;\n                              white-space: nowrap;\n                              z-index: 1000;\n                              opacity: 0;\n                              visibility: hidden;\n                              transition: opacity 0.3s ease, visibility 0.3s ease;\n                              pointer-events: none;\n                              box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n                            \">\n                              ${elevationDegrees < 0 ? `🌙 Nighttime • ${Math.abs(elevationDegrees).toFixed(1)}° below horizon` : elevationDegrees < 10 ? `🌅 Golden Hour • ${elevationDegrees.toFixed(1)}° above horizon` : `☀️ Daylight • ${elevationDegrees.toFixed(1)}° above horizon`}\n                            </div>\n                          </div>\n                          <style>\n                            @keyframes rotate {\n                              from { transform: rotate(0deg); }\n                              to { transform: rotate(360deg); }\n                            }\n                            .map-sun-marker:hover {\n                              transform: scale(1.1) !important;\n                            }\n                            .map-sun-marker:hover .map-sun-tooltip {\n                              opacity: 1 !important;\n                              visibility: visible !important;\n                            }\n                          </style>\n                        `,\n                    iconSize: [40, 40],\n                    iconAnchor: [20, 20]\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Popup, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\u2600\\uFE0F Real Sun Position\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1479,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1479,\n                        columnNumber: 64\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Recommended Seat:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1480,\n                        columnNumber: 27\n                      }, this), \" \", flightData.recommendation === 'left' ? 'Left' : 'Right', \" Side\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1480,\n                        columnNumber: 124\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Sun Azimuth:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1481,\n                        columnNumber: 27\n                      }, this), \" \", (_currentSunPosition$a = currentSunPosition.azimuth) === null || _currentSunPosition$a === void 0 ? void 0 : _currentSunPosition$a.toFixed(1), \"\\xB0 (from South)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1481,\n                        columnNumber: 111\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Sun Elevation:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1482,\n                        columnNumber: 27\n                      }, this), \" \", (_currentSunPosition$e = currentSunPosition.elevation) === null || _currentSunPosition$e === void 0 ? void 0 : _currentSunPosition$e.toFixed(1), \"\\xB0 (above horizon)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1482,\n                        columnNumber: 118\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Map Bearing:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1483,\n                        columnNumber: 27\n                      }, this), \" \", sunBearing.toFixed(1), \"\\xB0 (from North)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1483,\n                        columnNumber: 94\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Flight Direction:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1484,\n                        columnNumber: 27\n                      }, this), \" \", flightBearing.toFixed(1), \"\\xB0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1484,\n                        columnNumber: 89\n                      }, this), elevationDegrees < 0 && /*#__PURE__*/_jsxDEV(\"em\", {\n                        style: {\n                          color: '#ff6b6b'\n                        },\n                        children: \"Sun below horizon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1485,\n                        columnNumber: 52\n                      }, this), elevationDegrees >= 0 && elevationDegrees < 10 && /*#__PURE__*/_jsxDEV(\"em\", {\n                        style: {\n                          color: '#ffa500'\n                        },\n                        children: \"Sun near horizon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1486,\n                        columnNumber: 78\n                      }, this), elevationDegrees >= 10 && /*#__PURE__*/_jsxDEV(\"em\", {\n                        style: {\n                          color: '#4dabf7'\n                        },\n                        children: \"Sun well above horizon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1487,\n                        columnNumber: 54\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1478,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1477,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1391,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n                  positions: [[currentPosition.lat, currentPosition.lon], [sunLat, sunLon]],\n                  color: \"#ffd700\",\n                  weight: 3,\n                  opacity: 0.8,\n                  dashArray: \"10, 5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1493,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true);\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `resize-divider ${isDraggingResize ? 'dragging' : ''}`,\n          onMouseDown: handleResizeMouseDown,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"resize-handle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resize-dots\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1516,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1517,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1518,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1515,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1514,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-details\",\n          style: {\n            width: `${100 - mapWidth}%`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flight-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2708\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1527,\n                columnNumber: 17\n              }, this), \"Flight Results\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flight-route\",\n              children: [fromAirport, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"route-arrow\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1532,\n                columnNumber: 17\n              }, this), toAirport]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1530,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-indicator\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scroll-hint\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"scroll-icon\",\n                children: \"\\u2B07\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1540,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"scroll-text\",\n                children: \"Scroll for Flight Timeline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1541,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1539,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1538,\n            columnNumber: 13\n          }, this), flightData.enhancedAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"enhanced-analysis-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"section-icon\",\n                  children: \"\\uD83D\\uDD2E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1550,\n                  columnNumber: 21\n                }, this), \"Flight Sun Analysis\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1549,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"analysis-summary\",\n                children: flightData.enhancedAnalysis.summary.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-message\",\n                  children: message\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1557,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1555,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"analysis-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\uD83C\\uDF05\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1566,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Sunrise\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1567,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `stat-value ${flightData.enhancedAnalysis.willSeeSunrise ? 'positive' : 'negative'}`,\n                    children: flightData.enhancedAnalysis.willSeeSunrise ? 'YES' : 'NO'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1568,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1565,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\uD83C\\uDF07\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1573,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Sunset\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1574,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `stat-value ${flightData.enhancedAnalysis.willSeeSunset ? 'positive' : 'negative'}`,\n                    children: flightData.enhancedAnalysis.willSeeSunset ? 'YES' : 'NO'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1575,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1572,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\uD83C\\uDF19\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1580,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Night\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1581,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `stat-value ${flightData.enhancedAnalysis.willSeeNight ? 'positive' : 'negative'}`,\n                    children: flightData.enhancedAnalysis.willSeeNight ? 'YES' : 'NO'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1582,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1579,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\u2728\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1587,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Golden Hour\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1588,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `stat-value ${flightData.enhancedAnalysis.willSeeGoldenHour ? 'positive' : 'negative'}`,\n                    children: flightData.enhancedAnalysis.willSeeGoldenHour ? 'YES' : 'NO'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1589,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1586,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1564,\n                columnNumber: 19\n              }, this), flightData.enhancedAnalysis.recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"analysis-recommendations\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\uD83D\\uDCA1 Recommendations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1598,\n                  columnNumber: 23\n                }, this), flightData.enhancedAnalysis.recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"recommendation-item\",\n                  children: rec\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1600,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1597,\n                columnNumber: 21\n              }, this), (flightData.enhancedAnalysis.sunrise || flightData.enhancedAnalysis.sunset) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-times\",\n                children: [flightData.enhancedAnalysis.sunrise && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-time sunrise\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"event-icon\",\n                    children: \"\\uD83C\\uDF05\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1612,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"event-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-label\",\n                      children: \"Sunrise\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1614,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-time-value\",\n                      children: flightData.enhancedAnalysis.sunrise.timeString\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1615,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-progress\",\n                      children: [Math.round(flightData.enhancedAnalysis.sunrise.progressPercent), \"% through flight\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1616,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1613,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1611,\n                  columnNumber: 25\n                }, this), flightData.enhancedAnalysis.sunset && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-time sunset\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"event-icon\",\n                    children: \"\\uD83C\\uDF07\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1624,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"event-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-label\",\n                      children: \"Sunset\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1626,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-time-value\",\n                      children: flightData.enhancedAnalysis.sunset.timeString\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1627,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-progress\",\n                      children: [Math.round(flightData.enhancedAnalysis.sunset.progressPercent), \"% through flight\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1628,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1625,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1623,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1609,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1548,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1547,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seat-comparison-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Seat Recommendations & View Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1643,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seat-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `seat-option ${flightData.recommendation === 'left' ? 'recommended' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"seat-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"\\uD83E\\uDE9F Left Side Seats (A, B)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1649,\n                      columnNumber: 21\n                    }, this), flightData.recommendation === 'left' && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"recommended-badge\",\n                      children: \"\\u2B50 Recommended\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1650,\n                      columnNumber: 62\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1648,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"view-counts\",\n                    children: ((_flightData$enhancedA, _flightData$enhancedA2, _flightData$enhancedA3) => {\n                      const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF05\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1659,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Sunrise Views: \", (_flightData$enhancedA = flightData.enhancedAnalysis) !== null && _flightData$enhancedA !== void 0 && _flightData$enhancedA.willSeeSunrise ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1660,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1658,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF07\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1663,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Sunset Views: \", (_flightData$enhancedA2 = flightData.enhancedAnalysis) !== null && _flightData$enhancedA2 !== void 0 && _flightData$enhancedA2.willSeeSunset ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1664,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1662,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF19\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1667,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Night Views: \", (_flightData$enhancedA3 = flightData.enhancedAnalysis) !== null && _flightData$enhancedA3 !== void 0 && _flightData$enhancedA3.willSeeNight ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1668,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1666,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDFD4\\uFE0F\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1671,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Mountain Views: \", wantMountainView ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1672,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1670,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true);\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1653,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1647,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `seat-option ${flightData.recommendation === 'right' ? 'recommended' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"seat-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"\\uD83E\\uDE9F Right Side Seats (E, F)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1683,\n                      columnNumber: 21\n                    }, this), flightData.recommendation === 'right' && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"recommended-badge\",\n                      children: \"\\u2B50 Recommended\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1684,\n                      columnNumber: 63\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1682,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"view-counts\",\n                    children: ((_flightData$enhancedA4, _flightData$enhancedA5, _flightData$enhancedA6) => {\n                      const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF05\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1693,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Sunrise Views: \", (_flightData$enhancedA4 = flightData.enhancedAnalysis) !== null && _flightData$enhancedA4 !== void 0 && _flightData$enhancedA4.willSeeSunrise ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1694,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1692,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF07\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1697,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Sunset Views: \", (_flightData$enhancedA5 = flightData.enhancedAnalysis) !== null && _flightData$enhancedA5 !== void 0 && _flightData$enhancedA5.willSeeSunset ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1698,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1696,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF19\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1701,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Night Views: \", (_flightData$enhancedA6 = flightData.enhancedAnalysis) !== null && _flightData$enhancedA6 !== void 0 && _flightData$enhancedA6.willSeeNight ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1702,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1700,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDFD4\\uFE0F\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1705,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Mountain Views: \", wantMountainView ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1706,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1704,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true);\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1687,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1681,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1645,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1642,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1641,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: currentSunPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-view-card slide-up\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"section-icon\",\n                  children: \"\\uD83D\\uDCCA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1722,\n                  columnNumber: 19\n                }, this), \"Current View Analysis\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1721,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"view-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"view-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-label\",\n                    children: \"Aircraft Position:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1727,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-value\",\n                    children: [(_currentPosition$lat$ = currentPosition === null || currentPosition === void 0 ? void 0 : (_currentPosition$lat = currentPosition.lat) === null || _currentPosition$lat === void 0 ? void 0 : _currentPosition$lat.toFixed(4)) !== null && _currentPosition$lat$ !== void 0 ? _currentPosition$lat$ : '--', \", \", (_currentPosition$lon$ = currentPosition === null || currentPosition === void 0 ? void 0 : (_currentPosition$lon = currentPosition.lon) === null || _currentPosition$lon === void 0 ? void 0 : _currentPosition$lon.toFixed(4)) !== null && _currentPosition$lon$ !== void 0 ? _currentPosition$lon$ : '--']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1728,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1726,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"view-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-label\",\n                    children: \"Sun Elevation:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1733,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-value\",\n                    children: [(_currentSunPosition$e2 = (_currentSunPosition$e3 = currentSunPosition.elevation) === null || _currentSunPosition$e3 === void 0 ? void 0 : _currentSunPosition$e3.toFixed(1)) !== null && _currentSunPosition$e2 !== void 0 ? _currentSunPosition$e2 : '--', \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1734,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1732,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"view-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-label\",\n                    children: \"Sun Azimuth:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1737,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-value\",\n                    children: [(_currentSunPosition$a2 = (_currentSunPosition$a3 = currentSunPosition.azimuth) === null || _currentSunPosition$a3 === void 0 ? void 0 : _currentSunPosition$a3.toFixed(1)) !== null && _currentSunPosition$a2 !== void 0 ? _currentSunPosition$a2 : '--', \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1738,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1736,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"view-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-label\",\n                    children: \"Sun Visibility:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1741,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-value\",\n                    children: currentSunPosition ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sun-tooltip-container\",\n                        children: [currentSunPosition.condition ? getSunConditionMarker(currentSunPosition.condition) : '☀️', /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `sun-tooltip ${currentSunPosition.condition ? currentSunPosition.condition.toLowerCase() : 'daylight'}`,\n                          children: currentSunPosition.condition ? getSunTooltipContent(currentSunPosition) : `Sun • ${((_currentSunPosition$e4 = currentSunPosition.elevation) === null || _currentSunPosition$e4 === void 0 ? void 0 : _currentSunPosition$e4.toFixed(1)) || '--'}° above horizon`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1747,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1745,\n                        columnNumber: 27\n                      }, this), ' ', currentSunPosition.condition === 'NIGHT' ? 'Below Horizon' : 'Visible']\n                    }, void 0, true) : 'Not Available'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1742,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1740,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1725,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1720,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flight-progress-container slide-up\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"section-icon\",\n                  children: \"\\uD83D\\uDD50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1768,\n                  columnNumber: 17\n                }, this), \"Flight Timeline\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1767,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"progress-instructions\",\n                children: \"Drag the slider to explore different moments of your flight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1772,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-slider-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-labels\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-icon\",\n                      children: \"\\uD83D\\uDEEB\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1779,\n                      columnNumber: 21\n                    }, this), \"Departure\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1778,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-icon\",\n                      children: \"\\uD83D\\uDEEC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1783,\n                      columnNumber: 21\n                    }, this), \"Arrival\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1782,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1777,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"horizontal-slider-container\",\n                  onMouseDown: handleMouseDown,\n                  onClick: handleClick,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"horizontal-slider-track\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"horizontal-progress-bar\",\n                      style: {\n                        width: `${flightProgress}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1794,\n                      columnNumber: 21\n                    }, this), ((_periods$sunriseTime, _periods$sunsetTime) => {\n                      const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [periods.sunriseProgress !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"timeline-event-marker sunrise-marker\",\n                          style: {\n                            left: `${periods.sunriseProgress}%`\n                          },\n                          title: `Sunrise at ${(_periods$sunriseTime = periods.sunriseTime) === null || _periods$sunriseTime === void 0 ? void 0 : _periods$sunriseTime.toLocaleTimeString([], {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}`,\n                          children: \"\\uD83C\\uDF05\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1807,\n                          columnNumber: 29\n                        }, this), periods.sunsetProgress !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"timeline-event-marker sunset-marker\",\n                          style: {\n                            left: `${periods.sunsetProgress}%`\n                          },\n                          title: `Sunset at ${(_periods$sunsetTime = periods.sunsetTime) === null || _periods$sunsetTime === void 0 ? void 0 : _periods$sunsetTime.toLocaleTimeString([], {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}`,\n                          children: \"\\uD83C\\uDF07\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1816,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true);\n                    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"horizontal-slider-handle\",\n                      style: {\n                        left: `${flightProgress}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1828,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1793,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1788,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-display\",\n                  children: [\"Flight Progress: \", Math.round(flightProgress), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1837,\n                  columnNumber: 17\n                }, this), (() => {\n                  const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                  if (periods.sunrise || periods.sunset) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"sun-events-info\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        style: {\n                          margin: '10px 0 5px 0',\n                          fontSize: '14px',\n                          color: '#ffd700'\n                        },\n                        children: \"\\u2600\\uFE0F Sun Events During Flight\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1847,\n                        columnNumber: 25\n                      }, this), periods.details.map((detail, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: '12px',\n                          margin: '3px 0',\n                          color: '#e2e8f0'\n                        },\n                        children: detail\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1851,\n                        columnNumber: 27\n                      }, this)), periods.sunrise && periods.sunset && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: '11px',\n                          margin: '5px 0',\n                          color: '#10b981',\n                          fontWeight: 'bold'\n                        },\n                        children: \"\\uD83C\\uDF1F Perfect flight for both sunrise and sunset viewing!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1856,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1846,\n                      columnNumber: 23\n                    }, this);\n                  }\n                  return null;\n                })()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1776,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1766,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1765,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1523,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1292,\n    columnNumber: 5\n  }, this);\n};\n_s2(ResultsPage, \"ZLqbH/FqDX809no3RBfJ71w0fnY=\");\n_c3 = ResultsPage;\nfunction App() {\n  _s3();\n  // Page navigation state\n  const [currentPage, setCurrentPage] = useState(AppPage.SEARCH);\n\n  // Form data state - All fields start empty\n  const [fromAirport, setFromAirport] = useState('');\n  const [toAirport, setToAirport] = useState('');\n  const [departureTime, setDepartureTime] = useState('');\n  const [flightDuration, setFlightDuration] = useState(''); // Start empty\n  const [flightData, setFlightData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [flightProgress, setFlightProgress] = useState(0);\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [currentSunPosition, setCurrentSunPosition] = useState(null);\n\n  // View Preferences State\n  const [wantSunrise, setWantSunrise] = useState(false);\n  const [wantSunset, setWantSunset] = useState(false);\n  const [wantMountainView, setWantMountainView] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Helper functions for flight duration calculations\n  const getFlightEndTime = () => {\n    if (!departureTime || !flightDuration) {\n      return new Date(); // Return current time if invalid\n    }\n    const startTime = new Date(departureTime);\n    const endTime = new Date(startTime.getTime() + Number(flightDuration) * 60 * 1000); // Convert minutes to milliseconds\n    return endTime;\n  };\n  const formatTimeDisplay = date => {\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Comprehensive form validation\n    if (!fromAirport || !toAirport || !departureTime || !flightDuration) {\n      setError('Please fill all the details including departure airport, arrival airport, departure time, and flight duration.');\n      setLoading(false);\n      return;\n    }\n\n    // Check if at least one viewing preference is selected\n    if (!wantSunrise && !wantSunset && !wantMountainView) {\n      setError('Please select at least one viewing preference (sunrise, sunset, or mountain views) to get seat recommendations.');\n      setLoading(false);\n      return;\n    }\n\n    // Check if source and destination are the same\n    if (fromAirport === toAirport) {\n      setError('No flights available for the same source and destination airports. Please select different departure and arrival airports.');\n      setLoading(false);\n      return;\n    }\n\n    // Validate flight duration\n    if (typeof flightDuration === 'string' || flightDuration < 30 || flightDuration > 1440) {\n      setError('Flight duration must be a number between 30 and 1440 minutes (24 hours).');\n      setLoading(false);\n      return;\n    }\n\n    // SIMPLIFIED APPROACH: Generate flight analysis directly in frontend\n    try {\n      console.log('Generating simplified flight analysis...');\n      const mockFlightData = generateSimplifiedFlightAnalysis(fromAirport, toAirport, departureTime, flightDuration);\n      setFlightData(mockFlightData);\n\n      // Set initial flight progress to 0% (departure)\n      setFlightProgress(0);\n      console.log('Simplified flight analysis completed:', mockFlightData);\n\n      // Navigate to results page\n      setCurrentPage(AppPage.RESULTS);\n    } catch (err) {\n      setError('Unable to generate flight analysis. Please check your input and try again.');\n      console.error('Error generating flight analysis:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleProgressChange = useCallback(newProgress => {\n    setFlightProgress(newProgress);\n  }, []);\n\n  // Throttled version for smooth dragging with optimized frequency\n  const throttledProgressChange = useCallback(throttle(newProgress => {\n    setFlightProgress(newProgress);\n  }, 8),\n  // ~120 FPS for ultra-smooth airplane movement\n  []);\n  const handleClick = e => {\n    e.preventDefault();\n\n    // Immediately update position on click for instant feedback\n    if (flightData) {\n      const sliderElement = e.currentTarget.closest('.horizontal-slider-container');\n      if (sliderElement) {\n        const rect = sliderElement.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        let percentage = x / rect.width * 100;\n\n        // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n        if (percentage > 95) percentage = 100;\n        if (percentage < 5) percentage = 0;\n        percentage = Math.max(0, Math.min(100, percentage));\n\n        // Immediately update the visual elements without waiting for React state\n        const handle = document.querySelector('.horizontal-slider-handle');\n        const progressBar = document.querySelector('.horizontal-progress-bar');\n        const progressText = document.querySelector('.progress-display');\n        if (handle) handle.style.left = `${percentage}%`;\n        if (progressBar) progressBar.style.width = `${percentage}%`;\n        if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n        handleProgressChange(percentage);\n      }\n    }\n  };\n  const handleMouseDown = e => {\n    e.preventDefault();\n    setIsDragging(true);\n    const sliderElement = e.currentTarget;\n    let isDraggingLocal = true;\n\n    // Function to update slider position\n    const updateSliderPosition = clientX => {\n      if (!flightData || !sliderElement) return;\n      const rect = sliderElement.getBoundingClientRect();\n      const x = clientX - rect.left;\n      let percentage = x / rect.width * 100;\n\n      // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n      if (percentage > 95) percentage = 100;\n      if (percentage < 5) percentage = 0;\n      percentage = Math.max(0, Math.min(100, percentage));\n\n      // INSTANT updates - both visual and airplane position\n      const handle = document.querySelector('.horizontal-slider-handle');\n      const progressBar = document.querySelector('.horizontal-progress-bar');\n      const progressText = document.querySelector('.progress-display');\n      if (handle) handle.style.left = `${percentage}%`;\n      if (progressBar) progressBar.style.width = `${percentage}%`;\n      if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n\n      // IMMEDIATE React state update\n      setFlightProgress(percentage);\n    };\n\n    // Initial update on mouse down\n    updateSliderPosition(e.clientX);\n\n    // Mouse move handler\n    const mouseMoveHandler = e => {\n      e.preventDefault();\n      if (!isDraggingLocal) return;\n      updateSliderPosition(e.clientX);\n    };\n\n    // Mouse up handler\n    const mouseUpHandler = () => {\n      isDraggingLocal = false;\n      setIsDragging(false);\n      document.removeEventListener('mousemove', mouseMoveHandler);\n      document.removeEventListener('mouseup', mouseUpHandler);\n    };\n    document.addEventListener('mousemove', mouseMoveHandler, {\n      passive: false\n    });\n    document.addEventListener('mouseup', mouseUpHandler, {\n      passive: false\n    });\n  };\n  const handlePositionChange = position => {\n    setCurrentPosition({\n      lat: position.lat,\n      lon: position.lon\n    });\n    setCurrentSunPosition(position.sunPosition);\n  };\n\n  // Navigation function to go back to search\n  const goBackToSearch = () => {\n    setCurrentPage(AppPage.SEARCH);\n    setError(null); // Clear any errors when going back\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: currentPage === AppPage.SEARCH ? /*#__PURE__*/_jsxDEV(SearchPage, {\n      fromAirport: fromAirport,\n      setFromAirport: setFromAirport,\n      toAirport: toAirport,\n      setToAirport: setToAirport,\n      departureTime: departureTime,\n      setDepartureTime: setDepartureTime,\n      flightDuration: flightDuration,\n      setFlightDuration: setFlightDuration,\n      wantSunrise: wantSunrise,\n      setWantSunrise: setWantSunrise,\n      wantSunset: wantSunset,\n      setWantSunset: setWantSunset,\n      wantMountainView: wantMountainView,\n      setWantMountainView: setWantMountainView,\n      loading: loading,\n      error: error,\n      onSubmit: handleSubmit,\n      formatTimeDisplay: formatTimeDisplay,\n      getFlightEndTime: getFlightEndTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2099,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ResultsPage, {\n      flightData: flightData,\n      fromAirport: fromAirport,\n      toAirport: toAirport,\n      currentPosition: currentPosition,\n      currentSunPosition: currentSunPosition,\n      flightProgress: flightProgress,\n      handleProgressChange: handleProgressChange,\n      handlePositionChange: handlePositionChange,\n      isDragging: isDragging,\n      handleMouseDown: handleMouseDown,\n      handleClick: handleClick,\n      onBack: goBackToSearch,\n      departureTime: departureTime,\n      flightDuration: flightDuration,\n      wantMountainView: wantMountainView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2121,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2097,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"2L6norplKMmZL5p0Fp7KBaZS1ow=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"InteractiveAirplane\");\n$RefreshReg$(_c2, \"SearchPage\");\n$RefreshReg$(_c3, \"ResultsPage\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","MapContainer","TileLayer","Marker","Popup","Polyline","L","jsxDEV","_jsxDEV","Fragment","_Fragment","throttle","func","delay","timeoutId","lastExecTime","args","currentTime","Date","now","clearTimeout","setTimeout","Icon","Default","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","AIRPORTS","generateSimplifiedFlightAnalysis","fromAirport","toAirport","departureTime","flightDuration","console","log","fromCoords","toCoords","Error","depTime","arrivalTime","getTime","path","i","fraction","lat","lon","push","enhancedAnalysis","generateBasicSunAnalysis","sunPositions","map","waypoint","index","timeAtWaypoint","hour","getHours","minute","getMinutes","timeInMinutes","lonDiff","elevation","Math","random","azimuth","depHour","depMinute","depTimeInMinutes","GOLDEN_HOUR_BEFORE_SUNRISE_START","GOLDEN_HOUR_BEFORE_SUNRISE_END","SUNRISE_START","SUNRISE_END","SUN_VISIBLE_START","SUN_VISIBLE_END","GOLDEN_HOUR_BEFORE_SUNSET_START","GOLDEN_HOUR_BEFORE_SUNSET_END","SUNSET_START","SUNSET_END","condition","time","toISOString","recommendation","seatSuggestion","arrHour","arrMinute","toString","padStart","depTimeMinutes","arrTimeMinutes","NIGHT_START","NIGHT_END","willSeeGoldenHourBeforeSunrise","willSeeSunrise","willSeeSunVisible","willSeeGoldenHourBeforeSunset","willSeeSunset","willSeeNight","isOvernightFlight","checkTimeOverlap","startMinutes","endMinutes","day1Overlap","day2Overlap","willSeeGoldenHour","summary","recommendations","nightHours","calculateNightHours","determineSeatSuggestion","timeline","nightDuration","dayDuration","arrTime","max","latDiff","getSunConditionMarker","getSunTooltipContent","sunPos","_sunPos$elevation2","_sunPos$elevation","toFixed","abs","marker","calculateBearing","lat1","lon1","lat2","lon2","dLon","PI","lat1Rad","lat2Rad","y","sin","cos","x","bearing","atan2","createAirplaneIcon","rotation","divIcon","className","html","iconSize","iconAnchor","InteractiveAirplane","flightData","flightProgress","onPositionChange","_s","airplaneRef","getCurrentAirplaneData","length","position","totalDistance","exactProgress","currentIndex","floor","nextIndex","min","currentWaypoint","nextWaypoint","progressInSegment","prevIndex","prevWaypoint","currentPosition","airplaneRotation","currentSunPosition","sunProgress","sunIndex","nextSunIndex","currentSun","nextSun","sunProgressInSegment","sunPosition","current","leafletElement","_map","setView","getZoom","animate","duration","ref","icon","draggable","interactive","bubblingMouseEvents","eventHandlers","dragstart","e","_preventDefault","_ref","preventDefault","call","drag","_preventDefault2","_ref2","dragend","_preventDefault3","_ref3","mousedown","_e$originalEvent","originalEvent","mouseup","_e$originalEvent2","mousemove","_e$originalEvent3","add","element","getElement","style","pointerEvents","userSelect","touchAction","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AppPage","SearchPage","setFromAirport","setToAirport","setDepartureTime","setFlightDuration","wantSunrise","setWantSunrise","wantSunset","setWantSunset","wantMountainView","setWantMountainView","loading","error","onSubmit","formatTimeDisplay","getFlightEndTime","htmlFor","id","value","onChange","target","required","label","type","step","intValue","parseInt","isNaN","placeholder","marginTop","display","color","fontSize","Number","checked","marginBottom","disabled","width","height","border","borderTop","_c2","getOptimalPeriodsInFlight","_flightData$path","_flightData$sunPositi","sunrise","sunset","details","startTime","endTime","sunriseInFlight","sunsetInFlight","sunriseTime","sunsetTime","sunriseProgress","sunsetProgress","forEach","prevSunPos","toLocaleTimeString","ResultsPage","handleProgressChange","handlePositionChange","isDragging","handleMouseDown","handleClick","onBack","_s2","_currentPosition$lat$","_currentPosition$lat","_currentPosition$lon$","_currentPosition$lon","_currentSunPosition$e2","_currentSunPosition$e3","_currentSunPosition$a2","_currentSunPosition$a3","_currentSunPosition$e4","mapWidth","setMapWidth","isDraggingResize","setIsDraggingResize","handleResizeMouseDown","handleMouseMove","containerWidth","window","innerWidth","newMapWidth","clientX","constrainedWidth","handleMouseUp","document","removeEventListener","addEventListener","adjustTooltipPositions","tooltipContainers","querySelectorAll","container","rect","getBoundingClientRect","viewportWidth","classList","remove","right","left","onClick","center","zoom","url","attribution","positions","wp","weight","_currentSunPosition$a","_currentSunPosition$e","startPoint","endPoint","flightBearing","sunBearing","elevationDegrees","sunDistance","sunLat","sunLon","opacity","dashArray","onMouseDown","message","rec","timeString","round","progressPercent","_flightData$enhancedA","_flightData$enhancedA2","_flightData$enhancedA3","periods","_flightData$enhancedA4","_flightData$enhancedA5","_flightData$enhancedA6","toLowerCase","_periods$sunriseTime","_periods$sunsetTime","undefined","title","margin","detail","fontWeight","_c3","App","_s3","currentPage","setCurrentPage","SEARCH","setFlightData","setLoading","setError","setFlightProgress","setCurrentPosition","setCurrentSunPosition","setIsDragging","date","hour12","handleSubmit","mockFlightData","RESULTS","err","newProgress","throttledProgressChange","sliderElement","currentTarget","closest","percentage","handle","querySelector","progressBar","progressText","textContent","isDraggingLocal","updateSliderPosition","mouseMoveHandler","mouseUpHandler","passive","goBackToSearch","_c4","$RefreshReg$"],"sources":["C:/Users/prakh/Desktop/Flight/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport './index.css';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\n\n// Throttle function for smooth slider performance\nconst throttle = (func: Function, delay: number) => {\n  let timeoutId: number | null = null;\n  let lastExecTime = 0;\n  return (...args: any[]) => {\n    const currentTime = Date.now();\n    \n    if (currentTime - lastExecTime > delay) {\n      func(...args);\n      lastExecTime = currentTime;\n    } else {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        func(...args);\n        lastExecTime = Date.now();\n      }, delay - (currentTime - lastExecTime));\n    }\n  };\n};\n\n// Fix for default markers\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\n// Types\ninterface Waypoint {\n  lat: number;\n  lon: number;\n}\n\ntype SunCondition = \n  | 'GOLDEN_HOUR_BEFORE_SUNRISE'\n  | 'SUNRISE'\n  | 'DAYLIGHT'\n  | 'GOLDEN_HOUR_BEFORE_SUNSET'\n  | 'SUNSET'\n  | 'NIGHT';\n\ninterface SunPosition {\n  lat: number;\n  lon: number;\n  time: string;\n  azimuth: number;\n  elevation: number;\n  condition?: SunCondition; // Optional for backward compatibility\n}\n\ninterface EnhancedSunAnalysis {\n  willSeeSunrise: boolean;\n  willSeeSunset: boolean;\n  willSeeNight: boolean;\n  willSeeGoldenHour: boolean;\n  sunrise?: {\n    time: string;\n    timeString: string;\n    location: string;\n    progressPercent: number;\n  };\n  sunset?: {\n    time: string;\n    timeString: string;\n    location: string;\n    progressPercent: number;\n  };\n  summary: string[];\n  recommendations: string[];\n  seatSuggestion: 'left' | 'right' | 'either';\n  timeline: Array<{\n    time: string;\n    timeString: string;\n    lat: number;\n    lon: number;\n    sunElevation: number;\n    sunAzimuth: number;\n    condition: 'NIGHT' | 'TWILIGHT' | 'GOLDEN_HOUR' | 'DAYLIGHT';\n    progressPercent: number;\n  }>;\n  nightDuration?: number;\n  dayDuration?: number;\n}\n\ninterface FlightData {\n  path: Waypoint[];\n  sunPositions: SunPosition[];\n  recommendation: string;\n  distance?: number;\n  flightTime?: number;\n  enhancedAnalysis?: EnhancedSunAnalysis;\n}\n\n// Airport coordinates database\nconst AIRPORTS: { [key: string]: [number, number] } = {\n  // Indian Airports\n  'DEL': [28.5562, 77.1000], // Delhi\n  'BOM': [19.0896, 72.8656], // Mumbai\n  'BLR': [12.9716, 77.5946], // Bangalore\n  'MAA': [12.9941, 80.1709], // Chennai\n  'CCU': [22.6547, 88.4467], // Kolkata\n  'HYD': [17.2403, 78.4294], // Hyderabad\n  'COK': [9.9312, 76.2673],  // Kochi\n  'GOI': [15.3808, 73.8314], // Goa\n  'AMD': [23.0725, 72.6347], // Ahmedabad\n  'PNQ': [18.5679, 73.9143], // Pune\n  'BHO': [23.2599, 77.4126], // Bhopal\n  'JAI': [26.9124, 75.7873], // Jaipur\n  'LKO': [26.7606, 80.8843], // Lucknow\n  \n  // International Airports\n  'JFK': [40.6413, -73.7781], // New York JFK\n  'LHR': [51.4700, -0.4543],  // London Heathrow\n  'NRT': [35.7720, 140.3929], // Tokyo Narita\n  'LAX': [33.9425, -118.4081], // Los Angeles\n  'DXB': [25.2532, 55.3657],  // Dubai\n  'SIN': [1.3644, 103.9915],  // Singapore\n  'SYD': [-33.9461, 151.1772], // Sydney\n  'CDG': [49.0097, 2.5479],   // Paris Charles de Gaulle\n  'FRA': [50.0379, 8.5622],   // Frankfurt\n  'HKG': [22.3080, 113.9185], // Hong Kong\n  'ICN': [37.4602, 126.4407], // Seoul Incheon\n  'BKK': [13.6900, 100.7501], // Bangkok\n  'DOH': [25.2731, 51.6080],  // Doha\n  'IST': [41.2619, 28.7414],  // Istanbul\n  'MAD': [40.4719, -3.5626]   // Madrid\n};\n\n// Simplified flight analysis function\nconst generateSimplifiedFlightAnalysis = (\n  fromAirport: string,\n  toAirport: string,\n  departureTime: string,\n  flightDuration: number\n): FlightData => {\n  console.log(`Analyzing flight: ${fromAirport} → ${toAirport}, ${departureTime}, ${flightDuration} min`);\n  \n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  \n  if (!fromCoords || !toCoords) {\n    throw new Error(`Unknown airport: ${fromAirport} or ${toAirport}`);\n  }\n\n  // Parse departure time\n  const depTime = new Date(departureTime);\n  const arrivalTime = new Date(depTime.getTime() + flightDuration * 60 * 1000);\n  \n  // Generate basic flight path (5 waypoints)\n  const path: Waypoint[] = [];\n  for (let i = 0; i <= 4; i++) {\n    const fraction = i / 4;\n    const lat = fromCoords[0] + (toCoords[0] - fromCoords[0]) * fraction;\n    const lon = fromCoords[1] + (toCoords[1] - fromCoords[1]) * fraction;\n    path.push({ lat, lon });\n  }\n\n  // Generate basic sun analysis\n  const enhancedAnalysis = generateBasicSunAnalysis(\n    fromAirport,\n    toAirport,\n    depTime,\n    arrivalTime,\n    flightDuration\n  );\n\n  // Generate sun positions with correct side placement based on flight direction\n  const sunPositions: SunPosition[] = path.map((waypoint, index) => {\n    const timeAtWaypoint = new Date(depTime.getTime() + (index / 4) * flightDuration * 60 * 1000);\n    const hour = timeAtWaypoint.getHours();\n    const minute = timeAtWaypoint.getMinutes();\n    const timeInMinutes = hour * 60 + minute;\n    \n    // Calculate flight direction\n    const fromCoords = AIRPORTS[fromAirport];\n    const toCoords = AIRPORTS[toAirport];\n    const lonDiff = toCoords[1] - fromCoords[1]; // + means flying east, - means flying west\n    \n    // Simplified sun elevation based on time of day\n    let elevation: number;\n    if (hour >= 6 && hour <= 8) elevation = Math.random() * 10; // Sunrise\n    else if (hour >= 18 && hour <= 20) elevation = Math.random() * 10; // Sunset\n    else if (hour >= 9 && hour <= 17) elevation = 30 + Math.random() * 40; // Day\n    else elevation = -10 - Math.random() * 20; // Night\n    \n    // Calculate azimuth based on flight direction and DEPARTURE time (not current time)\n    let azimuth: number;\n    \n    // Use departure time to determine sun position for the entire flight\n    const depHour = depTime.getHours();\n    const depMinute = depTime.getMinutes();\n    const depTimeInMinutes = depHour * 60 + depMinute;\n    \n    // Define time intervals in minutes (same as in generateBasicSunAnalysis)\n    const GOLDEN_HOUR_BEFORE_SUNRISE_START = 4 * 60;    // 4:00 AM\n    const GOLDEN_HOUR_BEFORE_SUNRISE_END = 4 * 60 + 59; // 4:59 AM\n    const SUNRISE_START = 5 * 60;                       // 5:00 AM\n    const SUNRISE_END = 8 * 60;                          // 8:00 AM\n    const SUN_VISIBLE_START = 8 * 60 + 1;                // 8:01 AM\n    const SUN_VISIBLE_END = 17 * 60;                     // 5:00 PM\n    const GOLDEN_HOUR_BEFORE_SUNSET_START = 17 * 60 + 1; // 5:01 PM\n    const GOLDEN_HOUR_BEFORE_SUNSET_END = 17 * 60 + 59;  // 5:59 PM\n    const SUNSET_START = 18 * 60;                        // 6:00 PM\n    const SUNSET_END = 19 * 60;                          // 7:00 PM\n    \n    // Determine sun condition based on CURRENT WAYPOINT TIME (not just departure time)\n    let condition: SunCondition;\n    \n    if (timeInMinutes >= SUNRISE_START && timeInMinutes <= SUNRISE_END) {\n      // Sunrise (5:00 AM - 8:00 AM)\n      condition = 'SUNRISE';\n      azimuth = lonDiff < 0 ? 270 : 90; // West flight: east side (270°), East flight: west side (90°)\n    } else if (timeInMinutes >= GOLDEN_HOUR_BEFORE_SUNRISE_START && timeInMinutes <= GOLDEN_HOUR_BEFORE_SUNRISE_END) {\n      // Golden hour before sunrise (4:00 AM - 4:59 AM)\n      condition = 'GOLDEN_HOUR_BEFORE_SUNRISE';\n      azimuth = lonDiff < 0 ? 270 : 90; // West flight: east side (270°), East flight: west side (90°)\n    } else if (timeInMinutes >= SUN_VISIBLE_START && timeInMinutes <= SUN_VISIBLE_END) {\n      // Day time (8:01 AM - 5:00 PM)\n      condition = 'DAYLIGHT';\n      azimuth = 180; // South\n    } else if (timeInMinutes >= SUNSET_START && timeInMinutes <= SUNSET_END) {\n      // Sunset (6:00 PM - 7:00 PM)\n      condition = 'SUNSET';\n      azimuth = lonDiff < 0 ? 90 : 270; // West flight: west side (90°), East flight: east side (270°)\n    } else if (timeInMinutes >= GOLDEN_HOUR_BEFORE_SUNSET_START && timeInMinutes <= GOLDEN_HOUR_BEFORE_SUNSET_END) {\n      // Golden hour before sunset (5:01 PM - 5:59 PM)\n      condition = 'GOLDEN_HOUR_BEFORE_SUNSET';\n      azimuth = lonDiff < 0 ? 90 : 270; // West flight: west side (90°), East flight: east side (270°)\n    } else {\n      // Night time (7:01 PM - 3:59 AM)\n      condition = 'NIGHT';\n      azimuth = lonDiff < 0 ? 270 : 90; // Default to east side for night\n    }\n    \n    return {\n      lat: waypoint.lat,\n      lon: waypoint.lon,\n      time: timeAtWaypoint.toISOString(),\n      azimuth,\n      elevation,\n      condition\n    };\n  });\n\n  return {\n    path,\n    sunPositions,\n    recommendation: enhancedAnalysis.seatSuggestion,\n    enhancedAnalysis\n  };\n};\n\n// Enhanced sun analysis based on precise time intervals\nconst generateBasicSunAnalysis = (\n  fromAirport: string,\n  toAirport: string,\n  departureTime: Date,\n  arrivalTime: Date,\n  flightDuration: number\n): EnhancedSunAnalysis => {\n  \n  const depHour = departureTime.getHours();\n  const depMinute = departureTime.getMinutes();\n  const arrHour = arrivalTime.getHours();\n  const arrMinute = arrivalTime.getMinutes();\n  \n  console.log(`Flight time analysis: Dep ${depHour}:${depMinute.toString().padStart(2, '0')} → Arr ${arrHour}:${arrMinute.toString().padStart(2, '0')}`);\n  \n  // Convert times to minutes for easier comparison\n  const depTimeMinutes = depHour * 60 + depMinute;\n  const arrTimeMinutes = arrHour * 60 + arrMinute;\n  \n  // Define time intervals in minutes\n  const GOLDEN_HOUR_BEFORE_SUNRISE_START = 4 * 60;    // 4:00 AM\n  const GOLDEN_HOUR_BEFORE_SUNRISE_END = 4 * 60 + 59; // 4:59 AM\n  const SUNRISE_START = 5 * 60;                       // 5:00 AM\n  const SUNRISE_END = 8 * 60;                          // 8:00 AM\n  const SUN_VISIBLE_START = 8 * 60 + 1;                // 8:01 AM\n  const SUN_VISIBLE_END = 17 * 60;                     // 5:00 PM\n  const GOLDEN_HOUR_BEFORE_SUNSET_START = 17 * 60 + 1; // 5:01 PM\n  const GOLDEN_HOUR_BEFORE_SUNSET_END = 17 * 60 + 59;  // 5:59 PM\n  const SUNSET_START = 18 * 60;                        // 6:00 PM\n  const SUNSET_END = 19 * 60;                          // 7:00 PM\n  const NIGHT_START = 19 * 60 + 1;                     // 7:01 PM\n  const NIGHT_END = 3 * 60 + 59;                       // 3:59 AM\n  \n  // Initialize detection flags\n  let willSeeGoldenHourBeforeSunrise = false;\n  let willSeeSunrise = false;\n  let willSeeSunVisible = false;\n  let willSeeGoldenHourBeforeSunset = false;\n  let willSeeSunset = false;\n  let willSeeNight = false;\n  \n  // Check if flight crosses overnight boundary (departure > arrival)\n  const isOvernightFlight = depTimeMinutes > arrTimeMinutes;\n  \n  // Function to check if a time interval overlaps with flight time\n  const checkTimeOverlap = (startMinutes: number, endMinutes: number): boolean => {\n    if (isOvernightFlight) {\n      // For overnight flights, check both day 1 and day 2\n      const day1Overlap = (depTimeMinutes <= endMinutes && arrTimeMinutes >= startMinutes);\n      const day2Overlap = (depTimeMinutes <= (endMinutes + 24 * 60) && arrTimeMinutes >= (startMinutes + 24 * 60));\n      return day1Overlap || day2Overlap;\n    } else {\n      // For same-day flights\n      return (depTimeMinutes <= endMinutes && arrTimeMinutes >= startMinutes);\n    }\n  };\n  \n  // Check each time interval (prioritize main periods over golden hour)\n  willSeeSunrise = checkTimeOverlap(SUNRISE_START, SUNRISE_END);\n  willSeeSunset = checkTimeOverlap(SUNSET_START, SUNSET_END);\n  willSeeNight = checkTimeOverlap(NIGHT_START, NIGHT_END);\n  willSeeSunVisible = checkTimeOverlap(SUN_VISIBLE_START, SUN_VISIBLE_END);\n  \n  // Only check golden hour if not already in main sunrise/sunset periods\n  if (!willSeeSunrise) {\n    willSeeGoldenHourBeforeSunrise = checkTimeOverlap(GOLDEN_HOUR_BEFORE_SUNRISE_START, GOLDEN_HOUR_BEFORE_SUNRISE_END);\n  }\n  if (!willSeeSunset) {\n    willSeeGoldenHourBeforeSunset = checkTimeOverlap(GOLDEN_HOUR_BEFORE_SUNSET_START, GOLDEN_HOUR_BEFORE_SUNSET_END);\n  }\n  \n  // Golden hour is true if any golden hour period is detected\n  const willSeeGoldenHour = willSeeGoldenHourBeforeSunrise || willSeeGoldenHourBeforeSunset;\n  \n  console.log(`Detection Results:\n    Golden Hour Before Sunrise: ${willSeeGoldenHourBeforeSunrise}\n    Sunrise: ${willSeeSunrise}\n    Sun Visible: ${willSeeSunVisible}\n    Golden Hour Before Sunset: ${willSeeGoldenHourBeforeSunset}\n    Sunset: ${willSeeSunset}\n    Night: ${willSeeNight}\n    Golden Hour: ${willSeeGoldenHour}`);\n  \n  // Generate smart recommendations\n  const summary: string[] = [];\n  const recommendations: string[] = [];\n  \n  // Sunrise analysis\n  if (willSeeSunrise) {\n    summary.push(`🌅 You WILL see a beautiful sunrise during this flight!`);\n    recommendations.push(\"Choose a window seat on the EAST side for the best sunrise views.\");\n  }\n  \n  // Sunset analysis\n  if (willSeeSunset) {\n    summary.push(`🌇 You WILL see a stunning sunset during this flight!`);\n    recommendations.push(\"Choose a window seat on the WEST side for the best sunset views.\");\n  }\n  \n  // Both sunrise and sunset\n  if (willSeeSunrise && willSeeSunset) {\n    summary.push(\"🌟 Amazing! You'll see BOTH sunrise AND sunset during this flight!\");\n    recommendations.push(\"This is a rare treat! You'll experience the full sun cycle during your journey.\");\n  }\n  \n  // Golden hour analysis\n  if (willSeeGoldenHour) {\n    if (willSeeGoldenHourBeforeSunrise) {\n      summary.push(`✨ You'll experience magical golden hour lighting before sunrise!`);\n    } else if (willSeeGoldenHourBeforeSunset) {\n      summary.push(`✨ You'll experience beautiful golden hour lighting before sunset!`);\n    }\n  }\n  \n  // Night analysis\n  if (willSeeNight) {\n    const nightHours = calculateNightHours(departureTime, arrivalTime);\n    summary.push(`🌙 You'll experience ${nightHours} hours of night flying - perfect for stargazing!`);\n    recommendations.push(\"Great opportunity for night photography and seeing city lights from above.\");\n  }\n  \n  // Sun visible analysis\n  if (willSeeSunVisible && !willSeeSunrise && !willSeeSunset) {\n    summary.push(`☀️ This will be a bright daylight flight with excellent visibility.`);\n    recommendations.push(\"Perfect for scenic landscape viewing and aerial photography.\");\n  }\n  \n  // Add general recommendations\n  if (willSeeSunrise || willSeeSunset || willSeeGoldenHour) {\n    recommendations.push(\"Bring a camera - the views will be spectacular!\");\n  }\n  \n  // Determine seat suggestion based on route\n  const seatSuggestion = determineSeatSuggestion(fromAirport, toAirport, willSeeSunrise, willSeeSunset);\n  \n  return {\n    willSeeSunrise,\n    willSeeSunset,\n    willSeeNight,\n    willSeeGoldenHour,\n    summary,\n    recommendations,\n    seatSuggestion,\n    timeline: [], // Simplified - no detailed timeline\n    nightDuration: willSeeNight ? calculateNightHours(departureTime, arrivalTime) * 60 : 0,\n    dayDuration: flightDuration - (willSeeNight ? calculateNightHours(departureTime, arrivalTime) * 60 : 0)\n  };\n};\n\n// Helper function to calculate night hours\nconst calculateNightHours = (depTime: Date, arrTime: Date): number => {\n  const depHour = depTime.getHours();\n  const arrHour = arrTime.getHours();\n  \n  let nightHours = 0;\n  \n  // Simple night calculation (10 PM - 6 AM)\n  if (depHour >= 22 || depHour <= 6) nightHours += 1;\n  if (arrHour >= 22 || arrHour <= 6) nightHours += 1;\n  \n  return Math.max(nightHours, 0.5); // Minimum 0.5 hours if any night flying\n};\n\n// Helper function to determine seat suggestion\nconst determineSeatSuggestion = (\n  fromAirport: string, \n  toAirport: string, \n  willSeeSunrise: boolean, \n  willSeeSunset: boolean\n): 'left' | 'right' | 'either' => {\n  \n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  \n  if (!fromCoords || !toCoords) return 'either';\n  \n  // Calculate if flying generally east/west/north/south\n  const latDiff = toCoords[0] - fromCoords[0]; // + means flying north\n  const lonDiff = toCoords[1] - fromCoords[1]; // + means flying east\n  \n  console.log(`Flight direction analysis: ${fromAirport} → ${toAirport}`);\n  console.log(`Lat diff: ${latDiff}, Lon diff: ${lonDiff}`);\n  console.log(`Sunrise: ${willSeeSunrise}, Sunset: ${willSeeSunset}`);\n  \n  if (willSeeSunrise) {\n    // Sunrise is in the EAST, so:\n    // - If flying WEST (negative lonDiff), sunrise will be on LEFT side\n    // - If flying EAST (positive lonDiff), sunrise will be on RIGHT side\n    if (lonDiff < 0) {\n      console.log(`Flying WEST with sunrise → LEFT side recommended`);\n      return 'left'; // Flying west, sunrise on left (east side of plane)\n    } else {\n      console.log(`Flying EAST with sunrise → RIGHT side recommended`);\n      return 'right'; // Flying east, sunrise on right (east side of plane)\n    }\n  }\n  \n  if (willSeeSunset) {\n    // Sunset is in the WEST, so:\n    // - If flying WEST (negative lonDiff), sunset will be on RIGHT side\n    // - If flying EAST (positive lonDiff), sunset will be on LEFT side\n    if (lonDiff < 0) {\n      console.log(`Flying WEST with sunset → RIGHT side recommended`);\n      return 'right'; // Flying west, sunset on right (west side of plane)\n    } else {\n      console.log(`Flying EAST with sunset → LEFT side recommended`);\n      return 'left'; // Flying east, sunset on left (west side of plane)\n    }\n  }\n  \n  console.log(`No sunrise/sunset → EITHER side recommended`);\n  return 'either';\n};\n\n// Function to get the correct marker/emoji for each sun condition\nconst getSunConditionMarker = (condition: SunCondition): string => {\n  switch (condition) {\n    case 'GOLDEN_HOUR_BEFORE_SUNRISE':\n      return '🌄'; // Golden hour before sunrise - mountain sunrise\n    case 'SUNRISE':\n      return '🌅'; // Sunrise\n    case 'DAYLIGHT':\n      return '☀️'; // Bright sun\n    case 'GOLDEN_HOUR_BEFORE_SUNSET':\n      return '🌇'; // Golden hour before sunset - cityscape sunset\n    case 'SUNSET':\n      return '🌆'; // Sunset over buildings\n    case 'NIGHT':\n      return '🌙'; // Crescent moon\n    default:\n      return '☀️'; // Default to sun\n  }\n};\n\n// Function to get tooltip content based on sun condition\nconst getSunTooltipContent = (sunPos: SunPosition | null): string => {\n  if (!sunPos) return '';\n\n  // Handle cases where condition might be undefined (for backward compatibility)\n  if (!sunPos.condition) {\n    const elevation = sunPos.elevation?.toFixed(1) || '--';\n    if (sunPos.elevation && sunPos.elevation < 0) {\n      return `🌙 Night • ${Math.abs(sunPos.elevation).toFixed(1)}° below horizon`;\n    } else if (sunPos.elevation && sunPos.elevation < 10) {\n      return `🌅 Golden Hour • ${elevation}° above horizon`;\n    } else {\n      return `☀️ Sun • ${elevation}° above horizon`;\n    }\n  }\n\n  const marker = getSunConditionMarker(sunPos.condition);\n  const elevation = sunPos.elevation?.toFixed(1) || '--';\n\n  switch (sunPos.condition) {\n    case 'GOLDEN_HOUR_BEFORE_SUNRISE':\n      return `${marker} Golden Hour Before Sunrise • ${elevation}° above horizon`;\n    case 'SUNRISE':\n      return `${marker} Sunrise • ${elevation}° above horizon`;\n    case 'DAYLIGHT':\n      return `${marker} Daylight • ${elevation}° above horizon`;\n    case 'GOLDEN_HOUR_BEFORE_SUNSET':\n      return `${marker} Golden Hour Before Sunset • ${elevation}° above horizon`;\n    case 'SUNSET':\n      return `${marker} Sunset • ${elevation}° above horizon`;\n    case 'NIGHT':\n      return `${marker} Night • Moon visible`;\n    default:\n      return `${marker} Sun • ${elevation}° above horizon`;\n  }\n};\n\n// Function to calculate bearing between two points\nconst calculateBearing = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const lat1Rad = lat1 * Math.PI / 180;\n  const lat2Rad = lat2 * Math.PI / 180;\n  \n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  \n  let bearing = Math.atan2(y, x) * 180 / Math.PI;\n  bearing = (bearing + 360) % 360; // Normalize to 0-360\n  \n  // No adjustment needed for custom SVG airplane - it points north by default\n  // The SVG is designed to point upward (0 degrees = north)\n  \n  return bearing;\n};\n\n// Function to create rotated airplane icon\nconst createAirplaneIcon = (rotation: number) => {\n  return L.divIcon({\n    className: 'custom-airplane-icon',\n    html: `<div style=\"\n      transform: rotate(${rotation}deg); \n      display: flex; \n      align-items: center; \n      justify-content: center; \n      width: 100%; \n      height: 100%;\n      transform-origin: center center;\n    \">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"60\" height=\"60\" style=\"fill: #000000; filter: drop-shadow(0 3px 6px rgba(255,255,255,1.0));\">\n        <!-- Airplane fuselage (main body) - tapered from nose to tail -->\n        <ellipse cx=\"256\" cy=\"300\" rx=\"16\" ry=\"160\"/>\n        \n        <!-- Very thick pointed nose - clearly shows front direction -->\n        <polygon points=\"256,40 225,130 287,130\"/>\n        \n        <!-- Thick cockpit/nose section -->\n        <ellipse cx=\"256\" cy=\"150\" rx=\"25\" ry=\"40\"/>\n        \n        <!-- Forward fuselage (thick front section) -->\n        <ellipse cx=\"256\" cy=\"200\" rx=\"22\" ry=\"30\"/>\n        \n        <!-- Main wings - positioned toward front -->\n        <path d=\"M40 200 L256 160 L472 200 L472 260 L256 220 L40 260 Z\"/>\n        \n        <!-- Wing tip extensions -->\n        <rect x=\"35\" y=\"190\" width=\"20\" height=\"80\" rx=\"3\"/>\n        <rect x=\"457\" y=\"190\" width=\"20\" height=\"80\" rx=\"3\"/>\n        \n        <!-- Horizontal tail stabilizers (smaller, at back) -->\n        <path d=\"M200 420 L256 410 L312 420 L312 440 L256 435 L200 440 Z\"/>\n        \n        <!-- Vertical tail fin (at back) -->\n        <polygon points=\"256,390 245,450 267,450\"/>\n        \n        <!-- Engine details under wings -->\n        <ellipse cx=\"150\" cy=\"230\" rx=\"8\" ry=\"20\"/>\n        <ellipse cx=\"362\" cy=\"230\" rx=\"8\" ry=\"20\"/>\n        \n        <!-- Rear fuselage taper -->\n        <ellipse cx=\"256\" cy=\"450\" rx=\"8\" ry=\"20\"/>\n      </svg>\n    </div>`,\n    iconSize: [60, 60],\n    iconAnchor: [30, 30],\n  });\n};\n\n// InteractiveAirplane component\ninterface InteractiveAirplaneProps {\n  flightData: FlightData;\n  flightProgress: number;\n  onPositionChange: (position: { lat: number; lon: number; sunPosition: SunPosition | null }) => void;\n}\n\nconst InteractiveAirplane: React.FC<InteractiveAirplaneProps> = ({ \n  flightData, \n  flightProgress, \n  onPositionChange \n}) => {\n  const airplaneRef = useRef<L.Marker>(null);\n\n  const getCurrentAirplaneData = (): { position: [number, number] | null; rotation: number } => {\n    if (!flightData || flightData.path.length === 0) return { position: null, rotation: 0 };\n    \n    // Calculate exact position along the flight path\n    const totalDistance = flightData.path.length - 1;\n    const exactProgress = (flightProgress / 100) * totalDistance;\n    \n    // Get the two waypoints we're between\n    const currentIndex = Math.floor(exactProgress);\n    const nextIndex = Math.min(currentIndex + 1, flightData.path.length - 1);\n    \n    const currentWaypoint = flightData.path[currentIndex];\n    const nextWaypoint = flightData.path[nextIndex];\n    \n    // Calculate the exact position between waypoints (0-1 progress within this segment)\n    const progressInSegment = exactProgress - currentIndex;\n    \n    // Interpolate position smoothly between waypoints\n    const lat = currentWaypoint.lat + (nextWaypoint.lat - currentWaypoint.lat) * progressInSegment;\n    const lon = currentWaypoint.lon + (nextWaypoint.lon - currentWaypoint.lon) * progressInSegment;\n    \n    // Calculate rotation based on current direction of travel\n    let rotation = 0;\n    if (nextIndex > currentIndex) {\n      // Flying forward - point towards next waypoint\n      rotation = calculateBearing(currentWaypoint.lat, currentWaypoint.lon, nextWaypoint.lat, nextWaypoint.lon);\n    } else {\n      // At the end of the path - use direction from previous to current\n      const prevIndex = Math.max(currentIndex - 1, 0);\n      const prevWaypoint = flightData.path[prevIndex];\n      rotation = calculateBearing(prevWaypoint.lat, prevWaypoint.lon, currentWaypoint.lat, currentWaypoint.lon);\n    }\n    \n    return { \n      position: [lat, lon],\n      rotation: rotation\n    };\n  };\n\n  const { position: currentPosition, rotation: airplaneRotation } = useMemo(() => getCurrentAirplaneData(), [flightData, flightProgress]);\n\n  useEffect(() => {\n    if (!flightData || flightData.path.length === 0) return;\n    \n    // Calculate smooth position using the same logic as getCurrentAirplaneData\n    const totalDistance = flightData.path.length - 1;\n    const exactProgress = (flightProgress / 100) * totalDistance;\n    \n    const currentIndex = Math.floor(exactProgress);\n    const nextIndex = Math.min(currentIndex + 1, flightData.path.length - 1);\n    \n    const currentWaypoint = flightData.path[currentIndex];\n    const nextWaypoint = flightData.path[nextIndex];\n    \n    const progressInSegment = exactProgress - currentIndex;\n    \n    // Interpolate position smoothly between waypoints\n    const lat = currentWaypoint.lat + (nextWaypoint.lat - currentWaypoint.lat) * progressInSegment;\n    const lon = currentWaypoint.lon + (nextWaypoint.lon - currentWaypoint.lon) * progressInSegment;\n    \n    // Interpolate sun position based on current progress\n    let currentSunPosition: SunPosition | null = null;\n    if (flightData.sunPositions && flightData.sunPositions.length > 0) {\n      const sunProgress = exactProgress / totalDistance;\n      const sunIndex = Math.floor(sunProgress * (flightData.sunPositions.length - 1));\n      const nextSunIndex = Math.min(sunIndex + 1, flightData.sunPositions.length - 1);\n      \n      const currentSun = flightData.sunPositions[sunIndex];\n      const nextSun = flightData.sunPositions[nextSunIndex];\n      \n      const sunProgressInSegment = (sunProgress * (flightData.sunPositions.length - 1)) - sunIndex;\n      \n      currentSunPosition = {\n        lat: currentSun.lat + (nextSun.lat - currentSun.lat) * sunProgressInSegment,\n        lon: currentSun.lon + (nextSun.lon - currentSun.lon) * sunProgressInSegment,\n        time: currentSun.time,\n        azimuth: currentSun.azimuth + (nextSun.azimuth - currentSun.azimuth) * sunProgressInSegment,\n        elevation: currentSun.elevation + (nextSun.elevation - currentSun.elevation) * sunProgressInSegment\n      };\n    }\n\n    // Update position callback with smooth position\n    onPositionChange({\n      lat: lat,\n      lon: lon,\n      sunPosition: currentSunPosition\n    });\n\n    // Update map view to follow airplane with smooth animation\n    if (airplaneRef.current) {\n      const leafletElement = airplaneRef.current as any;\n      const map = leafletElement._map;\n      if (map) {\n        map.setView([lat, lon], map.getZoom(), { \n          animate: true,\n          duration: 0.1 // Very short animation for smooth following\n        });\n      }\n    }\n  }, [flightData, flightProgress, onPositionChange]);\n\n  if (!currentPosition) return null;\n\n  return (\n    <Marker\n      ref={airplaneRef}\n      position={currentPosition}\n      icon={createAirplaneIcon(airplaneRotation)}\n      draggable={false}\n      interactive={false}\n      bubblingMouseEvents={false}\n      eventHandlers={{\n        dragstart: (e) => { (e as any).preventDefault?.(); return false; },\n        drag: (e) => { (e as any).preventDefault?.(); return false; },\n        dragend: (e) => { (e as any).preventDefault?.(); return false; },\n        mousedown: (e) => { e.originalEvent?.preventDefault(); return false; },\n        mouseup: (e) => { e.originalEvent?.preventDefault(); return false; },\n        mousemove: (e) => { e.originalEvent?.preventDefault(); return false; },\n        add: () => {\n          if (airplaneRef.current) {\n            const element = airplaneRef.current.getElement();\n            if (element) {\n              element.style.pointerEvents = 'none';\n              element.style.userSelect = 'none';\n              element.style.touchAction = 'none';\n              element.draggable = false;\n            }\n          }\n        }\n      }}\n    >\n      <Popup>\n        Airplane Position<br />\n        Use the timeline slider to move me!\n      </Popup>\n    </Marker>\n  );\n};\n\n// Page enum for navigation\nenum AppPage {\n  SEARCH = 'search',\n  RESULTS = 'results'\n}\n\n// SearchPage Component\ninterface SearchPageProps {\n  fromAirport: string;\n  setFromAirport: (value: string) => void;\n  toAirport: string;\n  setToAirport: (value: string) => void;\n  departureTime: string;\n  setDepartureTime: (value: string) => void;\n  flightDuration: number | '';\n  setFlightDuration: (value: number | '') => void;\n  wantSunrise: boolean;\n  setWantSunrise: (value: boolean) => void;\n  wantSunset: boolean;\n  setWantSunset: (value: boolean) => void;\n  wantMountainView: boolean;\n  setWantMountainView: (value: boolean) => void;\n  loading: boolean;\n  error: string | null;\n  onSubmit: (e: React.FormEvent) => void;\n  formatTimeDisplay: (date: Date) => string;\n  getFlightEndTime: () => Date;\n}\n\nconst SearchPage: React.FC<SearchPageProps> = ({\n  fromAirport, setFromAirport, toAirport, setToAirport, departureTime, setDepartureTime,\n  flightDuration, setFlightDuration, wantSunrise, setWantSunrise, wantSunset, setWantSunset,\n  wantMountainView, setWantMountainView, loading, error, onSubmit,\n  formatTimeDisplay, getFlightEndTime\n}) => {\n  return (\n    <div className=\"search-page fade-in\">\n      <header className=\"app-header\">\n        <h1>✈️ SunSide - Perfect Window Seat Finder</h1>\n        <p>Find the best window seat for sunrise and sunset views during your flight</p>\n      </header>\n\n      <main className=\"search-main\">\n        <div className=\"search-container\">\n          <div className=\"search-form card-elevated slide-up\">\n            <div className=\"form-header\">\n              <h2>🎯 Plan Your Journey</h2>\n              <p>Enter your flight details to get personalized seat recommendations</p>\n            </div>\n            \n            <div className=\"form-body\">\n              <form onSubmit={onSubmit}>\n                {/* Left Column */}\n                <div className=\"form-left-column\">\n                  <div className=\"form-section\">\n                    <h3 className=\"section-title\">\n                      <span className=\"section-icon\">🛫</span>\n                      Flight Details\n                    </h3>\n                    \n                    <div className=\"form-grid\">\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"fromAirport\">From Airport</label>\n                        <select\n                          className=\"input-field\"\n                          id=\"fromAirport\"\n                          value={fromAirport}\n                          onChange={(e) => setFromAirport(e.target.value)}\n                          required\n                        >\n                          <option value=\"\">Select departure</option>\n                          <optgroup label=\"🇮🇳 Indian Cities\">\n                            <option value=\"DEL\">🏛️ Delhi (DEL)</option>\n                            <option value=\"JAI\">🏰 Jaipur (JAI)</option>\n                            <option value=\"BLR\">🌆 Bangalore (BLR)</option>\n                            <option value=\"BOM\">🏙️ Mumbai (BOM)</option>\n                            <option value=\"BHO\">🌸 Bhopal (BHO)</option>\n                            <option value=\"LKO\">🕌 Lucknow (LKO)</option>\n                          </optgroup>\n                          <optgroup label=\"🌍 International Cities\">\n                            <option value=\"JFK\">🗽 New York (JFK)</option>\n                            <option value=\"LHR\">🇬🇧 London (LHR)</option>\n                            <option value=\"NRT\">🗾 Tokyo (NRT)</option>\n                            <option value=\"LAX\">🌴 Los Angeles (LAX)</option>\n                            <option value=\"DXB\">🏜️ Dubai (DXB)</option>\n                            <option value=\"SIN\">🌺 Singapore (SIN)</option>\n                            <option value=\"SYD\">🦘 Sydney (SYD)</option>\n                            <option value=\"CDG\">🗼 Paris (CDG)</option>\n                            <option value=\"FRA\">🇩🇪 Frankfurt (FRA)</option>\n                            <option value=\"HKG\">🏙️ Hong Kong (HKG)</option>\n                            <option value=\"ICN\">🇰🇷 Seoul (ICN)</option>\n                            <option value=\"BKK\">🇹🇭 Bangkok (BKK)</option>\n                            <option value=\"DOH\">🏺 Doha (DOH)</option>\n                            <option value=\"IST\">🕌 Istanbul (IST)</option>\n                            <option value=\"MAD\">🇪🇸 Madrid (MAD)</option>\n                          </optgroup>\n                        </select>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"toAirport\">To Airport</label>\n                        <select\n                          className=\"input-field\"\n                          id=\"toAirport\"\n                          value={toAirport}\n                          onChange={(e) => setToAirport(e.target.value)}\n                          required\n                        >\n                          <option value=\"\">Select destination</option>\n                          <optgroup label=\"🇮🇳 Indian Cities\">\n                            <option value=\"DEL\">🏛️ Delhi (DEL)</option>\n                            <option value=\"JAI\">🏰 Jaipur (JAI)</option>\n                            <option value=\"BLR\">🌆 Bangalore (BLR)</option>\n                            <option value=\"BOM\">🏙️ Mumbai (BOM)</option>\n                            <option value=\"BHO\">🌸 Bhopal (BHO)</option>\n                            <option value=\"LKO\">🕌 Lucknow (LKO)</option>\n                          </optgroup>\n                          <optgroup label=\"🌍 International Cities\">\n                            <option value=\"JFK\">🗽 New York (JFK)</option>\n                            <option value=\"LHR\">🇬🇧 London (LHR)</option>\n                            <option value=\"NRT\">🗾 Tokyo (NRT)</option>\n                            <option value=\"LAX\">🌴 Los Angeles (LAX)</option>\n                            <option value=\"DXB\">🏜️ Dubai (DXB)</option>\n                            <option value=\"SIN\">🌺 Singapore (SIN)</option>\n                            <option value=\"SYD\">🦘 Sydney (SYD)</option>\n                            <option value=\"CDG\">🗼 Paris (CDG)</option>\n                            <option value=\"FRA\">🇩🇪 Frankfurt (FRA)</option>\n                            <option value=\"HKG\">🏙️ Hong Kong (HKG)</option>\n                            <option value=\"ICN\">🇰🇷 Seoul (ICN)</option>\n                            <option value=\"BKK\">🇹🇭 Bangkok (BKK)</option>\n                            <option value=\"DOH\">🏺 Doha (DOH)</option>\n                            <option value=\"IST\">🕌 Istanbul (IST)</option>\n                            <option value=\"MAD\">🇪🇸 Madrid (MAD)</option>\n                          </optgroup>\n                        </select>\n                      </div>\n                    </div>\n\n                    <div className=\"form-grid\">\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"departureTime\">Departure Date & Time</label>\n                        <input\n                          className=\"input-field\"\n                          type=\"datetime-local\"\n                          id=\"departureTime\"\n                          value={departureTime}\n                          onChange={(e) => setDepartureTime(e.target.value)}\n                          required\n                        />\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"flightDuration\">Flight Duration (minutes)</label>\n                        <input\n                          className=\"input-field\"\n                          type=\"number\"\n                          id=\"flightDuration\"\n                          min=\"30\"\n                          max=\"1440\"\n                          step=\"1\"\n                          value={flightDuration}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            if (value === '') {\n                              setFlightDuration('');\n                            } else {\n                              const intValue = parseInt(value, 10);\n                              if (!isNaN(intValue)) {\n                                setFlightDuration(intValue);\n                              }\n                            }\n                          }}\n                          placeholder=\"e.g., 120 (2 hours)\"\n                          required\n                        />\n                        {departureTime && flightDuration && (\n                          <small className=\"duration-help\" style={{ marginTop: '8px', display: 'block', color: 'var(--text-muted)', fontSize: '0.875rem' }}>\n                            Flight time: {formatTimeDisplay(new Date(departureTime))} → {formatTimeDisplay(getFlightEndTime())} \n                            ({Math.floor(Number(flightDuration) / 60)}h {Number(flightDuration) % 60}m)\n                          </small>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Right Column */}\n                <div className=\"form-right-column\">\n                  <div className=\"form-section\">\n                    <div className=\"sun-preferences\">\n                      <h4>\n                        <span className=\"section-icon\">👀</span>\n                        Viewing Preferences\n                      </h4>\n                      <div className=\"preference-note\">\n                        💡 Select your viewing preferences during the flight for optimal seat placement\n                      </div>\n                      \n                      <div className=\"checkbox-group\">\n                        <label className=\"checkbox-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={wantSunrise}\n                            onChange={(e) => setWantSunrise(e.target.checked)}\n                          />\n                          <span className=\"checkbox-text\">🌅 I want to see the sunrise</span>\n                        </label>\n                        \n                        <label className=\"checkbox-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={wantSunset}\n                            onChange={(e) => setWantSunset(e.target.checked)}\n                          />\n                          <span className=\"checkbox-text\">🌇 I want to see the sunset</span>\n                        </label>\n                      </div>\n\n                        \n                        <label className=\"checkbox-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={wantMountainView}\n                            onChange={(e) => setWantMountainView(e.target.checked)}\n                          />\n                          <span className=\"checkbox-text\">🏔️ I want to see mountain views</span>\n                        </label>\n                    </div>\n                  </div>\n\n\n\n                  {/* Flight Tips Section - Always visible to fill space */}\n                  <div className=\"form-section\">\n                    <div className=\"flight-tips-card\">\n                      <h4>\n                        <span className=\"section-icon\">💡</span>\n                        Flight Seat Tips\n                      </h4>\n                      <div className=\"tips-content\">\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">🌅</span>\n                          <div className=\"tip-text\">\n                            <strong>Best Sunrise Views:</strong> East-facing windows during morning flights\n                          </div>\n                        </div>\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">🌇</span>\n                          <div className=\"tip-text\">\n                            <strong>Best Sunset Views:</strong> West-facing windows during evening flights\n                          </div>\n                        </div>\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">🗺️</span>\n                          <div className=\"tip-text\">\n                            <strong>Flight Direction:</strong> Our algorithm considers your exact route for precise recommendations\n                          </div>\n                        </div>\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">⏰</span>\n                          <div className=\"tip-text\">\n                            <strong>Timing Matters:</strong> Sun position changes throughout your flight duration\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Submit Section - Full Width */}\n                <div className=\"form-submit-section\">\n                  {error && (\n                    <div className=\"error\" style={{ marginBottom: 'var(--space-4)' }}>\n                      <span className=\"error-icon\">⚠️</span>\n                      {error}\n                    </div>\n                  )}\n\n                  <button \n                    type=\"submit\" \n                    className=\"btn btn-primary btn-lg\" \n                    disabled={loading}\n                    style={{ width: '100%' }}\n                  >\n                    {loading ? (\n                      <>\n                        <div className=\"loading-spinner\" style={{ width: '20px', height: '20px', border: '2px solid rgba(255,255,255,0.3)', borderTop: '2px solid white' }}></div>\n                        Finding your perfect seat...\n                      </>\n                    ) : (\n                      <>\n                        🔍 Find My Perfect Seat\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\n// ResultsPage Component\ninterface ResultsPageProps {\n  flightData: FlightData | null;\n  fromAirport: string;\n  toAirport: string;\n  currentPosition: { lat: number; lon: number } | null;\n  currentSunPosition: SunPosition | null;\n  flightProgress: number;\n  handleProgressChange: (newProgress: number) => void;\n  handlePositionChange: (position: { lat: number; lon: number; sunPosition: SunPosition | null }) => void;\n  isDragging: boolean;\n  handleMouseDown: (e: React.MouseEvent) => void;\n  handleClick: (e: React.MouseEvent) => void;\n  onBack: () => void;\n  departureTime: string;\n  flightDuration: number | '';\n  wantMountainView: boolean;\n}\n\n\n\n// Calculate actual astronomical sunrise and sunset times during flight\nconst getOptimalPeriodsInFlight = (\n  departureTime: string, \n  flightDuration: number | '',\n  flightData: FlightData | null\n): { \n  sunrise: boolean; \n  sunset: boolean; \n  details: string[];\n  sunriseTime?: Date;\n  sunsetTime?: Date;\n  sunriseProgress?: number;\n  sunsetProgress?: number;\n} => {\n  if (!departureTime || !flightDuration || !flightData?.path?.length) {\n    return { sunrise: false, sunset: false, details: [] };\n  }\n  \n  const startTime = new Date(departureTime);\n  const endTime = new Date(startTime.getTime() + (typeof flightDuration === 'number' ? flightDuration * 60 * 60 * 1000 : 0));\n  const details: string[] = [];\n  let sunriseInFlight = false;\n  let sunsetInFlight = false;\n  let sunriseTime: Date | undefined;\n  let sunsetTime: Date | undefined;\n  let sunriseProgress: number | undefined;\n  let sunsetProgress: number | undefined;\n\n  // Check each waypoint for sunrise/sunset during flight\n  console.log('Checking sun positions for sunrise/sunset...');\n  console.log('Flight start time:', startTime);\n  console.log('Flight end time:', endTime);\n  console.log('Sun positions count:', flightData.sunPositions?.length || 0);\n  \n  if (flightData.sunPositions) {\n    flightData.sunPositions.forEach((sunPos, index) => {\n      const currentTime = new Date(sunPos.time);\n      const prevSunPos = index > 0 ? flightData.sunPositions[index - 1] : null;\n      \n      console.log(`Waypoint ${index}: ${currentTime.toISOString()}, elevation: ${sunPos.elevation}°`);\n      \n      if (currentTime >= startTime && currentTime <= endTime) {\n        // For the first waypoint, consider if sun is already rising (elevation > -10°)\n        if (index === 0 && sunPos.elevation > -10 && sunPos.elevation < 10 && !sunriseInFlight) {\n          sunriseInFlight = true;\n          sunriseTime = currentTime;\n          sunriseProgress = (index / (flightData.path.length - 1)) * 100;\n          details.push(`🌅 Golden hour/Sunrise conditions at takeoff ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n          console.log('Sunrise detected at takeoff');\n        }\n        \n        // Check for horizon crossings between waypoints\n        if (prevSunPos) {\n          // Check for sunrise (sun elevation crosses from below to above horizon)\n          if (prevSunPos.elevation <= 0 && sunPos.elevation > 0 && !sunriseInFlight) {\n            sunriseInFlight = true;\n            sunriseTime = currentTime;\n            sunriseProgress = (index / (flightData.path.length - 1)) * 100;\n            details.push(`🌅 Sunrise at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} during flight`);\n            console.log('Sunrise detected - horizon crossing');\n          }\n          \n          // Check for sunset (sun elevation crosses from above to below horizon)\n          if (prevSunPos.elevation > 0 && sunPos.elevation <= 0 && !sunsetInFlight) {\n            sunsetInFlight = true;\n            sunsetTime = currentTime;\n            sunsetProgress = (index / (flightData.path.length - 1)) * 100;\n            details.push(`🌇 Sunset at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} during flight`);\n            console.log('Sunset detected - horizon crossing');\n          }\n        }\n      }\n    });\n  }\n\n  // If no exact crossing found, check for golden hour periods and sun conditions\n  if (!sunriseInFlight || !sunsetInFlight) {\n    flightData.sunPositions.forEach((sunPos, index) => {\n      const currentTime = new Date(sunPos.time);\n      const prevSunPos = index > 0 ? flightData.sunPositions[index - 1] : null;\n      \n      if (currentTime >= startTime && currentTime <= endTime) {\n        // Check for morning conditions (sunrise-like)\n        if (!sunriseInFlight) {\n          // Early morning with low sun (good for sunrise viewing)\n          if (sunPos.elevation > -5 && sunPos.elevation < 15) {\n            const hour = currentTime.getHours();\n            if (hour >= 5 && hour <= 9) { // Morning hours\n              sunriseInFlight = true;\n              sunriseTime = currentTime;\n              sunriseProgress = (index / (flightData.path.length - 1)) * 100;\n              details.push(`🌅 Morning golden hour at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n            }\n          }\n          \n          // Golden hour transition (sun crosses 10° elevation upward)\n          if (prevSunPos && prevSunPos.elevation <= 10 && sunPos.elevation > 10) {\n            sunriseInFlight = true;\n            sunriseTime = currentTime;\n            sunriseProgress = (index / (flightData.path.length - 1)) * 100;\n            details.push(`🌅 Golden hour begins at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n          }\n        }\n        \n        // Check for evening conditions (sunset-like)\n        if (!sunsetInFlight) {\n          // Evening with low sun (good for sunset viewing)\n          if (sunPos.elevation > -5 && sunPos.elevation < 15) {\n            const hour = currentTime.getHours();\n            if (hour >= 17 && hour <= 21) { // Evening hours\n              sunsetInFlight = true;\n              sunsetTime = currentTime;\n              sunsetProgress = (index / (flightData.path.length - 1)) * 100;\n              details.push(`🌇 Evening golden hour at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n            }\n          }\n          \n          // Golden hour transition (sun crosses 10° elevation downward)\n          if (prevSunPos && prevSunPos.elevation > 10 && sunPos.elevation <= 10) {\n            sunsetInFlight = true;\n            sunsetTime = currentTime;\n            sunsetProgress = (index / (flightData.path.length - 1)) * 100;\n            details.push(`🌇 Golden hour begins at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n          }\n        }\n      }\n    });\n  }\n\n  return { \n    sunrise: sunriseInFlight, \n    sunset: sunsetInFlight, \n    details,\n    sunriseTime,\n    sunsetTime,\n    sunriseProgress,\n    sunsetProgress\n  };\n};\n\nconst ResultsPage: React.FC<ResultsPageProps> = ({\n  flightData, fromAirport, toAirport, currentPosition, currentSunPosition,\n  flightProgress, handleProgressChange, handlePositionChange, isDragging,\n  handleMouseDown, handleClick, onBack, departureTime, flightDuration, wantMountainView\n}) => {\n  // Resizable layout state\n  const [mapWidth, setMapWidth] = useState(60); // 60% default width for map\n  const [isDraggingResize, setIsDraggingResize] = useState(false);\n\n  // Resize handler for the divider\n  const handleResizeMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setIsDraggingResize(true);\n    \n    const handleMouseMove = (e: MouseEvent) => {\n      const containerWidth = window.innerWidth;\n      const newMapWidth = (e.clientX / containerWidth) * 100;\n      \n      // Constrain between 30% and 80%\n      const constrainedWidth = Math.max(30, Math.min(80, newMapWidth));\n      setMapWidth(constrainedWidth);\n    };\n    \n    const handleMouseUp = () => {\n      setIsDraggingResize(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  // Smart tooltip positioning to prevent off-screen tooltips\n  React.useEffect(() => {\n    const adjustTooltipPositions = () => {\n      const tooltipContainers = document.querySelectorAll('.sun-tooltip-container');\n      \n      tooltipContainers.forEach((container) => {\n        const rect = container.getBoundingClientRect();\n        const viewportWidth = window.innerWidth;\n        \n        // Remove existing positioning classes\n        container.classList.remove('tooltip-left', 'tooltip-right');\n        \n        // If tooltip would go off the right edge\n        if (rect.right > viewportWidth - 150) {\n          container.classList.add('tooltip-right');\n        }\n        // If tooltip would go off the left edge\n        else if (rect.left < 150) {\n          container.classList.add('tooltip-left');\n        }\n      });\n    };\n\n    // Adjust on mount and window resize\n    adjustTooltipPositions();\n    window.addEventListener('resize', adjustTooltipPositions);\n    \n    return () => window.removeEventListener('resize', adjustTooltipPositions);\n  }, [currentSunPosition, flightProgress]);\n  if (!flightData) {\n    return (\n      <div className=\"results-page\">\n        <div className=\"error\">No flight data available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"results-page fade-in\">\n      <header className=\"results-header\">\n        <button onClick={onBack} className=\"back-btn\">\n          ← Back to Search\n        </button>\n        <div className=\"results-header-content\">\n          <h1>✈️ Flight Results</h1>\n          <p>{fromAirport} → {toAirport}</p>\n        </div>\n      </header>\n\n      <main className=\"results-main\">\n        <div className=\"results-container\">\n          <div className=\"map-section\" style={{ width: `${mapWidth}%` }}>\n            <MapContainer\n              center={[28.6139, 77.2090]}\n              zoom={6}\n              style={{ height: '100vh', width: '100%' }}\n            >\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              />\n\n              {flightData.path && flightData.path.length > 1 && (\n                <Polyline\n                  positions={flightData.path.map(wp => [wp.lat, wp.lon])}\n                  color=\"blue\"\n                  weight={3}\n                />\n              )}\n\n              {flightData.path && flightData.path.length > 0 && (\n                <Marker\n                  position={[flightData.path[0].lat, flightData.path[0].lon]}\n                  icon={L.divIcon({\n                    className: 'custom-marker from-marker',\n                    html: '<div style=\"background: green; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',\n                    iconSize: [20, 20],\n                    iconAnchor: [10, 10],\n                  })}\n                >\n                  <Popup>Departure: {fromAirport}</Popup>\n                </Marker>\n              )}\n\n              {flightData.path && flightData.path.length > 0 && (\n                <Marker\n                  position={[flightData.path[flightData.path.length - 1].lat, flightData.path[flightData.path.length - 1].lon]}\n                  icon={L.divIcon({\n                    className: 'custom-marker to-marker',\n                    html: '<div style=\"background: red; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',\n                    iconSize: [20, 20],\n                    iconAnchor: [10, 10],\n                  })}\n                >\n                  <Popup>Arrival: {toAirport}</Popup>\n                </Marker>\n              )}\n\n              <InteractiveAirplane \n                flightData={flightData}\n                flightProgress={flightProgress}\n                onPositionChange={handlePositionChange}\n              />\n\n              {/* Sun Marker on Map */}\n              {currentPosition && currentSunPosition && flightData && (() => {\n                // Calculate pure flight bearing for reference\n                const startPoint = flightData.path[0];\n                const endPoint = flightData.path[flightData.path.length - 1];\n                \n                const dLon = (endPoint.lon - startPoint.lon) * Math.PI / 180;\n                const lat1Rad = startPoint.lat * Math.PI / 180;\n                const lat2Rad = endPoint.lat * Math.PI / 180;\n                \n                const y = Math.sin(dLon) * Math.cos(lat2Rad);\n                const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n                \n                let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n                flightBearing = (flightBearing + 360) % 360; // Normalize to 0-360\n                \n                // Use REAL sun azimuth from astronomical calculations\n                // SunCalc: South=0°, West=+90°, North=180°/-180°, East=-90°\n                // Map: North=0°, East=90°, South=180°, West=270°\n                // Convert: Add 180° to shift from South=0° to North=0°\n                let sunBearing = (currentSunPosition.azimuth + 180) % 360;\n                \n                // Position sun using real azimuth and elevation\n                // Distance from airplane based on elevation (higher sun = farther for better visibility)\n                const elevationDegrees = currentSunPosition.elevation;\n                const sunDistance = Math.max(0.3, 0.8 + (90 - Math.abs(elevationDegrees)) / 180); // 0.3 to 1.3 degrees\n                \n                // Convert bearing to map coordinates\n                const sunLat = currentPosition.lat + Math.cos(sunBearing * Math.PI / 180) * sunDistance;\n                const sunLon = currentPosition.lon + Math.sin(sunBearing * Math.PI / 180) * sunDistance;\n                \n                return (\n                  <>\n                    <Marker\n                      position={[sunLat, sunLon]}\n                      icon={L.divIcon({\n                        className: 'sun-marker',\n                        html: `\n                          <div class=\"map-sun-marker\" style=\"\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            width: 40px;\n                            height: 40px;\n                            background: ${elevationDegrees < 0 \n                              ? 'radial-gradient(circle, #4a5568 30%, #2d3748 60%, #1a202c 100%)' \n                              : elevationDegrees < 10 \n                                ? 'radial-gradient(circle, #ff8c00 30%, #ff6b35 60%, #e53e3e 100%)' \n                                : 'radial-gradient(circle, #ffd700 30%, #ffed4e 60%, #ff8c00 100%)'\n                            };\n                            border-radius: 50%;\n                            border: 3px solid #fff;\n                            box-shadow: 0 0 20px rgba(255, 215, 0, 0.6), 0 0 40px rgba(255, 215, 0, 0.3);\n                            position: relative;\n                            font-size: 20px;\n                            text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);\n                            cursor: pointer;\n                            transition: all 0.3s ease;\n                          \" title=\"${elevationDegrees < 0 \n                            ? `🌙 Nighttime • ${Math.abs(elevationDegrees).toFixed(1)}° below horizon` \n                            : elevationDegrees < 10 \n                              ? `🌅 Golden Hour • ${elevationDegrees.toFixed(1)}° above horizon` \n                              : `☀️ Daylight • ${elevationDegrees.toFixed(1)}° above horizon`\n                          }\">\n                            ${elevationDegrees < 0 ? '🌙' : elevationDegrees < 10 ? '🌅' : '☀️'}\n                            <div style=\"\n                              position: absolute;\n                              width: 60px;\n                              height: 60px;\n                              border: 2px solid #ffd700;\n                              border-radius: 50%;\n                              border-style: dashed;\n                              animation: rotate 8s linear infinite;\n                              opacity: 0.4;\n                            \"></div>\n                            <div class=\"map-sun-tooltip\" style=\"\n                              position: absolute;\n                              bottom: 120%;\n                              left: 50%;\n                              transform: translateX(-50%);\n                              background: rgba(0, 0, 0, 0.9);\n                              color: white;\n                              padding: 8px 12px;\n                              border-radius: 6px;\n                              font-size: 12px;\n                              white-space: nowrap;\n                              z-index: 1000;\n                              opacity: 0;\n                              visibility: hidden;\n                              transition: opacity 0.3s ease, visibility 0.3s ease;\n                              pointer-events: none;\n                              box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n                            \">\n                              ${elevationDegrees < 0 \n                                ? `🌙 Nighttime • ${Math.abs(elevationDegrees).toFixed(1)}° below horizon` \n                                : elevationDegrees < 10 \n                                  ? `🌅 Golden Hour • ${elevationDegrees.toFixed(1)}° above horizon` \n                                  : `☀️ Daylight • ${elevationDegrees.toFixed(1)}° above horizon`\n                              }\n                            </div>\n                          </div>\n                          <style>\n                            @keyframes rotate {\n                              from { transform: rotate(0deg); }\n                              to { transform: rotate(360deg); }\n                            }\n                            .map-sun-marker:hover {\n                              transform: scale(1.1) !important;\n                            }\n                            .map-sun-marker:hover .map-sun-tooltip {\n                              opacity: 1 !important;\n                              visibility: visible !important;\n                            }\n                          </style>\n                        `,\n                        iconSize: [40, 40],\n                        iconAnchor: [20, 20],\n                      })}\n                    >\n                      <Popup>\n                        <div>\n                          <strong>☀️ Real Sun Position</strong><br/>\n                          <strong>Recommended Seat:</strong> {flightData.recommendation === 'left' ? 'Left' : 'Right'} Side<br/>\n                          <strong>Sun Azimuth:</strong> {currentSunPosition.azimuth?.toFixed(1)}° (from South)<br/>\n                          <strong>Sun Elevation:</strong> {currentSunPosition.elevation?.toFixed(1)}° (above horizon)<br/>\n                          <strong>Map Bearing:</strong> {sunBearing.toFixed(1)}° (from North)<br/>\n                          <strong>Flight Direction:</strong> {flightBearing.toFixed(1)}°<br/>\n                          {elevationDegrees < 0 && <em style={{color: '#ff6b6b'}}>Sun below horizon</em>}\n                          {elevationDegrees >= 0 && elevationDegrees < 10 && <em style={{color: '#ffa500'}}>Sun near horizon</em>}\n                          {elevationDegrees >= 10 && <em style={{color: '#4dabf7'}}>Sun well above horizon</em>}\n                        </div>\n                      </Popup>\n                    </Marker>\n\n                    {/* Sun Direction Line */}\n                    <Polyline\n                      positions={[\n                        [currentPosition.lat, currentPosition.lon],\n                        [sunLat, sunLon]\n                      ]}\n                      color=\"#ffd700\"\n                      weight={3}\n                      opacity={0.8}\n                      dashArray=\"10, 5\"\n                    />\n                  </>\n                );\n              })()}\n            </MapContainer>\n          </div>\n\n          {/* Resizable Divider */}\n          <div \n            className={`resize-divider ${isDraggingResize ? 'dragging' : ''}`}\n            onMouseDown={handleResizeMouseDown}\n          >\n            <div className=\"resize-handle\">\n              <div className=\"resize-dots\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flight-details\" style={{ width: `${100 - mapWidth}%` }}>\n            {/* Professional Header */}\n            <div className=\"flight-header\">\n              <h2>\n                <span>✈️</span>\n                Flight Results\n              </h2>\n              <div className=\"flight-route\">\n                {fromAirport}\n                <span className=\"route-arrow\">→</span>\n                {toAirport}\n              </div>\n            </div>\n\n            {/* Scroll Indicator */}\n            <div className=\"scroll-indicator\">\n              <div className=\"scroll-hint\">\n                <span className=\"scroll-icon\">⬇️</span>\n                <span className=\"scroll-text\">Scroll for Flight Timeline</span>\n              </div>\n            </div>\n\n            {/* Enhanced Sun Analysis Results */}\n            {flightData.enhancedAnalysis && (\n              <div className=\"content-section\">\n                <div className=\"enhanced-analysis-card\">\n                  <h3>\n                    <span className=\"section-icon\">🔮</span>\n                    Flight Sun Analysis\n                  </h3>\n                  \n                  {/* Summary Messages */}\n                  <div className=\"analysis-summary\">\n                    {flightData.enhancedAnalysis.summary.map((message, index) => (\n                      <div key={index} className=\"summary-message\">\n                        {message}\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Quick Stats */}\n                  <div className=\"analysis-stats\">\n                    <div className=\"stat-item\">\n                      <span className=\"stat-icon\">🌅</span>\n                      <span className=\"stat-label\">Sunrise</span>\n                      <span className={`stat-value ${flightData.enhancedAnalysis.willSeeSunrise ? 'positive' : 'negative'}`}>\n                        {flightData.enhancedAnalysis.willSeeSunrise ? 'YES' : 'NO'}\n                      </span>\n                    </div>\n                    <div className=\"stat-item\">\n                      <span className=\"stat-icon\">🌇</span>\n                      <span className=\"stat-label\">Sunset</span>\n                      <span className={`stat-value ${flightData.enhancedAnalysis.willSeeSunset ? 'positive' : 'negative'}`}>\n                        {flightData.enhancedAnalysis.willSeeSunset ? 'YES' : 'NO'}\n                      </span>\n                    </div>\n                    <div className=\"stat-item\">\n                      <span className=\"stat-icon\">🌙</span>\n                      <span className=\"stat-label\">Night</span>\n                      <span className={`stat-value ${flightData.enhancedAnalysis.willSeeNight ? 'positive' : 'negative'}`}>\n                        {flightData.enhancedAnalysis.willSeeNight ? 'YES' : 'NO'}\n                      </span>\n                    </div>\n                    <div className=\"stat-item\">\n                      <span className=\"stat-icon\">✨</span>\n                      <span className=\"stat-label\">Golden Hour</span>\n                      <span className={`stat-value ${flightData.enhancedAnalysis.willSeeGoldenHour ? 'positive' : 'negative'}`}>\n                        {flightData.enhancedAnalysis.willSeeGoldenHour ? 'YES' : 'NO'}\n                      </span>\n                    </div>\n                  </div>\n\n                  {/* Recommendations */}\n                  {flightData.enhancedAnalysis.recommendations.length > 0 && (\n                    <div className=\"analysis-recommendations\">\n                      <h4>💡 Recommendations</h4>\n                      {flightData.enhancedAnalysis.recommendations.map((rec, index) => (\n                        <div key={index} className=\"recommendation-item\">\n                          {rec}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n\n                  {/* Event Times */}\n                  {(flightData.enhancedAnalysis.sunrise || flightData.enhancedAnalysis.sunset) && (\n                    <div className=\"event-times\">\n                      {flightData.enhancedAnalysis.sunrise && (\n                        <div className=\"event-time sunrise\">\n                          <span className=\"event-icon\">🌅</span>\n                          <div className=\"event-details\">\n                            <div className=\"event-label\">Sunrise</div>\n                            <div className=\"event-time-value\">{flightData.enhancedAnalysis.sunrise.timeString}</div>\n                            <div className=\"event-progress\">\n                              {Math.round(flightData.enhancedAnalysis.sunrise.progressPercent)}% through flight\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                      {flightData.enhancedAnalysis.sunset && (\n                        <div className=\"event-time sunset\">\n                          <span className=\"event-icon\">🌇</span>\n                          <div className=\"event-details\">\n                            <div className=\"event-label\">Sunset</div>\n                            <div className=\"event-time-value\">{flightData.enhancedAnalysis.sunset.timeString}</div>\n                            <div className=\"event-progress\">\n                              {Math.round(flightData.enhancedAnalysis.sunset.progressPercent)}% through flight\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Seat Recommendation Cards */}\n            <div className=\"content-section\">\n              <div className=\"seat-comparison-container\">\n                <h3>Seat Recommendations & View Analysis</h3>\n              \n              <div className=\"seat-options\">\n                {/* Left Seat Recommendation */}\n                <div className={`seat-option ${flightData.recommendation === 'left' ? 'recommended' : ''}`}>\n                  <div className=\"seat-header\">\n                    <h4>🪟 Left Side Seats (A, B)</h4>\n                    {flightData.recommendation === 'left' && <span className=\"recommended-badge\">⭐ Recommended</span>}\n                  </div>\n                  \n                  <div className=\"view-counts\">\n                    {(() => {\n                      const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                      return (\n                        <>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌅</span>\n                            <span className=\"count-text\">Sunrise Views: {flightData.enhancedAnalysis?.willSeeSunrise ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌇</span>\n                            <span className=\"count-text\">Sunset Views: {flightData.enhancedAnalysis?.willSeeSunset ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌙</span>\n                            <span className=\"count-text\">Night Views: {flightData.enhancedAnalysis?.willSeeNight ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🏔️</span>\n                            <span className=\"count-text\">Mountain Views: {wantMountainView ? 'YES' : 'NO'}</span>\n                          </div>\n                        </>\n                      );\n                    })()}\n                  </div>\n                </div>\n\n                {/* Right Seat Recommendation */}\n                <div className={`seat-option ${flightData.recommendation === 'right' ? 'recommended' : ''}`}>\n                  <div className=\"seat-header\">\n                    <h4>🪟 Right Side Seats (E, F)</h4>\n                    {flightData.recommendation === 'right' && <span className=\"recommended-badge\">⭐ Recommended</span>}\n                  </div>\n                  \n                  <div className=\"view-counts\">\n                    {(() => {\n                      const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                      return (\n                        <>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌅</span>\n                            <span className=\"count-text\">Sunrise Views: {flightData.enhancedAnalysis?.willSeeSunrise ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌇</span>\n                            <span className=\"count-text\">Sunset Views: {flightData.enhancedAnalysis?.willSeeSunset ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌙</span>\n                            <span className=\"count-text\">Night Views: {flightData.enhancedAnalysis?.willSeeNight ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🏔️</span>\n                            <span className=\"count-text\">Mountain Views: {wantMountainView ? 'YES' : 'NO'}</span>\n                          </div>\n                        </>\n                      );\n                    })()}\n                  </div>\n                </div>\n              </div>\n              </div>\n            </div>\n\n            {/* Current View Analysis Card */}\n            <div className=\"content-section\">\n              {currentSunPosition && (\n                <div className=\"current-view-card slide-up\">\n                <h3>\n                  <span className=\"section-icon\">📊</span>\n                  Current View Analysis\n                </h3>\n                <div className=\"view-details\">\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Aircraft Position:</span>\n                    <span className=\"view-value\">\n                      {currentPosition?.lat?.toFixed(4) ?? '--'}, {currentPosition?.lon?.toFixed(4) ?? '--'}\n                    </span>\n                  </div>\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Sun Elevation:</span>\n                    <span className=\"view-value\">{currentSunPosition.elevation?.toFixed(1) ?? '--'}°</span>\n                  </div>\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Sun Azimuth:</span>\n                    <span className=\"view-value\">{currentSunPosition.azimuth?.toFixed(1) ?? '--'}°</span>\n                  </div>\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Sun Visibility:</span>\n                    <span className=\"view-value\">\n                      {currentSunPosition ? (\n                        <>\n                          <span className=\"sun-tooltip-container\">\n                            {currentSunPosition.condition ? getSunConditionMarker(currentSunPosition.condition) : '☀️'}\n                            <div className={`sun-tooltip ${currentSunPosition.condition ? currentSunPosition.condition.toLowerCase() : 'daylight'}`}>\n                              {currentSunPosition.condition ? getSunTooltipContent(currentSunPosition) : `Sun • ${currentSunPosition.elevation?.toFixed(1) || '--'}° above horizon`}\n                            </div>\n                          </span>\n                          {' '}\n                          {currentSunPosition.condition === 'NIGHT' ? 'Below Horizon' : 'Visible'}\n                        </>\n                      ) : (\n                        'Not Available'\n                      )}\n                    </span>\n                  </div>\n                </div>\n                </div>\n              )}\n            </div>\n\n            {/* Flight Timeline */}\n            <div className=\"content-section\">\n              <div className=\"flight-progress-container slide-up\">\n              <h4>\n                <span className=\"section-icon\">🕐</span>\n                Flight Timeline\n              </h4>\n              \n              <p className=\"progress-instructions\">\n                Drag the slider to explore different moments of your flight\n              </p>\n\n              <div className=\"progress-slider-container\">\n                <div className=\"progress-labels\">\n                  <div className=\"progress-label\">\n                    <span className=\"progress-icon\">🛫</span>\n                    Departure\n                  </div>\n                  <div className=\"progress-label\">\n                    <span className=\"progress-icon\">🛬</span>\n                    Arrival\n                  </div>\n                </div>\n\n                <div \n                  className=\"horizontal-slider-container\"\n                  onMouseDown={handleMouseDown}\n                  onClick={handleClick}\n                >\n                  <div className=\"horizontal-slider-track\">\n                    <div \n                      className=\"horizontal-progress-bar\"\n                      style={{\n                        width: `${flightProgress}%`\n                      }}\n                    />\n                    \n                    {/* Sunrise/Sunset markers on timeline */}\n                    {(() => {\n                      const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                      return (\n                        <>\n                          {periods.sunriseProgress !== undefined && (\n                            <div \n                              className=\"timeline-event-marker sunrise-marker\"\n                              style={{ left: `${periods.sunriseProgress}%` }}\n                              title={`Sunrise at ${periods.sunriseTime?.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`}\n                            >\n                              🌅\n                            </div>\n                          )}\n                          {periods.sunsetProgress !== undefined && (\n                            <div \n                              className=\"timeline-event-marker sunset-marker\"\n                              style={{ left: `${periods.sunsetProgress}%` }}\n                              title={`Sunset at ${periods.sunsetTime?.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`}\n                            >\n                              🌇\n                            </div>\n                          )}\n                        </>\n                      );\n                    })()}\n                    \n                    <div \n                      className=\"horizontal-slider-handle\"\n                      style={{\n                        left: `${flightProgress}%`\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"progress-display\">\n                  Flight Progress: {Math.round(flightProgress)}%\n                </div>\n                \n                {/* Sunrise/Sunset Information */}\n                {(() => {\n                  const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                  if (periods.sunrise || periods.sunset) {\n                    return (\n                      <div className=\"sun-events-info\">\n                        <h5 style={{ margin: '10px 0 5px 0', fontSize: '14px', color: '#ffd700' }}>\n                          ☀️ Sun Events During Flight\n                        </h5>\n                        {periods.details.map((detail, index) => (\n                          <div key={index} style={{ fontSize: '12px', margin: '3px 0', color: '#e2e8f0' }}>\n                            {detail}\n                          </div>\n                        ))}\n                        {(periods.sunrise && periods.sunset) && (\n                          <div style={{ fontSize: '11px', margin: '5px 0', color: '#10b981', fontWeight: 'bold' }}>\n                            🌟 Perfect flight for both sunrise and sunset viewing!\n                          </div>\n                        )}\n                      </div>\n                    );\n                  }\n                  return null;\n                })()}\n              </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nfunction App() {\n  // Page navigation state\n  const [currentPage, setCurrentPage] = useState<AppPage>(AppPage.SEARCH);\n\n  // Form data state - All fields start empty\n  const [fromAirport, setFromAirport] = useState('');\n  const [toAirport, setToAirport] = useState('');\n  const [departureTime, setDepartureTime] = useState('');\n  const [flightDuration, setFlightDuration] = useState<number | ''>(''); // Start empty\n  const [flightData, setFlightData] = useState<FlightData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [flightProgress, setFlightProgress] = useState<number>(0);\n  const [currentPosition, setCurrentPosition] = useState<{ lat: number; lon: number } | null>(null);\n  const [currentSunPosition, setCurrentSunPosition] = useState<SunPosition | null>(null);\n\n  // View Preferences State\n  const [wantSunrise, setWantSunrise] = useState(false);\n  const [wantSunset, setWantSunset] = useState(false);\n  const [wantMountainView, setWantMountainView] = useState(false);\n\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Helper functions for flight duration calculations\n  const getFlightEndTime = (): Date => {\n    if (!departureTime || !flightDuration) {\n      return new Date(); // Return current time if invalid\n    }\n    const startTime = new Date(departureTime);\n    const endTime = new Date(startTime.getTime() + Number(flightDuration) * 60 * 1000); // Convert minutes to milliseconds\n    return endTime;\n  };\n\n  const formatTimeDisplay = (date: Date): string => {\n    return date.toLocaleTimeString('en-US', { \n      hour: '2-digit', \n      minute: '2-digit', \n      hour12: true \n    });\n  };\n\n\n\n\n\n\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Comprehensive form validation\n    if (!fromAirport || !toAirport || !departureTime || !flightDuration) {\n      setError('Please fill all the details including departure airport, arrival airport, departure time, and flight duration.');\n      setLoading(false);\n      return;\n    }\n\n    // Check if at least one viewing preference is selected\n    if (!wantSunrise && !wantSunset && !wantMountainView) {\n      setError('Please select at least one viewing preference (sunrise, sunset, or mountain views) to get seat recommendations.');\n      setLoading(false);\n      return;\n    }\n\n    // Check if source and destination are the same\n    if (fromAirport === toAirport) {\n      setError('No flights available for the same source and destination airports. Please select different departure and arrival airports.');\n      setLoading(false);\n      return;\n    }\n\n    // Validate flight duration\n    if (typeof flightDuration === 'string' || flightDuration < 30 || flightDuration > 1440) {\n      setError('Flight duration must be a number between 30 and 1440 minutes (24 hours).');\n      setLoading(false);\n      return;\n    }\n\n    // SIMPLIFIED APPROACH: Generate flight analysis directly in frontend\n    try {\n      console.log('Generating simplified flight analysis...');\n      \n      const mockFlightData = generateSimplifiedFlightAnalysis(\n        fromAirport,\n        toAirport,\n        departureTime,\n        flightDuration\n      );\n\n      setFlightData(mockFlightData);\n      \n      // Set initial flight progress to 0% (departure)\n      setFlightProgress(0);\n      \n      console.log('Simplified flight analysis completed:', mockFlightData);\n      \n      // Navigate to results page\n      setCurrentPage(AppPage.RESULTS);\n      \n    } catch (err) {\n      setError('Unable to generate flight analysis. Please check your input and try again.');\n      console.error('Error generating flight analysis:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleProgressChange = useCallback((newProgress: number) => {\n    setFlightProgress(newProgress);\n  }, []);\n\n  // Throttled version for smooth dragging with optimized frequency\n  const throttledProgressChange = useCallback(\n    throttle((newProgress: number) => {\n      setFlightProgress(newProgress);\n    }, 8), // ~120 FPS for ultra-smooth airplane movement\n    []\n  );\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    \n    // Immediately update position on click for instant feedback\n    if (flightData) {\n      const sliderElement = e.currentTarget.closest('.horizontal-slider-container') as HTMLElement;\n      if (sliderElement) {\n        const rect = sliderElement.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        let percentage = (x / rect.width) * 100;\n        \n        // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n        if (percentage > 95) percentage = 100;\n        if (percentage < 5) percentage = 0;\n        \n        percentage = Math.max(0, Math.min(100, percentage));\n        \n        // Immediately update the visual elements without waiting for React state\n        const handle = document.querySelector('.horizontal-slider-handle') as HTMLElement;\n        const progressBar = document.querySelector('.horizontal-progress-bar') as HTMLElement;\n        const progressText = document.querySelector('.progress-display') as HTMLElement;\n        \n        if (handle) handle.style.left = `${percentage}%`;\n        if (progressBar) progressBar.style.width = `${percentage}%`;\n        if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n        \n        handleProgressChange(percentage);\n      }\n    }\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n    \n    const sliderElement = e.currentTarget as HTMLElement;\n    let isDraggingLocal = true;\n    \n    // Function to update slider position\n    const updateSliderPosition = (clientX: number) => {\n      if (!flightData || !sliderElement) return;\n      \n      const rect = sliderElement.getBoundingClientRect();\n      const x = clientX - rect.left;\n      let percentage = (x / rect.width) * 100;\n      \n      // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n      if (percentage > 95) percentage = 100;\n      if (percentage < 5) percentage = 0;\n      \n      percentage = Math.max(0, Math.min(100, percentage));\n      \n      // INSTANT updates - both visual and airplane position\n      const handle = document.querySelector('.horizontal-slider-handle') as HTMLElement;\n      const progressBar = document.querySelector('.horizontal-progress-bar') as HTMLElement;\n      const progressText = document.querySelector('.progress-display') as HTMLElement;\n      \n      if (handle) handle.style.left = `${percentage}%`;\n      if (progressBar) progressBar.style.width = `${percentage}%`;\n      if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n      \n      // IMMEDIATE React state update\n      setFlightProgress(percentage);\n    };\n    \n    // Initial update on mouse down\n    updateSliderPosition(e.clientX);\n    \n    // Mouse move handler\n    const mouseMoveHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDraggingLocal) return;\n      updateSliderPosition(e.clientX);\n    };\n    \n    // Mouse up handler\n    const mouseUpHandler = () => {\n      isDraggingLocal = false;\n      setIsDragging(false);\n      document.removeEventListener('mousemove', mouseMoveHandler);\n      document.removeEventListener('mouseup', mouseUpHandler);\n    };\n    \n    document.addEventListener('mousemove', mouseMoveHandler, { passive: false });\n    document.addEventListener('mouseup', mouseUpHandler, { passive: false });\n  };\n\n\n\n  const handlePositionChange = (position: { lat: number; lon: number; sunPosition: SunPosition | null }) => {\n    setCurrentPosition({ lat: position.lat, lon: position.lon });\n    setCurrentSunPosition(position.sunPosition);\n  };\n\n  // Navigation function to go back to search\n  const goBackToSearch = () => {\n    setCurrentPage(AppPage.SEARCH);\n    setError(null); // Clear any errors when going back\n  };\n\n  return (\n    <div className=\"App\">\n      {currentPage === AppPage.SEARCH ? (\n        <SearchPage \n          fromAirport={fromAirport}\n          setFromAirport={setFromAirport}\n          toAirport={toAirport}\n          setToAirport={setToAirport}\n          departureTime={departureTime}\n          setDepartureTime={setDepartureTime}\n          flightDuration={flightDuration}\n          setFlightDuration={setFlightDuration}\n          wantSunrise={wantSunrise}\n          setWantSunrise={setWantSunrise}\n          wantSunset={wantSunset}\n          setWantSunset={setWantSunset}\n          wantMountainView={wantMountainView}\n          setWantMountainView={setWantMountainView}\n          loading={loading}\n          error={error}\n          onSubmit={handleSubmit}\n          formatTimeDisplay={formatTimeDisplay}\n          getFlightEndTime={getFlightEndTime}\n        />\n      ) : (\n        <ResultsPage \n          flightData={flightData}\n          fromAirport={fromAirport}\n          toAirport={toAirport}\n          currentPosition={currentPosition}\n          currentSunPosition={currentSunPosition}\n          flightProgress={flightProgress}\n          handleProgressChange={handleProgressChange}\n          handlePositionChange={handlePositionChange}\n          isDragging={isDragging}\n          handleMouseDown={handleMouseDown}\n          handleClick={handleClick}\n          onBack={goBackToSearch}\n          departureTime={departureTime}\n          flightDuration={flightDuration}\n          wantMountainView={wantMountainView}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}