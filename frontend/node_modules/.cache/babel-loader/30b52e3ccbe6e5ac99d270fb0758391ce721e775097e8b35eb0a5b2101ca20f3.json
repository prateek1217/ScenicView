{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prakh\\\\Desktop\\\\Flight\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport './index.css';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport AirplaneExperience from './components/AirplaneExperience.tsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Throttle function for smooth slider performance\nconst throttle = (func, delay) => {\n  let timeoutId = null;\n  let lastExecTime = 0;\n  return (...args) => {\n    const currentTime = Date.now();\n    if (currentTime - lastExecTime > delay) {\n      func(...args);\n      lastExecTime = currentTime;\n    } else {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        func(...args);\n        lastExecTime = Date.now();\n      }, delay - (currentTime - lastExecTime));\n    }\n  };\n};\n\n// Fix for default markers\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\n\n// Types\n\n// Airport coordinates database\nconst AIRPORTS = {\n  // Indian Airports\n  'DEL': [28.5562, 77.1000],\n  // Delhi\n  'BOM': [19.0896, 72.8656],\n  // Mumbai\n  'BLR': [12.9716, 77.5946],\n  // Bangalore\n  'MAA': [12.9941, 80.1709],\n  // Chennai\n  'CCU': [22.6547, 88.4467],\n  // Kolkata\n  'HYD': [17.2403, 78.4294],\n  // Hyderabad\n  'COK': [9.9312, 76.2673],\n  // Kochi\n  'GOI': [15.3808, 73.8314],\n  // Goa\n  'AMD': [23.0725, 72.6347],\n  // Ahmedabad\n  'PNQ': [18.5679, 73.9143],\n  // Pune\n  'BHO': [23.2599, 77.4126],\n  // Bhopal\n  'JAI': [26.9124, 75.7873],\n  // Jaipur\n  'LKO': [26.7606, 80.8843],\n  // Lucknow\n\n  // International Airports\n  'JFK': [40.6413, -73.7781],\n  // New York JFK\n  'LHR': [51.4700, -0.4543],\n  // London Heathrow\n  'NRT': [35.7720, 140.3929],\n  // Tokyo Narita\n  'LAX': [33.9425, -118.4081],\n  // Los Angeles\n  'DXB': [25.2532, 55.3657],\n  // Dubai\n  'SIN': [1.3644, 103.9915],\n  // Singapore\n  'SYD': [-33.9461, 151.1772],\n  // Sydney\n  'CDG': [49.0097, 2.5479],\n  // Paris Charles de Gaulle\n  'FRA': [50.0379, 8.5622],\n  // Frankfurt\n  'HKG': [22.3080, 113.9185],\n  // Hong Kong\n  'ICN': [37.4602, 126.4407],\n  // Seoul Incheon\n  'BKK': [13.6900, 100.7501],\n  // Bangkok\n  'DOH': [25.2731, 51.6080],\n  // Doha\n  'IST': [41.2619, 28.7414],\n  // Istanbul\n  'MAD': [40.4719, -3.5626] // Madrid\n};\n\n// Mountain locations for mountain view feature\nconst MOUNTAINS = {\n  // Himalayas - Northern India\n  'EVEREST': {\n    lat: 27.9881,\n    lon: 86.9250,\n    name: 'Mount Everest',\n    elevation: 8849,\n    region: 'Himalayas'\n  },\n  'K2': {\n    lat: 35.8808,\n    lon: 76.5155,\n    name: 'K2',\n    elevation: 8611,\n    region: 'Karakoram'\n  },\n  'KANCHENJUNGA': {\n    lat: 27.7025,\n    lon: 88.1475,\n    name: 'Kanchenjunga',\n    elevation: 8586,\n    region: 'Himalayas'\n  },\n  'NANDA_DEVI': {\n    lat: 30.3763,\n    lon: 79.9737,\n    name: 'Nanda Devi',\n    elevation: 7816,\n    region: 'Himalayas'\n  },\n  'DHAULAGIRI': {\n    lat: 28.6967,\n    lon: 83.4933,\n    name: 'Dhaulagiri',\n    elevation: 8167,\n    region: 'Himalayas'\n  },\n  'ANNAPURNA': {\n    lat: 28.5967,\n    lon: 83.8203,\n    name: 'Annapurna',\n    elevation: 8091,\n    region: 'Himalayas'\n  },\n  // Western Ghats - South & West India\n  'ANAMUDI': {\n    lat: 10.1783,\n    lon: 77.0650,\n    name: 'Anamudi',\n    elevation: 2695,\n    region: 'Western Ghats'\n  },\n  'DODDABETTA': {\n    lat: 11.4064,\n    lon: 76.7392,\n    name: 'Doddabetta',\n    elevation: 2637,\n    region: 'Nilgiris'\n  },\n  'MULLAYANAGIRI': {\n    lat: 13.3931,\n    lon: 75.7185,\n    name: 'Mullayanagiri',\n    elevation: 1930,\n    region: 'Western Ghats'\n  },\n  'KALSUBAI': {\n    lat: 19.6092,\n    lon: 73.7031,\n    name: 'Kalsubai',\n    elevation: 1646,\n    region: 'Sahyadris'\n  },\n  'HARISHCHANDRAGAD': {\n    lat: 19.5217,\n    lon: 73.7636,\n    name: 'Harishchandragad',\n    elevation: 1424,\n    region: 'Sahyadris'\n  },\n  // Eastern Ghats & Central India\n  'MAHENDRAGIRI': {\n    lat: 18.8503,\n    lon: 84.2883,\n    name: 'Mahendragiri',\n    elevation: 1501,\n    region: 'Eastern Ghats'\n  },\n  'ARMA_KONDA': {\n    lat: 18.3500,\n    lon: 82.9167,\n    name: 'Arma Konda',\n    elevation: 1680,\n    region: 'Eastern Ghats'\n  },\n  'GURU_SHIKHAR': {\n    lat: 24.5925,\n    lon: 72.7894,\n    name: 'Guru Shikhar',\n    elevation: 1722,\n    region: 'Aravalli'\n  },\n  // Northeast India\n  'SARAMATI': {\n    lat: 26.0000,\n    lon: 94.7667,\n    name: 'Saramati',\n    elevation: 3826,\n    region: 'Nagaland Hills'\n  },\n  'BLUE_MOUNTAIN': {\n    lat: 23.2833,\n    lon: 92.8167,\n    name: 'Blue Mountain',\n    elevation: 2157,\n    region: 'Mizoram Hills'\n  },\n  // International Mountains (for international flights)\n  'MONT_BLANC': {\n    lat: 45.8326,\n    lon: 6.8652,\n    name: 'Mont Blanc',\n    elevation: 4809,\n    region: 'Alps'\n  },\n  'MATTERHORN': {\n    lat: 45.9763,\n    lon: 7.6586,\n    name: 'Matterhorn',\n    elevation: 4478,\n    region: 'Alps'\n  },\n  'FUJI': {\n    lat: 35.3606,\n    lon: 138.7274,\n    name: 'Mount Fuji',\n    elevation: 3776,\n    region: 'Japan'\n  },\n  'DENALI': {\n    lat: 63.0692,\n    lon: -151.0070,\n    name: 'Denali',\n    elevation: 6190,\n    region: 'Alaska'\n  },\n  'ROCKY_MOUNTAINS': {\n    lat: 39.7392,\n    lon: -104.9903,\n    name: 'Rocky Mountains',\n    elevation: 4401,\n    region: 'USA'\n  }\n};\n\n// Function to get mountains visible from flight path\nconst getMountainsVisibleFromPath = (flightPath, maxDistance = 200) => {\n  const visibleMountains = [];\n\n  // Check each mountain against the flight path\n  Object.entries(MOUNTAINS).forEach(([mountainKey, mountain]) => {\n    // Check if mountain is within viewing distance of any point on the flight path\n    const isVisible = flightPath.some(waypoint => {\n      const distance = calculateDistance(waypoint.lat, waypoint.lon, mountain.lat, mountain.lon);\n      return distance <= maxDistance; // Within 200km viewing distance\n    });\n    if (isVisible) {\n      visibleMountains.push(mountainKey);\n    }\n  });\n  return visibleMountains;\n};\n\n// Distance calculation function (great circle distance)\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // Earth's radius in kilometers\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\n\n// Simplified flight analysis function\nconst generateSimplifiedFlightAnalysis = (fromAirport, toAirport, departureTime, flightDuration) => {\n  console.log(`Analyzing flight: ${fromAirport} → ${toAirport}, ${departureTime}, ${flightDuration} min`);\n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  if (!fromCoords || !toCoords) {\n    throw new Error(`Unknown airport: ${fromAirport} or ${toAirport}`);\n  }\n\n  // Parse departure time\n  const depTime = new Date(departureTime);\n  const arrivalTime = new Date(depTime.getTime() + flightDuration * 60 * 1000);\n\n  // Generate basic flight path (5 waypoints)\n  const path = [];\n  for (let i = 0; i <= 4; i++) {\n    const fraction = i / 4;\n    const lat = fromCoords[0] + (toCoords[0] - fromCoords[0]) * fraction;\n    const lon = fromCoords[1] + (toCoords[1] - fromCoords[1]) * fraction;\n    path.push({\n      lat,\n      lon\n    });\n  }\n\n  // Generate basic sun analysis\n  const enhancedAnalysis = generateBasicSunAnalysis(fromAirport, toAirport, depTime, arrivalTime, flightDuration);\n\n  // Generate sun positions with correct side placement based on flight direction\n  const sunPositions = path.map((waypoint, index) => {\n    const timeAtWaypoint = new Date(depTime.getTime() + index / 4 * flightDuration * 60 * 1000);\n    const hour = timeAtWaypoint.getHours();\n    const minute = timeAtWaypoint.getMinutes();\n    const timeInMinutes = hour * 60 + minute;\n\n    // Calculate flight direction\n    const fromCoords = AIRPORTS[fromAirport];\n    const toCoords = AIRPORTS[toAirport];\n    const lonDiff = toCoords[1] - fromCoords[1]; // + means flying east, - means flying west\n\n    // Simplified sun elevation based on time of day\n    let elevation;\n    if (hour >= 6 && hour <= 8) elevation = Math.random() * 10; // Sunrise\n    else if (hour >= 18 && hour <= 20) elevation = Math.random() * 10; // Sunset\n    else if (hour >= 9 && hour <= 17) elevation = 30 + Math.random() * 40; // Day\n    else elevation = -10 - Math.random() * 20; // Night\n\n    // Use departure time to determine sun position for the entire flight\n    const depHour = depTime.getHours();\n    const depMinute = depTime.getMinutes();\n    const depTimeInMinutes = depHour * 60 + depMinute;\n\n    // Define time intervals in minutes (same as in generateBasicSunAnalysis)\n    const GOLDEN_HOUR_BEFORE_SUNRISE_START = 4 * 60; // 4:00 AM\n    const GOLDEN_HOUR_BEFORE_SUNRISE_END = 4 * 60 + 59; // 4:59 AM\n    const SUNRISE_START = 5 * 60; // 5:00 AM\n    const SUNRISE_END = 8 * 60; // 8:00 AM\n    const SUN_VISIBLE_START = 8 * 60 + 1; // 8:01 AM\n    const SUN_VISIBLE_END = 17 * 60; // 5:00 PM\n    const GOLDEN_HOUR_BEFORE_SUNSET_START = 17 * 60 + 1; // 5:01 PM\n    const GOLDEN_HOUR_BEFORE_SUNSET_END = 17 * 60 + 59; // 5:59 PM\n    const SUNSET_START = 18 * 60; // 6:00 PM\n    const SUNSET_END = 19 * 60; // 7:00 PM\n\n    // Calculate realistic sun position based on time of day and flight direction\n    let condition;\n    let azimuth;\n\n    // Determine condition based on time with comprehensive coverage of ALL scenarios\n    // Helper function to check if time falls within a range (handles midnight wrap)\n    const isTimeInRange = (time, start, end) => {\n      if (start <= end) {\n        // Normal range (e.g., 5:00 AM to 8:00 AM)\n        return time >= start && time <= end;\n      } else {\n        // Overnight range (e.g., 7:01 PM to 3:59 AM)\n        return time >= start || time <= end;\n      }\n    };\n\n    // Define ALL time periods (including night period that wraps around midnight)\n    const NIGHT_START = 19 * 60 + 1; // 7:01 PM (1141 minutes)\n    const NIGHT_END = 3 * 60 + 59; // 3:59 AM (239 minutes)\n\n    // Check conditions in priority order (most specific first)\n    if (isTimeInRange(timeInMinutes, SUNRISE_START, SUNRISE_END)) {\n      // 5:00 AM - 8:00 AM: Sunrise period\n      condition = 'SUNRISE';\n    } else if (isTimeInRange(timeInMinutes, GOLDEN_HOUR_BEFORE_SUNRISE_START, GOLDEN_HOUR_BEFORE_SUNRISE_END)) {\n      // 4:00 AM - 4:59 AM: Golden hour before sunrise\n      condition = 'GOLDEN_HOUR_BEFORE_SUNRISE';\n    } else if (isTimeInRange(timeInMinutes, SUNSET_START, SUNSET_END)) {\n      // 6:00 PM - 7:00 PM: Sunset period\n      condition = 'SUNSET';\n    } else if (isTimeInRange(timeInMinutes, GOLDEN_HOUR_BEFORE_SUNSET_START, GOLDEN_HOUR_BEFORE_SUNSET_END)) {\n      // 5:01 PM - 5:59 PM: Golden hour before sunset\n      condition = 'GOLDEN_HOUR_BEFORE_SUNSET';\n    } else if (isTimeInRange(timeInMinutes, SUN_VISIBLE_START, SUN_VISIBLE_END)) {\n      // 8:01 AM - 5:00 PM: Full daylight\n      condition = 'DAYLIGHT';\n    } else if (isTimeInRange(timeInMinutes, NIGHT_START, NIGHT_END)) {\n      // 7:01 PM - 3:59 AM: Night period (wraps around midnight)\n      condition = 'NIGHT';\n    } else {\n      // Fallback for any edge cases\n      condition = 'DAYLIGHT';\n    }\n\n    // Debug logging for time condition assignment\n    const timeStr = `${Math.floor(timeInMinutes / 60).toString().padStart(2, '0')}:${(timeInMinutes % 60).toString().padStart(2, '0')}`;\n    console.log(`TIME CONDITION: ${timeStr} (${timeInMinutes}min) → ${condition}`);\n\n    // Calculate realistic sun azimuth with hardcoded city pair overrides\n    const isSunrise = condition === 'SUNRISE' || condition === 'GOLDEN_HOUR_BEFORE_SUNRISE';\n    const isSunset = condition === 'SUNSET' || condition === 'GOLDEN_HOUR_BEFORE_SUNSET';\n\n    // Try hardcoded mapping first\n    let hardcodedSide = null;\n    if (isSunrise) {\n      hardcodedSide = getHardcodedSunSide(fromAirport, toAirport, true);\n    } else if (isSunset) {\n      hardcodedSide = getHardcodedSunSide(fromAirport, toAirport, false);\n    }\n\n    // Calculate realistic sun azimuth based on actual time and sun movement\n    azimuth = calculateRealisticSunAzimuth(timeInMinutes, lonDiff, fromAirport, toAirport);\n    console.log(`REALISTIC SUN: ${fromAirport}→${toAirport}, Time: ${Math.floor(timeInMinutes / 60)}:${String(timeInMinutes % 60).padStart(2, '0')}, Condition: ${condition}, Azimuth: ${azimuth.toFixed(1)}°`);\n    return {\n      lat: waypoint.lat,\n      lon: waypoint.lon,\n      time: timeAtWaypoint.toISOString(),\n      azimuth,\n      elevation,\n      condition\n    };\n  });\n\n  // Calculate mountain count\n  const visibleMountains = getMountainsVisibleFromPath(path, 200);\n  const mountainCount = visibleMountains.length;\n  return {\n    path,\n    sunPositions,\n    recommendation: enhancedAnalysis.seatSuggestion,\n    enhancedAnalysis: {\n      ...enhancedAnalysis,\n      mountainCount\n    }\n  };\n};\n\n// Enhanced sun analysis based on precise time intervals\nconst generateBasicSunAnalysis = (fromAirport, toAirport, departureTime, arrivalTime, flightDuration) => {\n  const depHour = departureTime.getHours();\n  const depMinute = departureTime.getMinutes();\n  const arrHour = arrivalTime.getHours();\n  const arrMinute = arrivalTime.getMinutes();\n  console.log(`Flight time analysis: Dep ${depHour}:${depMinute.toString().padStart(2, '0')} → Arr ${arrHour}:${arrMinute.toString().padStart(2, '0')}`);\n\n  // Convert times to minutes for easier comparison\n  const depTimeMinutes = depHour * 60 + depMinute;\n  const arrTimeMinutes = arrHour * 60 + arrMinute;\n\n  // Define time intervals in minutes\n  const GOLDEN_HOUR_BEFORE_SUNRISE_START = 4 * 60; // 4:00 AM\n  const GOLDEN_HOUR_BEFORE_SUNRISE_END = 4 * 60 + 59; // 4:59 AM\n  const SUNRISE_START = 5 * 60; // 5:00 AM\n  const SUNRISE_END = 8 * 60; // 8:00 AM\n  const SUN_VISIBLE_START = 8 * 60 + 1; // 8:01 AM\n  const SUN_VISIBLE_END = 17 * 60; // 5:00 PM\n  const GOLDEN_HOUR_BEFORE_SUNSET_START = 17 * 60 + 1; // 5:01 PM\n  const GOLDEN_HOUR_BEFORE_SUNSET_END = 17 * 60 + 59; // 5:59 PM\n  const SUNSET_START = 18 * 60; // 6:00 PM\n  const SUNSET_END = 19 * 60; // 7:00 PM\n  const NIGHT_START = 19 * 60 + 1; // 7:01 PM\n  const NIGHT_END = 3 * 60 + 59; // 3:59 AM\n\n  // Initialize detection flags\n  let willSeeGoldenHourBeforeSunrise = false;\n  let willSeeSunrise = false;\n  let willSeeSunVisible = false;\n  let willSeeGoldenHourBeforeSunset = false;\n  let willSeeSunset = false;\n  let willSeeNight = false;\n\n  // Function to check if a time interval overlaps with flight time\n  // Handles ALL scenarios:\n  // ✅ Same-day flights (10AM-2PM)\n  // ✅ Overnight flights (4PM-2AM) \n  // ✅ Long flights (24+ hours)\n  // ✅ Night period wrap-around (7:01PM-3:59AM)\n  // ✅ All time periods: sunrise, sunset, golden hour, daylight, night\n  const checkTimeOverlap = (startMinutes, endMinutes) => {\n    const flightDurationMinutes = typeof flightDuration === 'number' ? flightDuration : 0;\n\n    // Calculate flight end time in minutes from start of day\n    const flightEndMinutes = depTimeMinutes + flightDurationMinutes;\n\n    // Handle night period (wraps around midnight: 19:01 to 3:59)\n    if (startMinutes > endMinutes) {\n      // For night period, check two conditions:\n      // 1. Flight starts during night hours (after 19:01)\n      // 2. Flight crosses midnight and continues into night hours (before 3:59)\n\n      const startsInNight = depTimeMinutes >= startMinutes; // Starts after 19:01\n      const endsInNight = flightEndMinutes > 24 * 60 && flightEndMinutes - 24 * 60 <= endMinutes; // Crosses midnight and ends before 3:59\n      const crossesMidnight = flightEndMinutes > 24 * 60;\n      return startsInNight || crossesMidnight && endsInNight;\n    }\n\n    // Handle regular periods (don't wrap around midnight)\n    // Check if the time period overlaps with flight duration\n\n    if (flightEndMinutes <= 24 * 60) {\n      // Flight doesn't cross midnight - simple overlap check\n      return depTimeMinutes <= endMinutes && flightEndMinutes >= startMinutes;\n    } else {\n      // Flight crosses midnight - check both before and after midnight\n      const overlapBeforeMidnight = depTimeMinutes <= endMinutes && 24 * 60 >= startMinutes;\n      const overlapAfterMidnight = flightEndMinutes - 24 * 60 >= startMinutes && startMinutes >= 0;\n      return overlapBeforeMidnight || overlapAfterMidnight;\n    }\n  };\n\n  // Check each time interval - now properly detects overlaps during flight duration\n  willSeeSunrise = checkTimeOverlap(SUNRISE_START, SUNRISE_END);\n  willSeeSunset = checkTimeOverlap(SUNSET_START, SUNSET_END);\n  willSeeNight = checkTimeOverlap(NIGHT_START, NIGHT_END);\n  willSeeSunVisible = checkTimeOverlap(SUN_VISIBLE_START, SUN_VISIBLE_END);\n  willSeeGoldenHourBeforeSunrise = checkTimeOverlap(GOLDEN_HOUR_BEFORE_SUNRISE_START, GOLDEN_HOUR_BEFORE_SUNRISE_END);\n  willSeeGoldenHourBeforeSunset = checkTimeOverlap(GOLDEN_HOUR_BEFORE_SUNSET_START, GOLDEN_HOUR_BEFORE_SUNSET_END);\n\n  // Golden hour is true if any golden hour period is detected\n  const willSeeGoldenHour = willSeeGoldenHourBeforeSunrise || willSeeGoldenHourBeforeSunset;\n  console.log(`Detection Results:\n    Golden Hour Before Sunrise: ${willSeeGoldenHourBeforeSunrise}\n    Sunrise: ${willSeeSunrise}\n    Sun Visible: ${willSeeSunVisible}\n    Golden Hour Before Sunset: ${willSeeGoldenHourBeforeSunset}\n    Sunset: ${willSeeSunset}\n    Night: ${willSeeNight}\n    Golden Hour: ${willSeeGoldenHour}`);\n\n  // Generate smart recommendations\n  const summary = [];\n  const recommendations = [];\n\n  // Sunrise analysis\n  if (willSeeSunrise) {\n    summary.push(`🌅 You WILL see a beautiful sunrise during this flight!`);\n    recommendations.push(\"Choose a window seat on the EAST side for the best sunrise views.\");\n  }\n\n  // Sunset analysis\n  if (willSeeSunset) {\n    summary.push(`🌇 You WILL see a stunning sunset during this flight!`);\n    recommendations.push(\"Choose a window seat on the WEST side for the best sunset views.\");\n  }\n\n  // Both sunrise and sunset\n  if (willSeeSunrise && willSeeSunset) {\n    summary.push(\"🌟 Amazing! You'll see BOTH sunrise AND sunset during this flight!\");\n    recommendations.push(\"This is a rare treat! You'll experience the full sun cycle during your journey.\");\n  }\n\n  // Golden hour analysis\n  if (willSeeGoldenHour) {\n    if (willSeeGoldenHourBeforeSunrise) {\n      summary.push(`✨ You'll experience magical golden hour lighting before sunrise!`);\n    } else if (willSeeGoldenHourBeforeSunset) {\n      summary.push(`✨ You'll experience beautiful golden hour lighting before sunset!`);\n    }\n  }\n\n  // Night analysis\n  if (willSeeNight) {\n    const nightHours = calculateNightHours(departureTime, arrivalTime);\n    summary.push(`🌙 You'll experience ${nightHours} hours of night flying - perfect for stargazing!`);\n    recommendations.push(\"Great opportunity for night photography and seeing city lights from above.\");\n  }\n\n  // Sun visible analysis\n  if (willSeeSunVisible && !willSeeSunrise && !willSeeSunset) {\n    summary.push(`☀️ This will be a bright daylight flight with excellent visibility.`);\n    recommendations.push(\"Perfect for scenic landscape viewing and aerial photography.\");\n  }\n\n  // Add general recommendations\n  if (willSeeSunrise || willSeeSunset || willSeeGoldenHour) {\n    recommendations.push(\"Bring a camera - the views will be spectacular!\");\n  }\n\n  // Determine seat suggestion based on route\n  const seatSuggestion = determineSeatSuggestion(fromAirport, toAirport, willSeeSunrise, willSeeSunset);\n  return {\n    willSeeSunrise,\n    willSeeSunset,\n    willSeeNight,\n    willSeeGoldenHour,\n    summary,\n    recommendations,\n    seatSuggestion,\n    timeline: [],\n    // Simplified - no detailed timeline\n    nightDuration: willSeeNight ? calculateNightHours(departureTime, arrivalTime) * 60 : 0,\n    dayDuration: flightDuration - (willSeeNight ? calculateNightHours(departureTime, arrivalTime) * 60 : 0)\n  };\n};\n\n// Helper function to calculate night hours\nconst calculateNightHours = (depTime, arrTime) => {\n  const depHour = depTime.getHours();\n  const arrHour = arrTime.getHours();\n  let nightHours = 0;\n\n  // Simple night calculation (10 PM - 6 AM)\n  if (depHour >= 22 || depHour <= 6) nightHours += 1;\n  if (arrHour >= 22 || arrHour <= 6) nightHours += 1;\n  return Math.max(nightHours, 0.5); // Minimum 0.5 hours if any night flying\n};\n\n// Helper function to determine seat suggestion based on proper bearing calculation\nconst determineSeatSuggestion = (fromAirport, toAirport, willSeeSunrise, willSeeSunset) => {\n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  if (!fromCoords || !toCoords) return 'either';\n\n  // Calculate proper flight bearing using same logic as sun position calculation\n  const lat1Rad = fromCoords[0] * Math.PI / 180;\n  const lat2Rad = toCoords[0] * Math.PI / 180;\n  const dLon = (toCoords[1] - fromCoords[1]) * Math.PI / 180;\n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n  flightBearing = (flightBearing + 360) % 360; // Normalize to 0-360\n\n  console.log(`Flight analysis: ${fromAirport} → ${toAirport}`);\n  console.log(`Flight bearing: ${flightBearing.toFixed(1)}°`);\n  console.log(`Sunrise: ${willSeeSunrise}, Sunset: ${willSeeSunset}`);\n  if (willSeeSunrise) {\n    // Sunrise is at 90° (East)\n    // Calculate relative position of sunrise to flight direction\n    let relativeSunPosition = 90 - flightBearing;\n    relativeSunPosition = (relativeSunPosition + 360) % 360;\n    console.log(`Sunrise relative position: ${relativeSunPosition.toFixed(1)}°`);\n\n    // If sunrise is on RIGHT side of flight direction (270° to 90°), recommend LEFT seat to look right\n    // If sunrise is on LEFT side of flight direction (90° to 270°), recommend RIGHT seat to look left\n    if (relativeSunPosition >= 270 || relativeSunPosition <= 90) {\n      console.log(`Sunrise on RIGHT side → LEFT seat recommended`);\n      return 'left'; // Sit on left to look right at sunrise\n    } else {\n      console.log(`Sunrise on LEFT side → RIGHT seat recommended`);\n      return 'right'; // Sit on right to look left at sunrise\n    }\n  }\n  if (willSeeSunset) {\n    // Sunset is at 270° (West)\n    // Calculate relative position of sunset to flight direction\n    let relativeSunPosition = 270 - flightBearing;\n    relativeSunPosition = (relativeSunPosition + 360) % 360;\n    console.log(`Sunset relative position: ${relativeSunPosition.toFixed(1)}°`);\n\n    // If sunset is on RIGHT side of flight direction (270° to 90°), recommend LEFT seat to look right\n    // If sunset is on LEFT side of flight direction (90° to 270°), recommend RIGHT seat to look left\n    if (relativeSunPosition >= 270 || relativeSunPosition <= 90) {\n      console.log(`Sunset on RIGHT side → LEFT seat recommended`);\n      return 'left'; // Sit on left to look right at sunset\n    } else {\n      console.log(`Sunset on LEFT side → RIGHT seat recommended`);\n      return 'right'; // Sit on right to look left at sunset\n    }\n  }\n  console.log(`No sunrise/sunset → EITHER side recommended`);\n  return 'either';\n};\n\n// Helper function to determine side-specific views for seat cards\nconst getSideSpecificViews = (fromAirport, toAirport, side, enhancedAnalysis) => {\n  if (!enhancedAnalysis) return {\n    sunrise: false,\n    sunset: false,\n    night: false\n  };\n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  if (!fromCoords || !toCoords) {\n    return {\n      sunrise: enhancedAnalysis.willSeeSunrise,\n      sunset: enhancedAnalysis.willSeeSunset,\n      night: enhancedAnalysis.willSeeNight\n    };\n  }\n\n  // Calculate flight bearing\n  const lat1Rad = fromCoords[0] * Math.PI / 180;\n  const lat2Rad = toCoords[0] * Math.PI / 180;\n  const dLon = (toCoords[1] - fromCoords[1]) * Math.PI / 180;\n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n  flightBearing = (flightBearing + 360) % 360;\n\n  // Check sunrise visibility for this side\n  let sunriseVisible = false;\n  if (enhancedAnalysis.willSeeSunrise) {\n    let relativeSunrisePosition = 90 - flightBearing;\n    relativeSunrisePosition = (relativeSunrisePosition + 360) % 360;\n\n    // Sunrise on RIGHT side of flight (270° to 90°) → visible from LEFT seat\n    // Sunrise on LEFT side of flight (90° to 270°) → visible from RIGHT seat\n    if (side === 'left') {\n      sunriseVisible = relativeSunrisePosition >= 270 || relativeSunrisePosition <= 90;\n    } else {\n      sunriseVisible = relativeSunrisePosition > 90 && relativeSunrisePosition < 270;\n    }\n  }\n\n  // Check sunset visibility for this side\n  let sunsetVisible = false;\n  if (enhancedAnalysis.willSeeSunset) {\n    let relativeSunsetPosition = 270 - flightBearing;\n    relativeSunsetPosition = (relativeSunsetPosition + 360) % 360;\n\n    // Sunset on RIGHT side of flight (270° to 90°) → visible from LEFT seat\n    // Sunset on LEFT side of flight (90° to 270°) → visible from RIGHT seat\n    if (side === 'left') {\n      sunsetVisible = relativeSunsetPosition >= 270 || relativeSunsetPosition <= 90;\n    } else {\n      sunsetVisible = relativeSunsetPosition > 90 && relativeSunsetPosition < 270;\n    }\n  }\n  return {\n    sunrise: sunriseVisible,\n    sunset: sunsetVisible,\n    night: enhancedAnalysis.willSeeNight // Night is visible from both sides\n  };\n};\n\n// Function to get the correct marker/emoji for each sun condition\nconst getSunConditionMarker = condition => {\n  switch (condition) {\n    case 'GOLDEN_HOUR_BEFORE_SUNRISE':\n      return '🌄';\n    // Golden hour before sunrise - mountain sunrise\n    case 'SUNRISE':\n      return '🌅';\n    // Sunrise\n    case 'DAYLIGHT':\n      return '☀️';\n    // Bright sun\n    case 'GOLDEN_HOUR_BEFORE_SUNSET':\n      return '🌇';\n    // Golden hour before sunset - cityscape sunset\n    case 'SUNSET':\n      return '🌆';\n    // Sunset over buildings\n    case 'NIGHT':\n      return '🌙';\n    // Crescent moon\n    default:\n      return '☀️';\n    // Default to sun\n  }\n};\n\n// Function to get tooltip content based on sun condition\nconst getSunTooltipContent = sunPos => {\n  var _sunPos$elevation2;\n  if (!sunPos) return '';\n\n  // Handle cases where condition might be undefined (for backward compatibility)\n  if (!sunPos.condition) {\n    var _sunPos$elevation;\n    const elevation = ((_sunPos$elevation = sunPos.elevation) === null || _sunPos$elevation === void 0 ? void 0 : _sunPos$elevation.toFixed(1)) || '--';\n    if (sunPos.elevation && sunPos.elevation < 0) {\n      return `🌙 Night • ${Math.abs(sunPos.elevation).toFixed(1)}° below horizon`;\n    } else if (sunPos.elevation && sunPos.elevation < 10) {\n      return `🌅 Golden Hour • ${elevation}° above horizon`;\n    } else {\n      return `☀️ Sun • ${elevation}° above horizon`;\n    }\n  }\n  const marker = getSunConditionMarker(sunPos.condition);\n  const elevation = ((_sunPos$elevation2 = sunPos.elevation) === null || _sunPos$elevation2 === void 0 ? void 0 : _sunPos$elevation2.toFixed(1)) || '--';\n  switch (sunPos.condition) {\n    case 'GOLDEN_HOUR_BEFORE_SUNRISE':\n      return `${marker} Golden Hour Before Sunrise • ${elevation}° above horizon`;\n    case 'SUNRISE':\n      return `${marker} Sunrise • ${elevation}° above horizon`;\n    case 'DAYLIGHT':\n      return `${marker} Daylight • ${elevation}° above horizon`;\n    case 'GOLDEN_HOUR_BEFORE_SUNSET':\n      return `${marker} Golden Hour Before Sunset • ${elevation}° above horizon`;\n    case 'SUNSET':\n      return `${marker} Sunset • ${elevation}° above horizon`;\n    case 'NIGHT':\n      return `${marker} Night • Moon visible`;\n    default:\n      return `${marker} Sun • ${elevation}° above horizon`;\n  }\n};\n\n// Hardcoded city pair mappings for consistent sun positioning\nconst CITY_PAIR_SUN_MAPPINGS = {\n  // West-bound flights (flying west)\n  'DEL-JAI': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // Delhi → Jaipur\n  'DEL-BOM': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // Delhi → Mumbai  \n  'BLR-BOM': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // Bangalore → Mumbai\n  'MAA-BOM': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // Chennai → Mumbai\n  'HYD-BOM': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // Hyderabad → Mumbai\n  'CCU-DEL': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // Kolkata → Delhi\n  'BLR-DEL': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // Bangalore → Delhi\n  'MAA-DEL': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // Chennai → Delhi\n\n  // East-bound flights (flying east)  \n  'JAI-DEL': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Jaipur → Delhi\n  'BOM-DEL': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Mumbai → Delhi\n  'BOM-BLR': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Mumbai → Bangalore\n  'BOM-MAA': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Mumbai → Chennai\n  'BOM-HYD': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Mumbai → Hyderabad\n  'DEL-CCU': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Delhi → Kolkata\n  'DEL-BLR': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Delhi → Bangalore  \n  'DEL-MAA': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Delhi → Chennai\n\n  // International routes\n  'DEL-JFK': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Delhi → New York (east)\n  'JFK-DEL': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // New York → Delhi (west)\n  'BOM-LHR': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Mumbai → London (east)\n  'LHR-BOM': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // London → Mumbai (west)\n  'DEL-NRT': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Delhi → Tokyo (east)\n  'NRT-DEL': {\n    sunrise: 'left',\n    sunset: 'right'\n  },\n  // Tokyo → Delhi (west)\n  'BOM-SYD': {\n    sunrise: 'right',\n    sunset: 'left'\n  },\n  // Mumbai → Sydney (east)\n  'SYD-BOM': {\n    sunrise: 'left',\n    sunset: 'right'\n  } // Sydney → Mumbai (west)\n};\n\n// Function to get hardcoded sun side for specific city pairs\nconst getHardcodedSunSide = (fromAirport, toAirport, isSunrise) => {\n  const routeKey = `${fromAirport}-${toAirport}`;\n  const mapping = CITY_PAIR_SUN_MAPPINGS[routeKey];\n  if (mapping) {\n    return isSunrise ? mapping.sunrise : mapping.sunset;\n  }\n  return null; // No hardcoded mapping found\n};\n\n// Function to calculate smooth circular sun movement based purely on time progression\nconst calculateRealisticSunAzimuth = (timeInMinutes, flightLonDiff, fromAirport, toAirport) => {\n  // Convert 24-hour time to a continuous circular progression (0-360 degrees)\n  // 6 AM = 90° (East), 12 PM = 180° (South), 6 PM = 270° (West), 12 AM = 0° (North)\n\n  const hour = timeInMinutes / 60;\n\n  // Create smooth circular motion: time directly maps to degrees\n  // 24 hours = 360 degrees, so each hour = 15 degrees\n  let sunAzimuth = hour * 15 % 360;\n\n  // Offset so that:\n  // 6 AM (sunrise) = 90° (East)\n  // 12 PM (noon) = 180° (South) \n  // 6 PM (sunset) = 270° (West)\n  // 12 AM (midnight) = 0° (North)\n  sunAzimuth = (sunAzimuth + 90) % 360; // Add 90° offset\n\n  // Get flight bearing to calculate relative position\n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  if (!fromCoords || !toCoords) {\n    // Fallback: direct map coordinates\n    return (sunAzimuth + 180) % 360;\n  }\n\n  // Calculate aircraft heading\n  const dLon = (toCoords[1] - fromCoords[1]) * Math.PI / 180;\n  const lat1Rad = fromCoords[0] * Math.PI / 180;\n  const lat2Rad = toCoords[0] * Math.PI / 180;\n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n  flightBearing = (flightBearing + 360) % 360;\n\n  // Calculate sun position relative to aircraft's perspective\n  // This creates the effect where the sun appears to move around the plane\n  let relativeSunAzimuth = sunAzimuth - flightBearing + 90;\n  relativeSunAzimuth = (relativeSunAzimuth + 360) % 360;\n\n  // Final map coordinate conversion\n  const mapAzimuth = (relativeSunAzimuth + 180) % 360;\n  console.log(`SMOOTH SUN: Time ${hour.toFixed(1)}h → Sun ${sunAzimuth.toFixed(1)}° → Relative ${relativeSunAzimuth.toFixed(1)}° → Map ${mapAzimuth.toFixed(1)}°`);\n  return mapAzimuth;\n};\n\n// Function to calculate bearing between two points\nconst calculateBearing = (lat1, lon1, lat2, lon2) => {\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const lat1Rad = lat1 * Math.PI / 180;\n  const lat2Rad = lat2 * Math.PI / 180;\n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  let bearing = Math.atan2(y, x) * 180 / Math.PI;\n  bearing = (bearing + 360) % 360; // Normalize to 0-360\n\n  // No adjustment needed for custom SVG airplane - it points north by default\n  // The SVG is designed to point upward (0 degrees = north)\n\n  return bearing;\n};\n\n// Function to create rotated airplane icon\nconst createAirplaneIcon = rotation => {\n  return L.divIcon({\n    className: 'custom-airplane-icon',\n    html: `<div style=\"\n      transform: rotate(${rotation}deg); \n      display: flex; \n      align-items: center; \n      justify-content: center; \n      width: 100%; \n      height: 100%;\n      transform-origin: center center;\n    \">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"60\" height=\"60\" style=\"fill: #000000; filter: drop-shadow(0 3px 6px rgba(255,255,255,1.0));\">\n        <!-- Airplane fuselage (main body) - tapered from nose to tail -->\n        <ellipse cx=\"256\" cy=\"300\" rx=\"16\" ry=\"160\"/>\n        \n        <!-- Very thick pointed nose - clearly shows front direction -->\n        <polygon points=\"256,40 225,130 287,130\"/>\n        \n        <!-- Thick cockpit/nose section -->\n        <ellipse cx=\"256\" cy=\"150\" rx=\"25\" ry=\"40\"/>\n        \n        <!-- Forward fuselage (thick front section) -->\n        <ellipse cx=\"256\" cy=\"200\" rx=\"22\" ry=\"30\"/>\n        \n        <!-- Main wings - positioned toward front -->\n        <path d=\"M40 200 L256 160 L472 200 L472 260 L256 220 L40 260 Z\"/>\n        \n        <!-- Wing tip extensions -->\n        <rect x=\"35\" y=\"190\" width=\"20\" height=\"80\" rx=\"3\"/>\n        <rect x=\"457\" y=\"190\" width=\"20\" height=\"80\" rx=\"3\"/>\n        \n        <!-- Horizontal tail stabilizers (smaller, at back) -->\n        <path d=\"M200 420 L256 410 L312 420 L312 440 L256 435 L200 440 Z\"/>\n        \n        <!-- Vertical tail fin (at back) -->\n        <polygon points=\"256,390 245,450 267,450\"/>\n        \n        <!-- Engine details under wings -->\n        <ellipse cx=\"150\" cy=\"230\" rx=\"8\" ry=\"20\"/>\n        <ellipse cx=\"362\" cy=\"230\" rx=\"8\" ry=\"20\"/>\n        \n        <!-- Rear fuselage taper -->\n        <ellipse cx=\"256\" cy=\"450\" rx=\"8\" ry=\"20\"/>\n      </svg>\n    </div>`,\n    iconSize: [60, 60],\n    iconAnchor: [30, 30]\n  });\n};\n\n// InteractiveAirplane component\n\nconst InteractiveAirplane = ({\n  flightData,\n  flightProgress,\n  onPositionChange\n}) => {\n  _s();\n  const airplaneRef = useRef(null);\n  const getCurrentAirplaneData = () => {\n    if (!flightData || flightData.path.length === 0) return {\n      position: null,\n      rotation: 0\n    };\n\n    // Calculate exact position along the flight path\n    const totalDistance = flightData.path.length - 1;\n    const exactProgress = flightProgress / 100 * totalDistance;\n\n    // Get the two waypoints we're between\n    const currentIndex = Math.floor(exactProgress);\n    const nextIndex = Math.min(currentIndex + 1, flightData.path.length - 1);\n    const currentWaypoint = flightData.path[currentIndex];\n    const nextWaypoint = flightData.path[nextIndex];\n\n    // Calculate the exact position between waypoints (0-1 progress within this segment)\n    const progressInSegment = exactProgress - currentIndex;\n\n    // Interpolate position smoothly between waypoints\n    const lat = currentWaypoint.lat + (nextWaypoint.lat - currentWaypoint.lat) * progressInSegment;\n    const lon = currentWaypoint.lon + (nextWaypoint.lon - currentWaypoint.lon) * progressInSegment;\n\n    // Calculate rotation based on current direction of travel\n    let rotation = 0;\n    if (nextIndex > currentIndex) {\n      // Flying forward - point towards next waypoint\n      rotation = calculateBearing(currentWaypoint.lat, currentWaypoint.lon, nextWaypoint.lat, nextWaypoint.lon);\n    } else {\n      // At the end of the path - use direction from previous to current\n      const prevIndex = Math.max(currentIndex - 1, 0);\n      const prevWaypoint = flightData.path[prevIndex];\n      rotation = calculateBearing(prevWaypoint.lat, prevWaypoint.lon, currentWaypoint.lat, currentWaypoint.lon);\n    }\n    return {\n      position: [lat, lon],\n      rotation: rotation\n    };\n  };\n  const {\n    position: currentPosition,\n    rotation: airplaneRotation\n  } = useMemo(() => getCurrentAirplaneData(), [flightData, flightProgress]);\n  useEffect(() => {\n    if (!flightData || flightData.path.length === 0) return;\n\n    // Calculate smooth position using the same logic as getCurrentAirplaneData\n    const totalDistance = flightData.path.length - 1;\n    const exactProgress = flightProgress / 100 * totalDistance;\n    const currentIndex = Math.floor(exactProgress);\n    const nextIndex = Math.min(currentIndex + 1, flightData.path.length - 1);\n    const currentWaypoint = flightData.path[currentIndex];\n    const nextWaypoint = flightData.path[nextIndex];\n    const progressInSegment = exactProgress - currentIndex;\n\n    // Interpolate position smoothly between waypoints\n    const lat = currentWaypoint.lat + (nextWaypoint.lat - currentWaypoint.lat) * progressInSegment;\n    const lon = currentWaypoint.lon + (nextWaypoint.lon - currentWaypoint.lon) * progressInSegment;\n\n    // Interpolate sun position based on current progress\n    let currentSunPosition = null;\n    if (flightData.sunPositions && flightData.sunPositions.length > 0) {\n      const sunProgress = exactProgress / totalDistance;\n      const sunIndex = Math.floor(sunProgress * (flightData.sunPositions.length - 1));\n      const nextSunIndex = Math.min(sunIndex + 1, flightData.sunPositions.length - 1);\n      const currentSun = flightData.sunPositions[sunIndex];\n      const nextSun = flightData.sunPositions[nextSunIndex];\n      const sunProgressInSegment = sunProgress * (flightData.sunPositions.length - 1) - sunIndex;\n      currentSunPosition = {\n        lat: currentSun.lat + (nextSun.lat - currentSun.lat) * sunProgressInSegment,\n        lon: currentSun.lon + (nextSun.lon - currentSun.lon) * sunProgressInSegment,\n        time: currentSun.time,\n        azimuth: currentSun.azimuth + (nextSun.azimuth - currentSun.azimuth) * sunProgressInSegment,\n        elevation: currentSun.elevation + (nextSun.elevation - currentSun.elevation) * sunProgressInSegment\n      };\n    }\n\n    // Update position callback with smooth position\n    onPositionChange({\n      lat: lat,\n      lon: lon,\n      sunPosition: currentSunPosition\n    });\n\n    // Update map view to follow airplane with smooth animation\n    if (airplaneRef.current) {\n      const leafletElement = airplaneRef.current;\n      const map = leafletElement._map;\n      if (map) {\n        map.setView([lat, lon], map.getZoom(), {\n          animate: true,\n          duration: 0.1 // Very short animation for smooth following\n        });\n      }\n    }\n  }, [flightData, flightProgress, onPositionChange]);\n  if (!currentPosition) return null;\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    ref: airplaneRef,\n    position: currentPosition,\n    icon: createAirplaneIcon(airplaneRotation),\n    draggable: false,\n    interactive: false,\n    bubblingMouseEvents: false,\n    eventHandlers: {\n      dragstart: e => {\n        var _preventDefault, _ref;\n        (_preventDefault = (_ref = e).preventDefault) === null || _preventDefault === void 0 ? void 0 : _preventDefault.call(_ref);\n        return false;\n      },\n      drag: e => {\n        var _preventDefault2, _ref2;\n        (_preventDefault2 = (_ref2 = e).preventDefault) === null || _preventDefault2 === void 0 ? void 0 : _preventDefault2.call(_ref2);\n        return false;\n      },\n      dragend: e => {\n        var _preventDefault3, _ref3;\n        (_preventDefault3 = (_ref3 = e).preventDefault) === null || _preventDefault3 === void 0 ? void 0 : _preventDefault3.call(_ref3);\n        return false;\n      },\n      mousedown: e => {\n        var _e$originalEvent;\n        (_e$originalEvent = e.originalEvent) === null || _e$originalEvent === void 0 ? void 0 : _e$originalEvent.preventDefault();\n        return false;\n      },\n      mouseup: e => {\n        var _e$originalEvent2;\n        (_e$originalEvent2 = e.originalEvent) === null || _e$originalEvent2 === void 0 ? void 0 : _e$originalEvent2.preventDefault();\n        return false;\n      },\n      mousemove: e => {\n        var _e$originalEvent3;\n        (_e$originalEvent3 = e.originalEvent) === null || _e$originalEvent3 === void 0 ? void 0 : _e$originalEvent3.preventDefault();\n        return false;\n      },\n      add: () => {\n        if (airplaneRef.current) {\n          const element = airplaneRef.current.getElement();\n          if (element) {\n            element.style.pointerEvents = 'none';\n            element.style.userSelect = 'none';\n            element.style.touchAction = 'none';\n            element.draggable = false;\n          }\n        }\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: [\"Airplane Position\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 26\n      }, this), \"Use the timeline slider to move me!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1030,\n    columnNumber: 5\n  }, this);\n};\n\n// Page enum for navigation\n_s(InteractiveAirplane, \"PgOkJdpqgD4O2bJUiKF3WjzNbMY=\");\n_c = InteractiveAirplane;\nvar AppPage = /*#__PURE__*/function (AppPage) {\n  AppPage[\"SEARCH\"] = \"search\";\n  AppPage[\"RESULTS\"] = \"results\";\n  AppPage[\"EXPERIENCE\"] = \"experience\";\n  return AppPage;\n}(AppPage || {}); // Navigation Component\nconst Navigation = ({\n  currentPage,\n  onPageChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    style: {\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      padding: '15px 0',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n      position: 'sticky',\n      top: 0,\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '1200px',\n        margin: '0 auto',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '0 20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '10px',\n          color: 'white',\n          fontSize: '24px',\n          fontWeight: 'bold'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2708\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"FlightSeat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onPageChange(AppPage.SEARCH),\n          style: {\n            background: currentPage === AppPage.SEARCH ? 'rgba(255,255,255,0.3)' : 'transparent',\n            border: 'none',\n            color: 'white',\n            padding: '12px 24px',\n            borderRadius: '25px',\n            fontSize: '16px',\n            fontWeight: '500',\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          onMouseEnter: e => {\n            if (currentPage !== AppPage.SEARCH) {\n              e.currentTarget.style.background = 'rgba(255,255,255,0.2)';\n            }\n          },\n          onMouseLeave: e => {\n            if (currentPage !== AppPage.SEARCH) {\n              e.currentTarget.style.background = 'transparent';\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDFE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onPageChange(AppPage.EXPERIENCE),\n          style: {\n            background: currentPage === AppPage.EXPERIENCE ? 'rgba(255,255,255,0.3)' : 'transparent',\n            border: 'none',\n            color: 'white',\n            padding: '12px 24px',\n            borderRadius: '25px',\n            fontSize: '16px',\n            fontWeight: '500',\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          onMouseEnter: e => {\n            if (currentPage !== AppPage.EXPERIENCE) {\n              e.currentTarget.style.background = 'rgba(255,255,255,0.2)';\n            }\n          },\n          onMouseLeave: e => {\n            if (currentPage !== AppPage.EXPERIENCE) {\n              e.currentTarget.style.background = 'transparent';\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83E\\uDE91\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Experience Inside Plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1080,\n    columnNumber: 5\n  }, this);\n};\n\n// ExperiencePage Component\n_c2 = Navigation;\nconst ExperiencePage = ({\n  onBack\n}) => {\n  _s2();\n  const [selectedSeat, setSelectedSeat] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(AirplaneExperience, {\n      selectedSeat: selectedSeat,\n      onSeatChange: setSelectedSeat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1190,\n    columnNumber: 5\n  }, this);\n};\n\n// SearchPage Component\n_s2(ExperiencePage, \"tpRpQrKDbHxVTPIxs0m4ouTDw+c=\");\n_c3 = ExperiencePage;\nconst SearchPage = ({\n  fromAirport,\n  setFromAirport,\n  toAirport,\n  setToAirport,\n  departureTime,\n  setDepartureTime,\n  flightDuration,\n  setFlightDuration,\n  loading,\n  error,\n  onSubmit,\n  formatTimeDisplay,\n  getFlightEndTime\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2708\\uFE0F SunSide - Perfect Window Seat Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Find the best window seat for sunrise and sunset views during your flight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"search-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-form card-elevated slide-up\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83C\\uDFAF Plan Your Journey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter your flight details to get personalized seat recommendations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-left-column\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"section-title\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"section-icon\",\n                      children: \"\\uD83D\\uDEEB\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1243,\n                      columnNumber: 23\n                    }, this), \"Flight Details\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1242,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-grid\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"input-label\",\n                        htmlFor: \"fromAirport\",\n                        children: \"From Airport\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1249,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"input-field\",\n                        id: \"fromAirport\",\n                        value: fromAirport,\n                        onChange: e => setFromAirport(e.target.value),\n                        required: true,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select departure\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1257,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                          label: \"\\uD83C\\uDDEE\\uD83C\\uDDF3 Indian Cities\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DEL\",\n                            children: \"\\uD83C\\uDFDB\\uFE0F Delhi (DEL)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1259,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"JAI\",\n                            children: \"\\uD83C\\uDFF0 Jaipur (JAI)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1260,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BLR\",\n                            children: \"\\uD83C\\uDF06 Bangalore (BLR)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1261,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BOM\",\n                            children: \"\\uD83C\\uDFD9\\uFE0F Mumbai (BOM)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1262,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BHO\",\n                            children: \"\\uD83C\\uDF38 Bhopal (BHO)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1263,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LKO\",\n                            children: \"\\uD83D\\uDD4C Lucknow (LKO)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1264,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1258,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                          label: \"\\uD83C\\uDF0D International Cities\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"JFK\",\n                            children: \"\\uD83D\\uDDFD New York (JFK)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1267,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LHR\",\n                            children: \"\\uD83C\\uDDEC\\uD83C\\uDDE7 London (LHR)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1268,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"NRT\",\n                            children: \"\\uD83D\\uDDFE Tokyo (NRT)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1269,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LAX\",\n                            children: \"\\uD83C\\uDF34 Los Angeles (LAX)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1270,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DXB\",\n                            children: \"\\uD83C\\uDFDC\\uFE0F Dubai (DXB)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1271,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"SIN\",\n                            children: \"\\uD83C\\uDF3A Singapore (SIN)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1272,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"SYD\",\n                            children: \"\\uD83E\\uDD98 Sydney (SYD)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1273,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"CDG\",\n                            children: \"\\uD83D\\uDDFC Paris (CDG)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1274,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"FRA\",\n                            children: \"\\uD83C\\uDDE9\\uD83C\\uDDEA Frankfurt (FRA)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1275,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"HKG\",\n                            children: \"\\uD83C\\uDFD9\\uFE0F Hong Kong (HKG)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1276,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"ICN\",\n                            children: \"\\uD83C\\uDDF0\\uD83C\\uDDF7 Seoul (ICN)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1277,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BKK\",\n                            children: \"\\uD83C\\uDDF9\\uD83C\\uDDED Bangkok (BKK)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1278,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DOH\",\n                            children: \"\\uD83C\\uDFFA Doha (DOH)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1279,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"IST\",\n                            children: \"\\uD83D\\uDD4C Istanbul (IST)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1280,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"MAD\",\n                            children: \"\\uD83C\\uDDEA\\uD83C\\uDDF8 Madrid (MAD)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1281,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1266,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1250,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1248,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"input-label\",\n                        htmlFor: \"toAirport\",\n                        children: \"To Airport\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1287,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"input-field\",\n                        id: \"toAirport\",\n                        value: toAirport,\n                        onChange: e => setToAirport(e.target.value),\n                        required: true,\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select destination\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1295,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                          label: \"\\uD83C\\uDDEE\\uD83C\\uDDF3 Indian Cities\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DEL\",\n                            children: \"\\uD83C\\uDFDB\\uFE0F Delhi (DEL)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1297,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"JAI\",\n                            children: \"\\uD83C\\uDFF0 Jaipur (JAI)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1298,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BLR\",\n                            children: \"\\uD83C\\uDF06 Bangalore (BLR)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1299,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BOM\",\n                            children: \"\\uD83C\\uDFD9\\uFE0F Mumbai (BOM)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1300,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BHO\",\n                            children: \"\\uD83C\\uDF38 Bhopal (BHO)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1301,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LKO\",\n                            children: \"\\uD83D\\uDD4C Lucknow (LKO)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1302,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1296,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                          label: \"\\uD83C\\uDF0D International Cities\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"JFK\",\n                            children: \"\\uD83D\\uDDFD New York (JFK)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1305,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LHR\",\n                            children: \"\\uD83C\\uDDEC\\uD83C\\uDDE7 London (LHR)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1306,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"NRT\",\n                            children: \"\\uD83D\\uDDFE Tokyo (NRT)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1307,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"LAX\",\n                            children: \"\\uD83C\\uDF34 Los Angeles (LAX)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1308,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DXB\",\n                            children: \"\\uD83C\\uDFDC\\uFE0F Dubai (DXB)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1309,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"SIN\",\n                            children: \"\\uD83C\\uDF3A Singapore (SIN)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1310,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"SYD\",\n                            children: \"\\uD83E\\uDD98 Sydney (SYD)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1311,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"CDG\",\n                            children: \"\\uD83D\\uDDFC Paris (CDG)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1312,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"FRA\",\n                            children: \"\\uD83C\\uDDE9\\uD83C\\uDDEA Frankfurt (FRA)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1313,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"HKG\",\n                            children: \"\\uD83C\\uDFD9\\uFE0F Hong Kong (HKG)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1314,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"ICN\",\n                            children: \"\\uD83C\\uDDF0\\uD83C\\uDDF7 Seoul (ICN)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1315,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"BKK\",\n                            children: \"\\uD83C\\uDDF9\\uD83C\\uDDED Bangkok (BKK)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1316,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"DOH\",\n                            children: \"\\uD83C\\uDFFA Doha (DOH)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1317,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"IST\",\n                            children: \"\\uD83D\\uDD4C Istanbul (IST)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1318,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"MAD\",\n                            children: \"\\uD83C\\uDDEA\\uD83C\\uDDF8 Madrid (MAD)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1319,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1304,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1288,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1286,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1247,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-grid\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"input-label\",\n                        htmlFor: \"departureTime\",\n                        children: \"Departure Date & Time\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1327,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"input-field\",\n                        type: \"datetime-local\",\n                        id: \"departureTime\",\n                        value: departureTime,\n                        onChange: e => setDepartureTime(e.target.value),\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1328,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1326,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"input-label\",\n                        htmlFor: \"flightDuration\",\n                        children: \"Flight Duration (minutes)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1339,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"input-field\",\n                        type: \"number\",\n                        id: \"flightDuration\",\n                        min: \"30\",\n                        max: \"1440\",\n                        step: \"1\",\n                        value: flightDuration,\n                        onChange: e => {\n                          const value = e.target.value;\n                          if (value === '') {\n                            setFlightDuration('');\n                          } else {\n                            const intValue = parseInt(value, 10);\n                            if (!isNaN(intValue)) {\n                              setFlightDuration(intValue);\n                            }\n                          }\n                        },\n                        placeholder: \"e.g., 120 (2 hours)\",\n                        required: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1340,\n                        columnNumber: 25\n                      }, this), departureTime && flightDuration && /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"duration-help\",\n                        style: {\n                          marginTop: '8px',\n                          display: 'block',\n                          color: 'var(--text-muted)',\n                          fontSize: '0.875rem'\n                        },\n                        children: [\"Flight time: \", formatTimeDisplay(new Date(departureTime)), \" \\u2192 \", formatTimeDisplay(getFlightEndTime()), \"(\", Math.floor(Number(flightDuration) / 60), \"h \", Number(flightDuration) % 60, \"m)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1363,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1338,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1325,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1241,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-right-column\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-section\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flight-tips-card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"section-icon\",\n                        children: \"\\uD83D\\uDCA1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1383,\n                        columnNumber: 25\n                      }, this), \"Flight Seat Tips\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1382,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tips-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tip-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tip-icon\",\n                          children: \"\\uD83C\\uDF05\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1388,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"tip-text\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Best Sunrise Views:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1390,\n                            columnNumber: 29\n                          }, this), \" East-facing windows during morning flights\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1389,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1387,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tip-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tip-icon\",\n                          children: \"\\uD83C\\uDF07\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1394,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"tip-text\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Best Sunset Views:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1396,\n                            columnNumber: 29\n                          }, this), \" West-facing windows during evening flights\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1395,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1393,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tip-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tip-icon\",\n                          children: \"\\uD83D\\uDDFA\\uFE0F\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1400,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"tip-text\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Flight Direction:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1402,\n                            columnNumber: 29\n                          }, this), \" Our algorithm considers your exact route for precise recommendations\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1401,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1399,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tip-item\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"tip-icon\",\n                          children: \"\\u23F0\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1406,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"tip-text\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Timing Matters:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1408,\n                            columnNumber: 29\n                          }, this), \" Sun position changes throughout your flight duration\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1407,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1405,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1386,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1381,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1380,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-submit-section\",\n                children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error\",\n                  style: {\n                    marginBottom: 'var(--space-4)'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-icon\",\n                    children: \"\\u26A0\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1420,\n                    columnNumber: 23\n                  }, this), error]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1419,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary btn-lg\",\n                  disabled: loading,\n                  style: {\n                    width: '100%'\n                  },\n                  children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"loading-spinner\",\n                      style: {\n                        width: '20px',\n                        height: '20px',\n                        border: '2px solid rgba(255,255,255,0.3)',\n                        borderTop: '2px solid white'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1433,\n                      columnNumber: 25\n                    }, this), \"Finding your perfect seat...\"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: \"\\uD83D\\uDD0D Find My Perfect Seat\"\n                  }, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1425,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1417,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1223,\n    columnNumber: 5\n  }, this);\n};\n\n// ResultsPage Component\n_c4 = SearchPage;\n// Calculate actual astronomical sunrise and sunset times during flight\nconst getOptimalPeriodsInFlight = (departureTime, flightDuration, flightData) => {\n  var _flightData$path, _flightData$sunPositi;\n  if (!departureTime || !flightDuration || !(flightData !== null && flightData !== void 0 && (_flightData$path = flightData.path) !== null && _flightData$path !== void 0 && _flightData$path.length)) {\n    return {\n      sunrise: false,\n      sunset: false,\n      details: []\n    };\n  }\n  const startTime = new Date(departureTime);\n  const endTime = new Date(startTime.getTime() + (typeof flightDuration === 'number' ? flightDuration * 60 * 60 * 1000 : 0));\n  const details = [];\n  let sunriseInFlight = false;\n  let sunsetInFlight = false;\n  let sunriseTime;\n  let sunsetTime;\n  let sunriseProgress;\n  let sunsetProgress;\n\n  // Check each waypoint for sunrise/sunset during flight\n  console.log('Checking sun positions for sunrise/sunset...');\n  console.log('Flight start time:', startTime);\n  console.log('Flight end time:', endTime);\n  console.log('Sun positions count:', ((_flightData$sunPositi = flightData.sunPositions) === null || _flightData$sunPositi === void 0 ? void 0 : _flightData$sunPositi.length) || 0);\n  if (flightData.sunPositions) {\n    flightData.sunPositions.forEach((sunPos, index) => {\n      const currentTime = new Date(sunPos.time);\n      const prevSunPos = index > 0 ? flightData.sunPositions[index - 1] : null;\n      console.log(`Waypoint ${index}: ${currentTime.toISOString()}, elevation: ${sunPos.elevation}°`);\n      if (currentTime >= startTime && currentTime <= endTime) {\n        // For the first waypoint, consider if sun is already rising (elevation > -10°)\n        if (index === 0 && sunPos.elevation > -10 && sunPos.elevation < 10 && !sunriseInFlight) {\n          sunriseInFlight = true;\n          sunriseTime = currentTime;\n          sunriseProgress = index / (flightData.path.length - 1) * 100;\n          // Removed: details.push(`🌅 Golden hour/Sunrise conditions at takeoff ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n          console.log('Sunrise detected at takeoff');\n        }\n\n        // Check for horizon crossings between waypoints\n        if (prevSunPos) {\n          // Check for sunrise (sun elevation crosses from below to above horizon)\n          if (prevSunPos.elevation <= 0 && sunPos.elevation > 0 && !sunriseInFlight) {\n            sunriseInFlight = true;\n            sunriseTime = currentTime;\n            sunriseProgress = index / (flightData.path.length - 1) * 100;\n            details.push(`🌅 Sunrise at ${currentTime.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })} during flight`);\n            console.log('Sunrise detected - horizon crossing');\n          }\n\n          // Check for sunset (sun elevation crosses from above to below horizon)\n          if (prevSunPos.elevation > 0 && sunPos.elevation <= 0 && !sunsetInFlight) {\n            sunsetInFlight = true;\n            sunsetTime = currentTime;\n            sunsetProgress = index / (flightData.path.length - 1) * 100;\n            // Removed: details.push(`🌇 Sunset at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} during flight`);\n            console.log('Sunset detected - horizon crossing');\n          }\n        }\n      }\n    });\n  }\n\n  // If no exact crossing found, check for golden hour periods and sun conditions\n  if (!sunriseInFlight || !sunsetInFlight) {\n    flightData.sunPositions.forEach((sunPos, index) => {\n      const currentTime = new Date(sunPos.time);\n      const prevSunPos = index > 0 ? flightData.sunPositions[index - 1] : null;\n      if (currentTime >= startTime && currentTime <= endTime) {\n        // Check for morning conditions (sunrise-like)\n        if (!sunriseInFlight) {\n          // Early morning with low sun (good for sunrise viewing)\n          if (sunPos.elevation > -5 && sunPos.elevation < 15) {\n            const hour = currentTime.getHours();\n            if (hour >= 5 && hour <= 9) {\n              // Morning hours\n              sunriseInFlight = true;\n              sunriseTime = currentTime;\n              sunriseProgress = index / (flightData.path.length - 1) * 100;\n              details.push(`🌅 Morning golden hour at ${currentTime.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })}`);\n            }\n          }\n\n          // Golden hour transition (sun crosses 10° elevation upward)\n          if (prevSunPos && prevSunPos.elevation <= 10 && sunPos.elevation > 10) {\n            sunriseInFlight = true;\n            sunriseTime = currentTime;\n            sunriseProgress = index / (flightData.path.length - 1) * 100;\n            details.push(`🌅 Golden hour begins at ${currentTime.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })}`);\n          }\n        }\n\n        // Check for evening conditions (sunset-like)\n        if (!sunsetInFlight) {\n          // Evening with low sun (good for sunset viewing)\n          if (sunPos.elevation > -5 && sunPos.elevation < 15) {\n            const hour = currentTime.getHours();\n            if (hour >= 17 && hour <= 21) {\n              // Evening hours\n              sunsetInFlight = true;\n              sunsetTime = currentTime;\n              sunsetProgress = index / (flightData.path.length - 1) * 100;\n              details.push(`🌇 Evening golden hour at ${currentTime.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })}`);\n            }\n          }\n\n          // Golden hour transition (sun crosses 10° elevation downward)\n          if (prevSunPos && prevSunPos.elevation > 10 && sunPos.elevation <= 10) {\n            sunsetInFlight = true;\n            sunsetTime = currentTime;\n            sunsetProgress = index / (flightData.path.length - 1) * 100;\n            details.push(`🌇 Golden hour begins at ${currentTime.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })}`);\n          }\n        }\n      }\n    });\n  }\n  return {\n    sunrise: sunriseInFlight,\n    sunset: sunsetInFlight,\n    details,\n    sunriseTime,\n    sunsetTime,\n    sunriseProgress,\n    sunsetProgress\n  };\n};\nconst ResultsPage = ({\n  flightData,\n  fromAirport,\n  toAirport,\n  currentPosition,\n  currentSunPosition,\n  flightProgress,\n  handleProgressChange,\n  handlePositionChange,\n  isDragging,\n  handleMouseDown,\n  handleClick,\n  onBack,\n  departureTime,\n  flightDuration\n}) => {\n  _s3();\n  var _currentPosition$lat$, _currentPosition$lat, _currentPosition$lon$, _currentPosition$lon, _currentSunPosition$e2, _currentSunPosition$e3, _currentSunPosition$a2, _currentSunPosition$a3, _currentSunPosition$e4;\n  // Resizable layout state\n  const [mapWidth, setMapWidth] = useState(60); // 60% default width for map\n  const [isDraggingResize, setIsDraggingResize] = useState(false);\n\n  // Resize handler for the divider\n  const handleResizeMouseDown = e => {\n    e.preventDefault();\n    setIsDraggingResize(true);\n    const handleMouseMove = e => {\n      const containerWidth = window.innerWidth;\n      const newMapWidth = e.clientX / containerWidth * 100;\n\n      // Constrain between 30% and 80%\n      const constrainedWidth = Math.max(30, Math.min(80, newMapWidth));\n      setMapWidth(constrainedWidth);\n    };\n    const handleMouseUp = () => {\n      setIsDraggingResize(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  // Smart tooltip positioning to prevent off-screen tooltips\n  React.useEffect(() => {\n    const adjustTooltipPositions = () => {\n      const tooltipContainers = document.querySelectorAll('.sun-tooltip-container');\n      tooltipContainers.forEach(container => {\n        const rect = container.getBoundingClientRect();\n        const viewportWidth = window.innerWidth;\n\n        // Remove existing positioning classes\n        container.classList.remove('tooltip-left', 'tooltip-right');\n\n        // If tooltip would go off the right edge\n        if (rect.right > viewportWidth - 150) {\n          container.classList.add('tooltip-right');\n        }\n        // If tooltip would go off the left edge\n        else if (rect.left < 150) {\n          container.classList.add('tooltip-left');\n        }\n      });\n    };\n\n    // Adjust on mount and window resize\n    adjustTooltipPositions();\n    window.addEventListener('resize', adjustTooltipPositions);\n    return () => window.removeEventListener('resize', adjustTooltipPositions);\n  }, [currentSunPosition, flightProgress]);\n  if (!flightData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"No flight data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1677,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1676,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-page fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"results-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-btn\",\n        children: \"\\u2190 Back to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1685,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u2708\\uFE0F Flight Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1689,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1688,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1684,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"results-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-section\",\n          style: {\n            width: `${mapWidth}%`\n          },\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: [28.6139, 77.2090],\n            zoom: 6,\n            style: {\n              height: '100vh',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n              attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1701,\n              columnNumber: 15\n            }, this), flightData.path && flightData.path.length > 1 && /*#__PURE__*/_jsxDEV(Polyline, {\n              positions: flightData.path.map(wp => [wp.lat, wp.lon]),\n              color: \"blue\",\n              weight: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1707,\n              columnNumber: 17\n            }, this), flightData.path && flightData.path.length > 0 && /*#__PURE__*/_jsxDEV(Marker, {\n              position: [flightData.path[0].lat, flightData.path[0].lon],\n              icon: L.divIcon({\n                className: 'custom-marker from-marker',\n                html: '<div style=\"background: green; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              }),\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: [\"Departure: \", fromAirport]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1724,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1715,\n              columnNumber: 17\n            }, this), flightData.path && flightData.path.length > 0 && /*#__PURE__*/_jsxDEV(Marker, {\n              position: [flightData.path[flightData.path.length - 1].lat, flightData.path[flightData.path.length - 1].lon],\n              icon: L.divIcon({\n                className: 'custom-marker to-marker',\n                html: '<div style=\"background: red; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',\n                iconSize: [20, 20],\n                iconAnchor: [10, 10]\n              }),\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: [\"Arrival: \", toAirport]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1738,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1729,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InteractiveAirplane, {\n              flightData: flightData,\n              flightProgress: flightProgress,\n              onPositionChange: handlePositionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1742,\n              columnNumber: 15\n            }, this), currentPosition && currentSunPosition && flightData && ((_currentSunPosition$a, _currentSunPosition$e) => {\n              // Calculate pure flight bearing for reference\n              const startPoint = flightData.path[0];\n              const endPoint = flightData.path[flightData.path.length - 1];\n              const dLon = (endPoint.lon - startPoint.lon) * Math.PI / 180;\n              const lat1Rad = startPoint.lat * Math.PI / 180;\n              const lat2Rad = endPoint.lat * Math.PI / 180;\n              const y = Math.sin(dLon) * Math.cos(lat2Rad);\n              const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n              let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n              flightBearing = (flightBearing + 360) % 360; // Normalize to 0-360\n\n              // Use REAL sun azimuth from astronomical calculations\n              // SunCalc: South=0°, West=+90°, North=180°/-180°, East=-90°\n              // Map: North=0°, East=90°, South=180°, West=270°\n              // Convert: Add 180° to shift from South=0° to North=0°\n              let sunBearing = (currentSunPosition.azimuth + 180) % 360;\n\n              // Position sun using real azimuth and elevation\n              // Distance from airplane based on elevation (higher sun = farther for better visibility)\n              const elevationDegrees = currentSunPosition.elevation;\n              const sunDistance = Math.max(0.3, 0.8 + (90 - Math.abs(elevationDegrees)) / 180); // 0.3 to 1.3 degrees\n\n              // Convert bearing to map coordinates\n              const sunLat = currentPosition.lat + Math.cos(sunBearing * Math.PI / 180) * sunDistance;\n              const sunLon = currentPosition.lon + Math.sin(sunBearing * Math.PI / 180) * sunDistance;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Marker, {\n                  position: [sunLat, sunLon],\n                  icon: L.divIcon({\n                    className: 'sun-marker',\n                    html: `\n                          <div class=\"map-sun-marker\" style=\"\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            width: 40px;\n                            height: 40px;\n                            background: ${elevationDegrees < 0 ? 'radial-gradient(circle, #4a5568 30%, #2d3748 60%, #1a202c 100%)' : elevationDegrees < 10 ? 'radial-gradient(circle, #ff8c00 30%, #ff6b35 60%, #e53e3e 100%)' : 'radial-gradient(circle, #ffd700 30%, #ffed4e 60%, #ff8c00 100%)'};\n                            border-radius: 50%;\n                            border: 3px solid #fff;\n                            box-shadow: 0 0 20px rgba(255, 215, 0, 0.6), 0 0 40px rgba(255, 215, 0, 0.3);\n                            position: relative;\n                            font-size: 20px;\n                            text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);\n                            cursor: pointer;\n                            transition: all 0.3s ease;\n                          \" title=\"${elevationDegrees < 0 ? `🌙 Nighttime • ${Math.abs(elevationDegrees).toFixed(1)}° below horizon` : elevationDegrees < 10 ? `🌅 Golden Hour • ${elevationDegrees.toFixed(1)}° above horizon` : `☀️ Daylight • ${elevationDegrees.toFixed(1)}° above horizon`}\">\n                            ${elevationDegrees < 0 ? '🌙' : elevationDegrees < 10 ? '🌅' : '☀️'}\n                            <div style=\"\n                              position: absolute;\n                              width: 60px;\n                              height: 60px;\n                              border: 2px solid #ffd700;\n                              border-radius: 50%;\n                              border-style: dashed;\n                              animation: rotate 8s linear infinite;\n                              opacity: 0.4;\n                            \"></div>\n                            <div class=\"map-sun-tooltip\" style=\"\n                              position: absolute;\n                              bottom: 120%;\n                              left: 50%;\n                              transform: translateX(-50%);\n                              background: rgba(0, 0, 0, 0.9);\n                              color: white;\n                              padding: 8px 12px;\n                              border-radius: 6px;\n                              font-size: 12px;\n                              white-space: nowrap;\n                              z-index: 1000;\n                              opacity: 0;\n                              visibility: hidden;\n                              transition: opacity 0.3s ease, visibility 0.3s ease;\n                              pointer-events: none;\n                              box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n                            \">\n                              ${elevationDegrees < 0 ? `🌙 Nighttime • ${Math.abs(elevationDegrees).toFixed(1)}° below horizon` : elevationDegrees < 10 ? `🌅 Golden Hour • ${elevationDegrees.toFixed(1)}° above horizon` : `☀️ Daylight • ${elevationDegrees.toFixed(1)}° above horizon`}\n                            </div>\n                          </div>\n                          <style>\n                            @keyframes rotate {\n                              from { transform: rotate(0deg); }\n                              to { transform: rotate(360deg); }\n                            }\n                            .map-sun-marker:hover {\n                              transform: scale(1.1) !important;\n                            }\n                            .map-sun-marker:hover .map-sun-tooltip {\n                              opacity: 1 !important;\n                              visibility: visible !important;\n                            }\n                          </style>\n                        `,\n                    iconSize: [40, 40],\n                    iconAnchor: [20, 20]\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Popup, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\u2600\\uFE0F Real Sun Position\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1869,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1869,\n                        columnNumber: 64\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Recommended Seat:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1870,\n                        columnNumber: 27\n                      }, this), \" \", flightData.recommendation === 'left' ? 'Left' : 'Right', \" Side\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1870,\n                        columnNumber: 124\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Sun Azimuth:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1871,\n                        columnNumber: 27\n                      }, this), \" \", (_currentSunPosition$a = currentSunPosition.azimuth) === null || _currentSunPosition$a === void 0 ? void 0 : _currentSunPosition$a.toFixed(1), \"\\xB0 (from South)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1871,\n                        columnNumber: 111\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Sun Elevation:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1872,\n                        columnNumber: 27\n                      }, this), \" \", (_currentSunPosition$e = currentSunPosition.elevation) === null || _currentSunPosition$e === void 0 ? void 0 : _currentSunPosition$e.toFixed(1), \"\\xB0 (above horizon)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1872,\n                        columnNumber: 118\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Map Bearing:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1873,\n                        columnNumber: 27\n                      }, this), \" \", sunBearing.toFixed(1), \"\\xB0 (from North)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1873,\n                        columnNumber: 94\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Flight Direction:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1874,\n                        columnNumber: 27\n                      }, this), \" \", flightBearing.toFixed(1), \"\\xB0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1874,\n                        columnNumber: 89\n                      }, this), elevationDegrees < 0 && /*#__PURE__*/_jsxDEV(\"em\", {\n                        style: {\n                          color: '#ff6b6b'\n                        },\n                        children: \"Sun below horizon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1875,\n                        columnNumber: 52\n                      }, this), elevationDegrees >= 0 && elevationDegrees < 10 && /*#__PURE__*/_jsxDEV(\"em\", {\n                        style: {\n                          color: '#ffa500'\n                        },\n                        children: \"Sun near horizon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1876,\n                        columnNumber: 78\n                      }, this), elevationDegrees >= 10 && /*#__PURE__*/_jsxDEV(\"em\", {\n                        style: {\n                          color: '#4dabf7'\n                        },\n                        children: \"Sun well above horizon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1877,\n                        columnNumber: 54\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1868,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1867,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1781,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n                  positions: [[currentPosition.lat, currentPosition.lon], [sunLat, sunLon]],\n                  color: \"#ffd700\",\n                  weight: 3,\n                  opacity: 0.8,\n                  dashArray: \"10, 5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1883,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true);\n            })(), flightData.path && (() => {\n              const visibleMountains = getMountainsVisibleFromPath(flightData.path, 200);\n              return visibleMountains.map(mountainKey => {\n                const mountain = MOUNTAINS[mountainKey];\n                return /*#__PURE__*/_jsxDEV(Marker, {\n                  position: [mountain.lat, mountain.lon],\n                  icon: L.divIcon({\n                    className: 'mountain-marker',\n                    html: `\n                          <div class=\"map-mountain-marker\" style=\"\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            width: 35px;\n                            height: 35px;\n                            background: linear-gradient(135deg, #8B4513 0%, #D2691E  30%, #F4A460 60%, #FFFFFF 85%);\n                            border-radius: 8px 8px 20px 20px;\n                            border: 2px solid #654321;\n                            box-shadow: 0 4px 12px rgba(139, 69, 19, 0.5), 0 2px 6px rgba(0, 0, 0, 0.3);\n                            position: relative;\n                            font-size: 16px;\n                            cursor: pointer;\n                            transition: all 0.3s ease;\n                            transform-origin: bottom center;\n                          \" title=\"${mountain.name} • ${mountain.elevation}m • ${mountain.region}\">\n                            🏔️\n                            <div style=\"\n                              position: absolute;\n                              width: 45px;\n                              height: 45px;\n                              border: 2px solid #8B4513;\n                              border-radius: 8px;\n                              border-style: dashed;\n                              animation: pulse 3s ease-in-out infinite;\n                              opacity: 0.3;\n                            \"></div>\n                            <div class=\"map-mountain-tooltip\" style=\"\n                              position: absolute;\n                              bottom: 120%;\n                              left: 50%;\n                              transform: translateX(-50%);\n                              background: rgba(139, 69, 19, 0.95);\n                              color: white;\n                              padding: 10px 14px;\n                              border-radius: 8px;\n                              font-size: 12px;\n                              white-space: nowrap;\n                              z-index: 1000;\n                              opacity: 0;\n                              visibility: hidden;\n                              transition: opacity 0.3s ease, visibility 0.3s ease;\n                              pointer-events: none;\n                              box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);\n                              border: 1px solid #F4A460;\n                            \">\n                              <div style=\"font-weight: bold; margin-bottom: 4px;\">🏔️ ${mountain.name}</div>\n                              <div style=\"font-size: 11px; opacity: 0.9;\">\n                                📏 ${mountain.elevation.toLocaleString()}m elevation<br/>\n                                🗺️ ${mountain.region}\n                              </div>\n                              <div style=\"\n                                position: absolute;\n                                top: 100%;\n                                left: 50%;\n                                transform: translateX(-50%);\n                                width: 0;\n                                height: 0;\n                                border-left: 6px solid transparent;\n                                border-right: 6px solid transparent;\n                                border-top: 6px solid rgba(139, 69, 19, 0.95);\n                              \"></div>\n                            </div>\n                          </div>\n                          <style>\n                            @keyframes pulse {\n                              0%, 100% { transform: scale(1); opacity: 0.3; }\n                              50% { transform: scale(1.1); opacity: 0.6; }\n                            }\n                            .map-mountain-marker:hover {\n                              transform: scale(1.15) !important;\n                              box-shadow: 0 6px 20px rgba(139, 69, 19, 0.7), 0 3px 10px rgba(0, 0, 0, 0.4) !important;\n                            }\n                            .map-mountain-marker:hover .map-mountain-tooltip {\n                              opacity: 1 !important;\n                              visibility: visible !important;\n                            }\n                          </style>\n                        `,\n                    iconSize: [35, 35],\n                    iconAnchor: [17, 35]\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Popup, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        minWidth: '200px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        style: {\n                          display: 'flex',\n                          alignItems: 'center',\n                          gap: '8px',\n                          marginBottom: '8px'\n                        },\n                        children: [\"\\uD83C\\uDFD4\\uFE0F \", mountain.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1996,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: '13px',\n                          lineHeight: '1.5'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Elevation:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2000,\n                            columnNumber: 34\n                          }, this), \" \", mountain.elevation.toLocaleString(), \"m\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2000,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Region:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2001,\n                            columnNumber: 34\n                          }, this), \" \", mountain.region]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2001,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            marginTop: '8px',\n                            padding: '8px',\n                            background: '#f0f8ff',\n                            borderRadius: '4px',\n                            fontSize: '12px'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"\\uD83D\\uDD2D Mountain View Available\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2003,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2003,\n                            columnNumber: 74\n                          }, this), \"This peak is visible from your flight path!\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2002,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1999,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1995,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1994,\n                    columnNumber: 23\n                  }, this)\n                }, mountainKey, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1905,\n                  columnNumber: 21\n                }, this);\n              });\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1696,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `resize-divider ${isDraggingResize ? 'dragging' : ''}`,\n          onMouseDown: handleResizeMouseDown,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"resize-handle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resize-dots\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2023,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2024,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2025,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2022,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2021,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2017,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flight-details\",\n          style: {\n            width: `${100 - mapWidth}%`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flight-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2708\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2034,\n                columnNumber: 17\n              }, this), \"Flight Results\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2033,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flight-route\",\n              children: [fromAirport, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"route-arrow\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2039,\n                columnNumber: 17\n              }, this), toAirport]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2037,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2032,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scroll-indicator\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scroll-hint\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"scroll-icon\",\n                children: \"\\u2B07\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2047,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"scroll-text\",\n                children: \"Scroll for Flight Timeline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2048,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2046,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2045,\n            columnNumber: 13\n          }, this), flightData.enhancedAnalysis && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"enhanced-analysis-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"section-icon\",\n                  children: \"\\uD83D\\uDD2E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2057,\n                  columnNumber: 21\n                }, this), \"Flight Sun Analysis\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2056,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"analysis-summary\",\n                children: flightData.enhancedAnalysis.summary.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-message\",\n                  children: message\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2064,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2062,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"analysis-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\uD83C\\uDF05\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2073,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Sunrise\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2074,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `stat-value ${flightData.enhancedAnalysis.willSeeSunrise ? 'positive' : 'negative'}`,\n                    children: flightData.enhancedAnalysis.willSeeSunrise ? 'YES' : 'NO'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2075,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2072,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\uD83C\\uDF07\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2080,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Sunset\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2081,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `stat-value ${flightData.enhancedAnalysis.willSeeSunset ? 'positive' : 'negative'}`,\n                    children: flightData.enhancedAnalysis.willSeeSunset ? 'YES' : 'NO'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2082,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2079,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\uD83C\\uDF19\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2087,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Night\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2088,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `stat-value ${flightData.enhancedAnalysis.willSeeNight ? 'positive' : 'negative'}`,\n                    children: flightData.enhancedAnalysis.willSeeNight ? 'YES' : 'NO'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2089,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2086,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-icon\",\n                    children: \"\\u2728\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2094,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Golden Hour\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2095,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `stat-value ${flightData.enhancedAnalysis.willSeeGoldenHour ? 'positive' : 'negative'}`,\n                    children: flightData.enhancedAnalysis.willSeeGoldenHour ? 'YES' : 'NO'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2096,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2093,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2071,\n                columnNumber: 19\n              }, this), flightData.enhancedAnalysis.recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"analysis-recommendations\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\uD83D\\uDCA1 Recommendations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2105,\n                  columnNumber: 23\n                }, this), flightData.enhancedAnalysis.recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"recommendation-item\",\n                  children: rec\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2107,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2104,\n                columnNumber: 21\n              }, this), (flightData.enhancedAnalysis.sunrise || flightData.enhancedAnalysis.sunset) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-times\",\n                children: [flightData.enhancedAnalysis.sunrise && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-time sunrise\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"event-icon\",\n                    children: \"\\uD83C\\uDF05\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2119,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"event-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-label\",\n                      children: \"Sunrise\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2121,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-time-value\",\n                      children: flightData.enhancedAnalysis.sunrise.timeString\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2122,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-progress\",\n                      children: [Math.round(flightData.enhancedAnalysis.sunrise.progressPercent), \"% through flight\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2123,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2120,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2118,\n                  columnNumber: 25\n                }, this), flightData.enhancedAnalysis.sunset && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-time sunset\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"event-icon\",\n                    children: \"\\uD83C\\uDF07\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2131,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"event-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-label\",\n                      children: \"Sunset\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2133,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-time-value\",\n                      children: flightData.enhancedAnalysis.sunset.timeString\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2134,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-progress\",\n                      children: [Math.round(flightData.enhancedAnalysis.sunset.progressPercent), \"% through flight\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2135,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2132,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2130,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2116,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2055,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2054,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seat-comparison-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Seat Recommendations & View Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seat-options\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `seat-option ${flightData.recommendation === 'left' ? 'recommended' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"seat-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"\\uD83E\\uDE9F Left Side Seats\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2156,\n                      columnNumber: 21\n                    }, this), flightData.recommendation === 'left' && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"recommended-badge\",\n                      children: \"\\u2B50 Recommended\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2157,\n                      columnNumber: 62\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2155,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"view-counts\",\n                    children: (_flightData$enhancedA => {\n                      const leftViews = getSideSpecificViews(fromAirport, toAirport, 'left', flightData.enhancedAnalysis);\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF05\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2166,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Sunrise Views: \", leftViews.sunrise ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2167,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2165,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF07\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2170,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Sunset Views: \", leftViews.sunset ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2171,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2169,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF19\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2174,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Night Views: \", leftViews.night ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2175,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2173,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDFD4\\uFE0F\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2178,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Mountain Views: \", ((_flightData$enhancedA = flightData.enhancedAnalysis) === null || _flightData$enhancedA === void 0 ? void 0 : _flightData$enhancedA.mountainCount) || 0, \" peaks\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2179,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2177,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true);\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2160,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2154,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `seat-option ${flightData.recommendation === 'right' ? 'recommended' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"seat-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"\\uD83E\\uDE9F Right Side Seats\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2190,\n                      columnNumber: 21\n                    }, this), flightData.recommendation === 'right' && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"recommended-badge\",\n                      children: \"\\u2B50 Recommended\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2191,\n                      columnNumber: 63\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2189,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"view-counts\",\n                    children: (_flightData$enhancedA2 => {\n                      const rightViews = getSideSpecificViews(fromAirport, toAirport, 'right', flightData.enhancedAnalysis);\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF05\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2200,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Sunrise Views: \", rightViews.sunrise ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2201,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2199,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF07\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2204,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Sunset Views: \", rightViews.sunset ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2205,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2203,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDF19\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2208,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Night Views: \", rightViews.night ? 'YES' : 'NO']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2209,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2207,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"count-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-icon\",\n                            children: \"\\uD83C\\uDFD4\\uFE0F\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2212,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"count-text\",\n                            children: [\"Mountain Views: \", ((_flightData$enhancedA2 = flightData.enhancedAnalysis) === null || _flightData$enhancedA2 === void 0 ? void 0 : _flightData$enhancedA2.mountainCount) || 0, \" peaks\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2213,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2211,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true);\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2194,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2188,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2152,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: currentSunPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-view-card slide-up\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"section-icon\",\n                  children: \"\\uD83D\\uDCCA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2229,\n                  columnNumber: 19\n                }, this), \"Current View Analysis\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"view-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"view-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-label\",\n                    children: \"Aircraft Position:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2234,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-value\",\n                    children: [(_currentPosition$lat$ = currentPosition === null || currentPosition === void 0 ? void 0 : (_currentPosition$lat = currentPosition.lat) === null || _currentPosition$lat === void 0 ? void 0 : _currentPosition$lat.toFixed(4)) !== null && _currentPosition$lat$ !== void 0 ? _currentPosition$lat$ : '--', \", \", (_currentPosition$lon$ = currentPosition === null || currentPosition === void 0 ? void 0 : (_currentPosition$lon = currentPosition.lon) === null || _currentPosition$lon === void 0 ? void 0 : _currentPosition$lon.toFixed(4)) !== null && _currentPosition$lon$ !== void 0 ? _currentPosition$lon$ : '--']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2235,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"view-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-label\",\n                    children: \"Sun Elevation:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2240,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-value\",\n                    children: [(_currentSunPosition$e2 = (_currentSunPosition$e3 = currentSunPosition.elevation) === null || _currentSunPosition$e3 === void 0 ? void 0 : _currentSunPosition$e3.toFixed(1)) !== null && _currentSunPosition$e2 !== void 0 ? _currentSunPosition$e2 : '--', \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2241,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"view-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-label\",\n                    children: \"Sun Azimuth:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2244,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-value\",\n                    children: [(_currentSunPosition$a2 = (_currentSunPosition$a3 = currentSunPosition.azimuth) === null || _currentSunPosition$a3 === void 0 ? void 0 : _currentSunPosition$a3.toFixed(1)) !== null && _currentSunPosition$a2 !== void 0 ? _currentSunPosition$a2 : '--', \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2245,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"view-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-label\",\n                    children: \"Sun Visibility:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2248,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"view-value\",\n                    children: currentSunPosition ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sun-tooltip-container\",\n                        children: [currentSunPosition.condition ? getSunConditionMarker(currentSunPosition.condition) : '☀️', /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `sun-tooltip ${currentSunPosition.condition ? currentSunPosition.condition.toLowerCase() : 'daylight'}`,\n                          children: currentSunPosition.condition ? getSunTooltipContent(currentSunPosition) : `Sun • ${((_currentSunPosition$e4 = currentSunPosition.elevation) === null || _currentSunPosition$e4 === void 0 ? void 0 : _currentSunPosition$e4.toFixed(1)) || '--'}° above horizon`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2254,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2252,\n                        columnNumber: 27\n                      }, this), ' ', currentSunPosition.condition === 'NIGHT' ? 'Below Horizon' : 'Visible']\n                    }, void 0, true) : 'Not Available'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2249,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2247,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2227,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flight-progress-container slide-up\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"section-icon\",\n                  children: \"\\uD83D\\uDD50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2275,\n                  columnNumber: 17\n                }, this), \"Flight Timeline\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2274,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"progress-instructions\",\n                children: \"Drag the slider to explore different moments of your flight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2279,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-slider-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-labels\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-icon\",\n                      children: \"\\uD83D\\uDEEB\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2286,\n                      columnNumber: 21\n                    }, this), \"Departure\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2285,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"progress-icon\",\n                      children: \"\\uD83D\\uDEEC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2290,\n                      columnNumber: 21\n                    }, this), \"Arrival\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2289,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2284,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"horizontal-slider-container\",\n                  onMouseDown: handleMouseDown,\n                  onClick: handleClick,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"horizontal-slider-track\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"horizontal-progress-bar\",\n                      style: {\n                        width: `${flightProgress}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2301,\n                      columnNumber: 21\n                    }, this), ((_periods$sunriseTime, _periods$sunsetTime) => {\n                      const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [periods.sunriseProgress !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"timeline-event-marker sunrise-marker\",\n                          style: {\n                            left: `${periods.sunriseProgress}%`\n                          },\n                          title: `Sunrise at ${(_periods$sunriseTime = periods.sunriseTime) === null || _periods$sunriseTime === void 0 ? void 0 : _periods$sunriseTime.toLocaleTimeString([], {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}`,\n                          children: \"\\uD83C\\uDF05\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2314,\n                          columnNumber: 29\n                        }, this), periods.sunsetProgress !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"timeline-event-marker sunset-marker\",\n                          style: {\n                            left: `${periods.sunsetProgress}%`\n                          },\n                          title: `Sunset at ${(_periods$sunsetTime = periods.sunsetTime) === null || _periods$sunsetTime === void 0 ? void 0 : _periods$sunsetTime.toLocaleTimeString([], {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}`,\n                          children: \"\\uD83C\\uDF07\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2323,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true);\n                    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"horizontal-slider-handle\",\n                      style: {\n                        left: `${flightProgress}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2335,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2300,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2295,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-display\",\n                  children: [\"Flight Progress: \", Math.round(flightProgress), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2344,\n                  columnNumber: 17\n                }, this), (() => {\n                  const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                  if (periods.sunrise || periods.sunset) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"sun-events-info\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        style: {\n                          margin: '10px 0 5px 0',\n                          fontSize: '14px',\n                          color: '#ffd700'\n                        },\n                        children: \"\\u2600\\uFE0F Sun Events During Flight\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2354,\n                        columnNumber: 25\n                      }, this), periods.details.map((detail, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: '12px',\n                          margin: '3px 0',\n                          color: '#e2e8f0'\n                        },\n                        children: detail\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2358,\n                        columnNumber: 27\n                      }, this)), periods.sunrise && periods.sunset && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: '11px',\n                          margin: '5px 0',\n                          color: '#10b981',\n                          fontWeight: 'bold'\n                        },\n                        children: \"\\uD83C\\uDF1F Perfect flight for both sunrise and sunset viewing!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2363,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2353,\n                      columnNumber: 23\n                    }, this);\n                  }\n                  return null;\n                })()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2283,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2030,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1694,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1693,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1683,\n    columnNumber: 5\n  }, this);\n};\n_s3(ResultsPage, \"ZLqbH/FqDX809no3RBfJ71w0fnY=\");\n_c5 = ResultsPage;\nfunction App() {\n  _s4();\n  // Page navigation state\n  const [currentPage, setCurrentPage] = useState(AppPage.SEARCH);\n\n  // Form data state - All fields start empty\n  const [fromAirport, setFromAirport] = useState('');\n  const [toAirport, setToAirport] = useState('');\n  const [departureTime, setDepartureTime] = useState('');\n  const [flightDuration, setFlightDuration] = useState(''); // Start empty\n  const [flightData, setFlightData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [flightProgress, setFlightProgress] = useState(0);\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [currentSunPosition, setCurrentSunPosition] = useState(null);\n\n  // View Preferences State - removed (no longer needed)\n\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Helper functions for flight duration calculations\n  const getFlightEndTime = () => {\n    if (!departureTime || !flightDuration) {\n      return new Date(); // Return current time if invalid\n    }\n    const startTime = new Date(departureTime);\n    const endTime = new Date(startTime.getTime() + Number(flightDuration) * 60 * 1000); // Convert minutes to milliseconds\n    return endTime;\n  };\n  const formatTimeDisplay = date => {\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Comprehensive form validation\n    if (!fromAirport || !toAirport || !departureTime || !flightDuration) {\n      setError('Please fill all the details including departure airport, arrival airport, departure time, and flight duration.');\n      setLoading(false);\n      return;\n    }\n\n    // Check if source and destination are the same\n    if (fromAirport === toAirport) {\n      setError('No flights available for the same source and destination airports. Please select different departure and arrival airports.');\n      setLoading(false);\n      return;\n    }\n\n    // Validate flight duration\n    if (typeof flightDuration === 'string' || flightDuration < 30 || flightDuration > 1440) {\n      setError('Flight duration must be a number between 30 and 1440 minutes (24 hours).');\n      setLoading(false);\n      return;\n    }\n\n    // SIMPLIFIED APPROACH: Generate flight analysis directly in frontend\n    try {\n      console.log('Generating simplified flight analysis...');\n      const mockFlightData = generateSimplifiedFlightAnalysis(fromAirport, toAirport, departureTime, flightDuration);\n      setFlightData(mockFlightData);\n\n      // Set initial flight progress to 0% (departure)\n      setFlightProgress(0);\n      console.log('Simplified flight analysis completed:', mockFlightData);\n\n      // Navigate to results page\n      setCurrentPage(AppPage.RESULTS);\n    } catch (err) {\n      setError('Unable to generate flight analysis. Please check your input and try again.');\n      console.error('Error generating flight analysis:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleProgressChange = useCallback(newProgress => {\n    setFlightProgress(newProgress);\n  }, []);\n\n  // Throttled version for smooth dragging with optimized frequency\n  const throttledProgressChange = useCallback(throttle(newProgress => {\n    setFlightProgress(newProgress);\n  }, 8),\n  // ~120 FPS for ultra-smooth airplane movement\n  []);\n  const handleClick = e => {\n    e.preventDefault();\n\n    // Immediately update position on click for instant feedback\n    if (flightData) {\n      const sliderElement = e.currentTarget.closest('.horizontal-slider-container');\n      if (sliderElement) {\n        const rect = sliderElement.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        let percentage = x / rect.width * 100;\n\n        // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n        if (percentage > 95) percentage = 100;\n        if (percentage < 5) percentage = 0;\n        percentage = Math.max(0, Math.min(100, percentage));\n\n        // Immediately update the visual elements without waiting for React state\n        const handle = document.querySelector('.horizontal-slider-handle');\n        const progressBar = document.querySelector('.horizontal-progress-bar');\n        const progressText = document.querySelector('.progress-display');\n        if (handle) handle.style.left = `${percentage}%`;\n        if (progressBar) progressBar.style.width = `${percentage}%`;\n        if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n        handleProgressChange(percentage);\n      }\n    }\n  };\n  const handleMouseDown = e => {\n    e.preventDefault();\n    setIsDragging(true);\n    const sliderElement = e.currentTarget;\n    let isDraggingLocal = true;\n\n    // Function to update slider position\n    const updateSliderPosition = clientX => {\n      if (!flightData || !sliderElement) return;\n      const rect = sliderElement.getBoundingClientRect();\n      const x = clientX - rect.left;\n      let percentage = x / rect.width * 100;\n\n      // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n      if (percentage > 95) percentage = 100;\n      if (percentage < 5) percentage = 0;\n      percentage = Math.max(0, Math.min(100, percentage));\n\n      // INSTANT updates - both visual and airplane position\n      const handle = document.querySelector('.horizontal-slider-handle');\n      const progressBar = document.querySelector('.horizontal-progress-bar');\n      const progressText = document.querySelector('.progress-display');\n      if (handle) handle.style.left = `${percentage}%`;\n      if (progressBar) progressBar.style.width = `${percentage}%`;\n      if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n\n      // IMMEDIATE React state update\n      setFlightProgress(percentage);\n    };\n\n    // Initial update on mouse down\n    updateSliderPosition(e.clientX);\n\n    // Mouse move handler\n    const mouseMoveHandler = e => {\n      e.preventDefault();\n      if (!isDraggingLocal) return;\n      updateSliderPosition(e.clientX);\n    };\n\n    // Mouse up handler\n    const mouseUpHandler = () => {\n      isDraggingLocal = false;\n      setIsDragging(false);\n      document.removeEventListener('mousemove', mouseMoveHandler);\n      document.removeEventListener('mouseup', mouseUpHandler);\n    };\n    document.addEventListener('mousemove', mouseMoveHandler, {\n      passive: false\n    });\n    document.addEventListener('mouseup', mouseUpHandler, {\n      passive: false\n    });\n  };\n  const handlePositionChange = position => {\n    setCurrentPosition({\n      lat: position.lat,\n      lon: position.lon\n    });\n    setCurrentSunPosition(position.sunPosition);\n  };\n\n  // Navigation function to go back to search\n  const goBackToSearch = () => {\n    setCurrentPage(AppPage.SEARCH);\n    setError(null); // Clear any errors when going back\n  };\n\n  // Navigation function to change pages\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    setError(null); // Clear any errors when changing pages\n  };\n  const renderCurrentPage = () => {\n    switch (currentPage) {\n      case AppPage.SEARCH:\n        return /*#__PURE__*/_jsxDEV(SearchPage, {\n          fromAirport: fromAirport,\n          setFromAirport: setFromAirport,\n          toAirport: toAirport,\n          setToAirport: setToAirport,\n          departureTime: departureTime,\n          setDepartureTime: setDepartureTime,\n          flightDuration: flightDuration,\n          setFlightDuration: setFlightDuration,\n          loading: loading,\n          error: error,\n          onSubmit: handleSubmit,\n          formatTimeDisplay: formatTimeDisplay,\n          getFlightEndTime: getFlightEndTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2605,\n          columnNumber: 11\n        }, this);\n      case AppPage.RESULTS:\n        return /*#__PURE__*/_jsxDEV(ResultsPage, {\n          flightData: flightData,\n          fromAirport: fromAirport,\n          toAirport: toAirport,\n          currentPosition: currentPosition,\n          currentSunPosition: currentSunPosition,\n          flightProgress: flightProgress,\n          handleProgressChange: handleProgressChange,\n          handlePositionChange: handlePositionChange,\n          isDragging: isDragging,\n          handleMouseDown: handleMouseDown,\n          handleClick: handleClick,\n          onBack: goBackToSearch,\n          departureTime: departureTime,\n          flightDuration: flightDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2623,\n          columnNumber: 11\n        }, this);\n      case AppPage.EXPERIENCE:\n        return /*#__PURE__*/_jsxDEV(ExperiencePage, {\n          onBack: goBackToSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2642,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      currentPage: currentPage,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2653,\n      columnNumber: 7\n    }, this), renderCurrentPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2652,\n    columnNumber: 5\n  }, this);\n}\n_s4(App, \"iJSOBStWVrHwFqMiG9TDmh/qh3E=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"InteractiveAirplane\");\n$RefreshReg$(_c2, \"Navigation\");\n$RefreshReg$(_c3, \"ExperiencePage\");\n$RefreshReg$(_c4, \"SearchPage\");\n$RefreshReg$(_c5, \"ResultsPage\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","MapContainer","TileLayer","Marker","Popup","Polyline","L","AirplaneExperience","jsxDEV","_jsxDEV","Fragment","_Fragment","throttle","func","delay","timeoutId","lastExecTime","args","currentTime","Date","now","clearTimeout","setTimeout","Icon","Default","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","AIRPORTS","MOUNTAINS","lat","lon","name","elevation","region","getMountainsVisibleFromPath","flightPath","maxDistance","visibleMountains","Object","entries","forEach","mountainKey","mountain","isVisible","some","waypoint","distance","calculateDistance","push","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","generateSimplifiedFlightAnalysis","fromAirport","toAirport","departureTime","flightDuration","console","log","fromCoords","toCoords","Error","depTime","arrivalTime","getTime","path","i","fraction","enhancedAnalysis","generateBasicSunAnalysis","sunPositions","map","index","timeAtWaypoint","hour","getHours","minute","getMinutes","timeInMinutes","lonDiff","random","depHour","depMinute","depTimeInMinutes","GOLDEN_HOUR_BEFORE_SUNRISE_START","GOLDEN_HOUR_BEFORE_SUNRISE_END","SUNRISE_START","SUNRISE_END","SUN_VISIBLE_START","SUN_VISIBLE_END","GOLDEN_HOUR_BEFORE_SUNSET_START","GOLDEN_HOUR_BEFORE_SUNSET_END","SUNSET_START","SUNSET_END","condition","azimuth","isTimeInRange","time","start","end","NIGHT_START","NIGHT_END","timeStr","floor","toString","padStart","isSunrise","isSunset","hardcodedSide","getHardcodedSunSide","calculateRealisticSunAzimuth","String","toFixed","toISOString","mountainCount","length","recommendation","seatSuggestion","arrHour","arrMinute","depTimeMinutes","arrTimeMinutes","willSeeGoldenHourBeforeSunrise","willSeeSunrise","willSeeSunVisible","willSeeGoldenHourBeforeSunset","willSeeSunset","willSeeNight","checkTimeOverlap","startMinutes","endMinutes","flightDurationMinutes","flightEndMinutes","startsInNight","endsInNight","crossesMidnight","overlapBeforeMidnight","overlapAfterMidnight","willSeeGoldenHour","summary","recommendations","nightHours","calculateNightHours","determineSeatSuggestion","timeline","nightDuration","dayDuration","arrTime","max","lat1Rad","lat2Rad","y","x","flightBearing","relativeSunPosition","getSideSpecificViews","side","sunrise","sunset","night","sunriseVisible","relativeSunrisePosition","sunsetVisible","relativeSunsetPosition","getSunConditionMarker","getSunTooltipContent","sunPos","_sunPos$elevation2","_sunPos$elevation","abs","marker","CITY_PAIR_SUN_MAPPINGS","routeKey","mapping","flightLonDiff","sunAzimuth","relativeSunAzimuth","mapAzimuth","calculateBearing","bearing","createAirplaneIcon","rotation","divIcon","className","html","iconSize","iconAnchor","InteractiveAirplane","flightData","flightProgress","onPositionChange","_s","airplaneRef","getCurrentAirplaneData","position","totalDistance","exactProgress","currentIndex","nextIndex","min","currentWaypoint","nextWaypoint","progressInSegment","prevIndex","prevWaypoint","currentPosition","airplaneRotation","currentSunPosition","sunProgress","sunIndex","nextSunIndex","currentSun","nextSun","sunProgressInSegment","sunPosition","current","leafletElement","_map","setView","getZoom","animate","duration","ref","icon","draggable","interactive","bubblingMouseEvents","eventHandlers","dragstart","e","_preventDefault","_ref","preventDefault","call","drag","_preventDefault2","_ref2","dragend","_preventDefault3","_ref3","mousedown","_e$originalEvent","originalEvent","mouseup","_e$originalEvent2","mousemove","_e$originalEvent3","add","element","getElement","style","pointerEvents","userSelect","touchAction","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AppPage","Navigation","currentPage","onPageChange","background","padding","boxShadow","top","zIndex","maxWidth","margin","display","alignItems","justifyContent","gap","color","fontSize","fontWeight","onClick","SEARCH","border","borderRadius","cursor","transition","onMouseEnter","currentTarget","onMouseLeave","EXPERIENCE","_c2","ExperiencePage","onBack","_s2","selectedSeat","setSelectedSeat","height","overflow","onSeatChange","_c3","SearchPage","setFromAirport","setToAirport","setDepartureTime","setFlightDuration","loading","error","onSubmit","formatTimeDisplay","getFlightEndTime","htmlFor","id","value","onChange","target","required","label","type","step","intValue","parseInt","isNaN","placeholder","marginTop","Number","marginBottom","disabled","width","borderTop","_c4","getOptimalPeriodsInFlight","_flightData$path","_flightData$sunPositi","details","startTime","endTime","sunriseInFlight","sunsetInFlight","sunriseTime","sunsetTime","sunriseProgress","sunsetProgress","prevSunPos","toLocaleTimeString","ResultsPage","handleProgressChange","handlePositionChange","isDragging","handleMouseDown","handleClick","_s3","_currentPosition$lat$","_currentPosition$lat","_currentPosition$lon$","_currentPosition$lon","_currentSunPosition$e2","_currentSunPosition$e3","_currentSunPosition$a2","_currentSunPosition$a3","_currentSunPosition$e4","mapWidth","setMapWidth","isDraggingResize","setIsDraggingResize","handleResizeMouseDown","handleMouseMove","containerWidth","window","innerWidth","newMapWidth","clientX","constrainedWidth","handleMouseUp","document","removeEventListener","addEventListener","adjustTooltipPositions","tooltipContainers","querySelectorAll","container","rect","getBoundingClientRect","viewportWidth","classList","remove","right","left","center","zoom","url","attribution","positions","wp","weight","_currentSunPosition$a","_currentSunPosition$e","startPoint","endPoint","sunBearing","elevationDegrees","sunDistance","sunLat","sunLon","opacity","dashArray","toLocaleString","minWidth","lineHeight","onMouseDown","message","rec","timeString","round","progressPercent","_flightData$enhancedA","leftViews","_flightData$enhancedA2","rightViews","toLowerCase","_periods$sunriseTime","_periods$sunsetTime","periods","undefined","title","detail","_c5","App","_s4","setCurrentPage","setFlightData","setLoading","setError","setFlightProgress","setCurrentPosition","setCurrentSunPosition","setIsDragging","date","hour12","handleSubmit","mockFlightData","RESULTS","err","newProgress","throttledProgressChange","sliderElement","closest","percentage","handle","querySelector","progressBar","progressText","textContent","isDraggingLocal","updateSliderPosition","mouseMoveHandler","mouseUpHandler","passive","goBackToSearch","handlePageChange","page","renderCurrentPage","_c6","$RefreshReg$"],"sources":["C:/Users/prakh/Desktop/Flight/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport './index.css';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport AirplaneExperience from './components/AirplaneExperience.tsx';\nimport axios from 'axios';\n\n// Throttle function for smooth slider performance\nconst throttle = (func: Function, delay: number) => {\n  let timeoutId: number | null = null;\n  let lastExecTime = 0;\n  return (...args: any[]) => {\n    const currentTime = Date.now();\n    \n    if (currentTime - lastExecTime > delay) {\n      func(...args);\n      lastExecTime = currentTime;\n    } else {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        func(...args);\n        lastExecTime = Date.now();\n      }, delay - (currentTime - lastExecTime));\n    }\n  };\n};\n\n// Fix for default markers\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\n// Types\ninterface Waypoint {\n  lat: number;\n  lon: number;\n}\n\ntype SunCondition = \n  | 'GOLDEN_HOUR_BEFORE_SUNRISE'\n  | 'SUNRISE'\n  | 'DAYLIGHT'\n  | 'GOLDEN_HOUR_BEFORE_SUNSET'\n  | 'SUNSET'\n  | 'NIGHT';\n\ninterface SunPosition {\n  lat: number;\n  lon: number;\n  time: string;\n  azimuth: number;\n  elevation: number;\n  condition?: SunCondition; // Optional for backward compatibility\n}\n\ninterface EnhancedSunAnalysis {\n  willSeeSunrise: boolean;\n  willSeeSunset: boolean;\n  willSeeNight: boolean;\n  willSeeGoldenHour: boolean;\n  sunrise?: {\n    time: string;\n    timeString: string;\n    location: string;\n    progressPercent: number;\n  };\n  sunset?: {\n    time: string;\n    timeString: string;\n    location: string;\n    progressPercent: number;\n  };\n  summary: string[];\n  recommendations: string[];\n  seatSuggestion: 'left' | 'right' | 'either';\n  timeline: Array<{\n    time: string;\n    timeString: string;\n    lat: number;\n    lon: number;\n    sunElevation: number;\n    sunAzimuth: number;\n    condition: 'NIGHT' | 'TWILIGHT' | 'GOLDEN_HOUR' | 'DAYLIGHT';\n    progressPercent: number;\n  }>;\n  nightDuration?: number;\n  dayDuration?: number;\n  mountainCount?: number;\n}\n\ninterface FlightData {\n  path: Waypoint[];\n  sunPositions: SunPosition[];\n  recommendation: string;\n  distance?: number;\n  flightTime?: number;\n  enhancedAnalysis?: EnhancedSunAnalysis;\n}\n\n// Airport coordinates database\nconst AIRPORTS: { [key: string]: [number, number] } = {\n  // Indian Airports\n  'DEL': [28.5562, 77.1000], // Delhi\n  'BOM': [19.0896, 72.8656], // Mumbai\n  'BLR': [12.9716, 77.5946], // Bangalore\n  'MAA': [12.9941, 80.1709], // Chennai\n  'CCU': [22.6547, 88.4467], // Kolkata\n  'HYD': [17.2403, 78.4294], // Hyderabad\n  'COK': [9.9312, 76.2673],  // Kochi\n  'GOI': [15.3808, 73.8314], // Goa\n  'AMD': [23.0725, 72.6347], // Ahmedabad\n  'PNQ': [18.5679, 73.9143], // Pune\n  'BHO': [23.2599, 77.4126], // Bhopal\n  'JAI': [26.9124, 75.7873], // Jaipur\n  'LKO': [26.7606, 80.8843], // Lucknow\n  \n  // International Airports\n  'JFK': [40.6413, -73.7781], // New York JFK\n  'LHR': [51.4700, -0.4543],  // London Heathrow\n  'NRT': [35.7720, 140.3929], // Tokyo Narita\n  'LAX': [33.9425, -118.4081], // Los Angeles\n  'DXB': [25.2532, 55.3657],  // Dubai\n  'SIN': [1.3644, 103.9915],  // Singapore\n  'SYD': [-33.9461, 151.1772], // Sydney\n  'CDG': [49.0097, 2.5479],   // Paris Charles de Gaulle\n  'FRA': [50.0379, 8.5622],   // Frankfurt\n  'HKG': [22.3080, 113.9185], // Hong Kong\n  'ICN': [37.4602, 126.4407], // Seoul Incheon\n  'BKK': [13.6900, 100.7501], // Bangkok\n  'DOH': [25.2731, 51.6080],  // Doha\n  'IST': [41.2619, 28.7414],  // Istanbul\n  'MAD': [40.4719, -3.5626]   // Madrid\n};\n\n// Mountain locations for mountain view feature\nconst MOUNTAINS: { [key: string]: { lat: number, lon: number, name: string, elevation: number, region: string } } = {\n  // Himalayas - Northern India\n  'EVEREST': { lat: 27.9881, lon: 86.9250, name: 'Mount Everest', elevation: 8849, region: 'Himalayas' },\n  'K2': { lat: 35.8808, lon: 76.5155, name: 'K2', elevation: 8611, region: 'Karakoram' },\n  'KANCHENJUNGA': { lat: 27.7025, lon: 88.1475, name: 'Kanchenjunga', elevation: 8586, region: 'Himalayas' },\n  'NANDA_DEVI': { lat: 30.3763, lon: 79.9737, name: 'Nanda Devi', elevation: 7816, region: 'Himalayas' },\n  'DHAULAGIRI': { lat: 28.6967, lon: 83.4933, name: 'Dhaulagiri', elevation: 8167, region: 'Himalayas' },\n  'ANNAPURNA': { lat: 28.5967, lon: 83.8203, name: 'Annapurna', elevation: 8091, region: 'Himalayas' },\n  \n  // Western Ghats - South & West India\n  'ANAMUDI': { lat: 10.1783, lon: 77.0650, name: 'Anamudi', elevation: 2695, region: 'Western Ghats' },\n  'DODDABETTA': { lat: 11.4064, lon: 76.7392, name: 'Doddabetta', elevation: 2637, region: 'Nilgiris' },\n  'MULLAYANAGIRI': { lat: 13.3931, lon: 75.7185, name: 'Mullayanagiri', elevation: 1930, region: 'Western Ghats' },\n  'KALSUBAI': { lat: 19.6092, lon: 73.7031, name: 'Kalsubai', elevation: 1646, region: 'Sahyadris' },\n  'HARISHCHANDRAGAD': { lat: 19.5217, lon: 73.7636, name: 'Harishchandragad', elevation: 1424, region: 'Sahyadris' },\n  \n  // Eastern Ghats & Central India\n  'MAHENDRAGIRI': { lat: 18.8503, lon: 84.2883, name: 'Mahendragiri', elevation: 1501, region: 'Eastern Ghats' },\n  'ARMA_KONDA': { lat: 18.3500, lon: 82.9167, name: 'Arma Konda', elevation: 1680, region: 'Eastern Ghats' },\n  'GURU_SHIKHAR': { lat: 24.5925, lon: 72.7894, name: 'Guru Shikhar', elevation: 1722, region: 'Aravalli' },\n  \n  // Northeast India\n  'SARAMATI': { lat: 26.0000, lon: 94.7667, name: 'Saramati', elevation: 3826, region: 'Nagaland Hills' },\n  'BLUE_MOUNTAIN': { lat: 23.2833, lon: 92.8167, name: 'Blue Mountain', elevation: 2157, region: 'Mizoram Hills' },\n  \n  // International Mountains (for international flights)\n  'MONT_BLANC': { lat: 45.8326, lon: 6.8652, name: 'Mont Blanc', elevation: 4809, region: 'Alps' },\n  'MATTERHORN': { lat: 45.9763, lon: 7.6586, name: 'Matterhorn', elevation: 4478, region: 'Alps' },\n  'FUJI': { lat: 35.3606, lon: 138.7274, name: 'Mount Fuji', elevation: 3776, region: 'Japan' },\n  'DENALI': { lat: 63.0692, lon: -151.0070, name: 'Denali', elevation: 6190, region: 'Alaska' },\n  'ROCKY_MOUNTAINS': { lat: 39.7392, lon: -104.9903, name: 'Rocky Mountains', elevation: 4401, region: 'USA' },\n};\n\n// Function to get mountains visible from flight path\nconst getMountainsVisibleFromPath = (flightPath: Waypoint[], maxDistance: number = 200): string[] => {\n  const visibleMountains: string[] = [];\n  \n  // Check each mountain against the flight path\n  Object.entries(MOUNTAINS).forEach(([mountainKey, mountain]) => {\n    // Check if mountain is within viewing distance of any point on the flight path\n    const isVisible = flightPath.some(waypoint => {\n      const distance = calculateDistance(waypoint.lat, waypoint.lon, mountain.lat, mountain.lon);\n      return distance <= maxDistance; // Within 200km viewing distance\n    });\n    \n    if (isVisible) {\n      visibleMountains.push(mountainKey);\n    }\n  });\n  \n  return visibleMountains;\n};\n\n// Distance calculation function (great circle distance)\nconst calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\n  const R = 6371; // Earth's radius in kilometers\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n    Math.sin(dLon/2) * Math.sin(dLon/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n};\n\n// Simplified flight analysis function\nconst generateSimplifiedFlightAnalysis = (\n  fromAirport: string,\n  toAirport: string,\n  departureTime: string,\n  flightDuration: number\n): FlightData => {\n  console.log(`Analyzing flight: ${fromAirport} → ${toAirport}, ${departureTime}, ${flightDuration} min`);\n  \n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  \n  if (!fromCoords || !toCoords) {\n    throw new Error(`Unknown airport: ${fromAirport} or ${toAirport}`);\n  }\n\n  // Parse departure time\n  const depTime = new Date(departureTime);\n  const arrivalTime = new Date(depTime.getTime() + flightDuration * 60 * 1000);\n  \n  // Generate basic flight path (5 waypoints)\n  const path: Waypoint[] = [];\n  for (let i = 0; i <= 4; i++) {\n    const fraction = i / 4;\n    const lat = fromCoords[0] + (toCoords[0] - fromCoords[0]) * fraction;\n    const lon = fromCoords[1] + (toCoords[1] - fromCoords[1]) * fraction;\n    path.push({ lat, lon });\n  }\n\n  // Generate basic sun analysis\n  const enhancedAnalysis = generateBasicSunAnalysis(\n    fromAirport,\n    toAirport,\n    depTime,\n    arrivalTime,\n    flightDuration\n  );\n\n  // Generate sun positions with correct side placement based on flight direction\n  const sunPositions: SunPosition[] = path.map((waypoint, index) => {\n    const timeAtWaypoint = new Date(depTime.getTime() + (index / 4) * flightDuration * 60 * 1000);\n    const hour = timeAtWaypoint.getHours();\n    const minute = timeAtWaypoint.getMinutes();\n    const timeInMinutes = hour * 60 + minute;\n    \n    // Calculate flight direction\n    const fromCoords = AIRPORTS[fromAirport];\n    const toCoords = AIRPORTS[toAirport];\n    const lonDiff = toCoords[1] - fromCoords[1]; // + means flying east, - means flying west\n    \n    // Simplified sun elevation based on time of day\n    let elevation: number;\n    if (hour >= 6 && hour <= 8) elevation = Math.random() * 10; // Sunrise\n    else if (hour >= 18 && hour <= 20) elevation = Math.random() * 10; // Sunset\n    else if (hour >= 9 && hour <= 17) elevation = 30 + Math.random() * 40; // Day\n    else elevation = -10 - Math.random() * 20; // Night\n    \n    // Use departure time to determine sun position for the entire flight\n    const depHour = depTime.getHours();\n    const depMinute = depTime.getMinutes();\n    const depTimeInMinutes = depHour * 60 + depMinute;\n    \n    // Define time intervals in minutes (same as in generateBasicSunAnalysis)\n    const GOLDEN_HOUR_BEFORE_SUNRISE_START = 4 * 60;    // 4:00 AM\n    const GOLDEN_HOUR_BEFORE_SUNRISE_END = 4 * 60 + 59; // 4:59 AM\n    const SUNRISE_START = 5 * 60;                       // 5:00 AM\n    const SUNRISE_END = 8 * 60;                          // 8:00 AM\n    const SUN_VISIBLE_START = 8 * 60 + 1;                // 8:01 AM\n    const SUN_VISIBLE_END = 17 * 60;                     // 5:00 PM\n    const GOLDEN_HOUR_BEFORE_SUNSET_START = 17 * 60 + 1; // 5:01 PM\n    const GOLDEN_HOUR_BEFORE_SUNSET_END = 17 * 60 + 59;  // 5:59 PM\n    const SUNSET_START = 18 * 60;                        // 6:00 PM\n    const SUNSET_END = 19 * 60;                          // 7:00 PM\n    \n    // Calculate realistic sun position based on time of day and flight direction\n    let condition: SunCondition;\n    let azimuth: number;\n    \n    // Determine condition based on time with comprehensive coverage of ALL scenarios\n    // Helper function to check if time falls within a range (handles midnight wrap)\n    const isTimeInRange = (time: number, start: number, end: number): boolean => {\n      if (start <= end) {\n        // Normal range (e.g., 5:00 AM to 8:00 AM)\n        return time >= start && time <= end;\n      } else {\n        // Overnight range (e.g., 7:01 PM to 3:59 AM)\n        return time >= start || time <= end;\n      }\n    };\n    \n    // Define ALL time periods (including night period that wraps around midnight)\n    const NIGHT_START = 19 * 60 + 1; // 7:01 PM (1141 minutes)\n    const NIGHT_END = 3 * 60 + 59;   // 3:59 AM (239 minutes)\n    \n    // Check conditions in priority order (most specific first)\n    if (isTimeInRange(timeInMinutes, SUNRISE_START, SUNRISE_END)) {\n      // 5:00 AM - 8:00 AM: Sunrise period\n      condition = 'SUNRISE';\n    } else if (isTimeInRange(timeInMinutes, GOLDEN_HOUR_BEFORE_SUNRISE_START, GOLDEN_HOUR_BEFORE_SUNRISE_END)) {\n      // 4:00 AM - 4:59 AM: Golden hour before sunrise\n      condition = 'GOLDEN_HOUR_BEFORE_SUNRISE';\n    } else if (isTimeInRange(timeInMinutes, SUNSET_START, SUNSET_END)) {\n      // 6:00 PM - 7:00 PM: Sunset period\n      condition = 'SUNSET';\n    } else if (isTimeInRange(timeInMinutes, GOLDEN_HOUR_BEFORE_SUNSET_START, GOLDEN_HOUR_BEFORE_SUNSET_END)) {\n      // 5:01 PM - 5:59 PM: Golden hour before sunset\n      condition = 'GOLDEN_HOUR_BEFORE_SUNSET';\n    } else if (isTimeInRange(timeInMinutes, SUN_VISIBLE_START, SUN_VISIBLE_END)) {\n      // 8:01 AM - 5:00 PM: Full daylight\n      condition = 'DAYLIGHT';\n    } else if (isTimeInRange(timeInMinutes, NIGHT_START, NIGHT_END)) {\n      // 7:01 PM - 3:59 AM: Night period (wraps around midnight)\n      condition = 'NIGHT';\n    } else {\n      // Fallback for any edge cases\n      condition = 'DAYLIGHT';\n    }\n    \n    // Debug logging for time condition assignment\n    const timeStr = `${Math.floor(timeInMinutes/60).toString().padStart(2,'0')}:${(timeInMinutes%60).toString().padStart(2,'0')}`;\n    console.log(`TIME CONDITION: ${timeStr} (${timeInMinutes}min) → ${condition}`);\n    \n    // Calculate realistic sun azimuth with hardcoded city pair overrides\n    const isSunrise = condition === 'SUNRISE' || condition === 'GOLDEN_HOUR_BEFORE_SUNRISE';\n    const isSunset = condition === 'SUNSET' || condition === 'GOLDEN_HOUR_BEFORE_SUNSET';\n    \n    // Try hardcoded mapping first\n    let hardcodedSide: 'left' | 'right' | null = null;\n    if (isSunrise) {\n      hardcodedSide = getHardcodedSunSide(fromAirport, toAirport, true);\n    } else if (isSunset) {\n      hardcodedSide = getHardcodedSunSide(fromAirport, toAirport, false);\n    }\n    \n    // Calculate realistic sun azimuth based on actual time and sun movement\n    azimuth = calculateRealisticSunAzimuth(timeInMinutes, lonDiff, fromAirport, toAirport);\n    \n    console.log(`REALISTIC SUN: ${fromAirport}→${toAirport}, Time: ${Math.floor(timeInMinutes/60)}:${String(timeInMinutes%60).padStart(2,'0')}, Condition: ${condition}, Azimuth: ${azimuth.toFixed(1)}°`);\n    \n    return {\n      lat: waypoint.lat,\n      lon: waypoint.lon,\n      time: timeAtWaypoint.toISOString(),\n      azimuth,\n      elevation,\n      condition\n    };\n  });\n\n  // Calculate mountain count\n  const visibleMountains = getMountainsVisibleFromPath(path, 200);\n  const mountainCount = visibleMountains.length;\n\n  return {\n    path,\n    sunPositions,\n    recommendation: enhancedAnalysis.seatSuggestion,\n    enhancedAnalysis: {\n      ...enhancedAnalysis,\n      mountainCount\n    }\n  };\n};\n\n// Enhanced sun analysis based on precise time intervals\nconst generateBasicSunAnalysis = (\n  fromAirport: string,\n  toAirport: string,\n  departureTime: Date,\n  arrivalTime: Date,\n  flightDuration: number\n): EnhancedSunAnalysis => {\n  \n  const depHour = departureTime.getHours();\n  const depMinute = departureTime.getMinutes();\n  const arrHour = arrivalTime.getHours();\n  const arrMinute = arrivalTime.getMinutes();\n  \n  console.log(`Flight time analysis: Dep ${depHour}:${depMinute.toString().padStart(2, '0')} → Arr ${arrHour}:${arrMinute.toString().padStart(2, '0')}`);\n  \n  // Convert times to minutes for easier comparison\n  const depTimeMinutes = depHour * 60 + depMinute;\n  const arrTimeMinutes = arrHour * 60 + arrMinute;\n  \n  // Define time intervals in minutes\n  const GOLDEN_HOUR_BEFORE_SUNRISE_START = 4 * 60;    // 4:00 AM\n  const GOLDEN_HOUR_BEFORE_SUNRISE_END = 4 * 60 + 59; // 4:59 AM\n  const SUNRISE_START = 5 * 60;                       // 5:00 AM\n  const SUNRISE_END = 8 * 60;                          // 8:00 AM\n  const SUN_VISIBLE_START = 8 * 60 + 1;                // 8:01 AM\n  const SUN_VISIBLE_END = 17 * 60;                     // 5:00 PM\n  const GOLDEN_HOUR_BEFORE_SUNSET_START = 17 * 60 + 1; // 5:01 PM\n  const GOLDEN_HOUR_BEFORE_SUNSET_END = 17 * 60 + 59;  // 5:59 PM\n  const SUNSET_START = 18 * 60;                        // 6:00 PM\n  const SUNSET_END = 19 * 60;                          // 7:00 PM\n  const NIGHT_START = 19 * 60 + 1;                     // 7:01 PM\n  const NIGHT_END = 3 * 60 + 59;                       // 3:59 AM\n  \n  // Initialize detection flags\n  let willSeeGoldenHourBeforeSunrise = false;\n  let willSeeSunrise = false;\n  let willSeeSunVisible = false;\n  let willSeeGoldenHourBeforeSunset = false;\n  let willSeeSunset = false;\n  let willSeeNight = false;\n  \n  // Function to check if a time interval overlaps with flight time\n  // Handles ALL scenarios:\n  // ✅ Same-day flights (10AM-2PM)\n  // ✅ Overnight flights (4PM-2AM) \n  // ✅ Long flights (24+ hours)\n  // ✅ Night period wrap-around (7:01PM-3:59AM)\n  // ✅ All time periods: sunrise, sunset, golden hour, daylight, night\n  const checkTimeOverlap = (startMinutes: number, endMinutes: number): boolean => {\n    const flightDurationMinutes = typeof flightDuration === 'number' ? flightDuration : 0;\n    \n    // Calculate flight end time in minutes from start of day\n    const flightEndMinutes = depTimeMinutes + flightDurationMinutes;\n    \n    // Handle night period (wraps around midnight: 19:01 to 3:59)\n    if (startMinutes > endMinutes) {\n      // For night period, check two conditions:\n      // 1. Flight starts during night hours (after 19:01)\n      // 2. Flight crosses midnight and continues into night hours (before 3:59)\n      \n      const startsInNight = depTimeMinutes >= startMinutes; // Starts after 19:01\n      const endsInNight = (flightEndMinutes > 24*60) && ((flightEndMinutes - 24*60) <= endMinutes); // Crosses midnight and ends before 3:59\n      const crossesMidnight = flightEndMinutes > 24*60;\n      \n      return startsInNight || (crossesMidnight && endsInNight);\n    }\n    \n    // Handle regular periods (don't wrap around midnight)\n    // Check if the time period overlaps with flight duration\n    \n    if (flightEndMinutes <= 24*60) {\n      // Flight doesn't cross midnight - simple overlap check\n      return (depTimeMinutes <= endMinutes) && (flightEndMinutes >= startMinutes);\n    } else {\n      // Flight crosses midnight - check both before and after midnight\n      const overlapBeforeMidnight = (depTimeMinutes <= endMinutes) && (24*60 >= startMinutes);\n      const overlapAfterMidnight = ((flightEndMinutes - 24*60) >= startMinutes) && (startMinutes >= 0);\n      return overlapBeforeMidnight || overlapAfterMidnight;\n    }\n  };\n  \n  // Check each time interval - now properly detects overlaps during flight duration\n  willSeeSunrise = checkTimeOverlap(SUNRISE_START, SUNRISE_END);\n  willSeeSunset = checkTimeOverlap(SUNSET_START, SUNSET_END);\n  willSeeNight = checkTimeOverlap(NIGHT_START, NIGHT_END);\n  willSeeSunVisible = checkTimeOverlap(SUN_VISIBLE_START, SUN_VISIBLE_END);\n  willSeeGoldenHourBeforeSunrise = checkTimeOverlap(GOLDEN_HOUR_BEFORE_SUNRISE_START, GOLDEN_HOUR_BEFORE_SUNRISE_END);\n  willSeeGoldenHourBeforeSunset = checkTimeOverlap(GOLDEN_HOUR_BEFORE_SUNSET_START, GOLDEN_HOUR_BEFORE_SUNSET_END);\n  \n  // Golden hour is true if any golden hour period is detected\n  const willSeeGoldenHour = willSeeGoldenHourBeforeSunrise || willSeeGoldenHourBeforeSunset;\n  \n  console.log(`Detection Results:\n    Golden Hour Before Sunrise: ${willSeeGoldenHourBeforeSunrise}\n    Sunrise: ${willSeeSunrise}\n    Sun Visible: ${willSeeSunVisible}\n    Golden Hour Before Sunset: ${willSeeGoldenHourBeforeSunset}\n    Sunset: ${willSeeSunset}\n    Night: ${willSeeNight}\n    Golden Hour: ${willSeeGoldenHour}`);\n  \n  // Generate smart recommendations\n  const summary: string[] = [];\n  const recommendations: string[] = [];\n  \n  // Sunrise analysis\n  if (willSeeSunrise) {\n    summary.push(`🌅 You WILL see a beautiful sunrise during this flight!`);\n    recommendations.push(\"Choose a window seat on the EAST side for the best sunrise views.\");\n  }\n  \n  // Sunset analysis\n  if (willSeeSunset) {\n    summary.push(`🌇 You WILL see a stunning sunset during this flight!`);\n    recommendations.push(\"Choose a window seat on the WEST side for the best sunset views.\");\n  }\n  \n  // Both sunrise and sunset\n  if (willSeeSunrise && willSeeSunset) {\n    summary.push(\"🌟 Amazing! You'll see BOTH sunrise AND sunset during this flight!\");\n    recommendations.push(\"This is a rare treat! You'll experience the full sun cycle during your journey.\");\n  }\n  \n  // Golden hour analysis\n  if (willSeeGoldenHour) {\n    if (willSeeGoldenHourBeforeSunrise) {\n      summary.push(`✨ You'll experience magical golden hour lighting before sunrise!`);\n    } else if (willSeeGoldenHourBeforeSunset) {\n      summary.push(`✨ You'll experience beautiful golden hour lighting before sunset!`);\n    }\n  }\n  \n  // Night analysis\n  if (willSeeNight) {\n    const nightHours = calculateNightHours(departureTime, arrivalTime);\n    summary.push(`🌙 You'll experience ${nightHours} hours of night flying - perfect for stargazing!`);\n    recommendations.push(\"Great opportunity for night photography and seeing city lights from above.\");\n  }\n  \n  // Sun visible analysis\n  if (willSeeSunVisible && !willSeeSunrise && !willSeeSunset) {\n    summary.push(`☀️ This will be a bright daylight flight with excellent visibility.`);\n    recommendations.push(\"Perfect for scenic landscape viewing and aerial photography.\");\n  }\n  \n  // Add general recommendations\n  if (willSeeSunrise || willSeeSunset || willSeeGoldenHour) {\n    recommendations.push(\"Bring a camera - the views will be spectacular!\");\n  }\n  \n  // Determine seat suggestion based on route\n  const seatSuggestion = determineSeatSuggestion(fromAirport, toAirport, willSeeSunrise, willSeeSunset);\n  \n  return {\n    willSeeSunrise,\n    willSeeSunset,\n    willSeeNight,\n    willSeeGoldenHour,\n    summary,\n    recommendations,\n    seatSuggestion,\n    timeline: [], // Simplified - no detailed timeline\n    nightDuration: willSeeNight ? calculateNightHours(departureTime, arrivalTime) * 60 : 0,\n    dayDuration: flightDuration - (willSeeNight ? calculateNightHours(departureTime, arrivalTime) * 60 : 0)\n  };\n};\n\n// Helper function to calculate night hours\nconst calculateNightHours = (depTime: Date, arrTime: Date): number => {\n  const depHour = depTime.getHours();\n  const arrHour = arrTime.getHours();\n  \n  let nightHours = 0;\n  \n  // Simple night calculation (10 PM - 6 AM)\n  if (depHour >= 22 || depHour <= 6) nightHours += 1;\n  if (arrHour >= 22 || arrHour <= 6) nightHours += 1;\n  \n  return Math.max(nightHours, 0.5); // Minimum 0.5 hours if any night flying\n};\n\n// Helper function to determine seat suggestion based on proper bearing calculation\nconst determineSeatSuggestion = (\n  fromAirport: string, \n  toAirport: string, \n  willSeeSunrise: boolean, \n  willSeeSunset: boolean\n): 'left' | 'right' | 'either' => {\n  \n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  \n  if (!fromCoords || !toCoords) return 'either';\n  \n  // Calculate proper flight bearing using same logic as sun position calculation\n  const lat1Rad = fromCoords[0] * Math.PI / 180;\n  const lat2Rad = toCoords[0] * Math.PI / 180;\n  const dLon = (toCoords[1] - fromCoords[1]) * Math.PI / 180;\n  \n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  \n  let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n  flightBearing = (flightBearing + 360) % 360; // Normalize to 0-360\n  \n  console.log(`Flight analysis: ${fromAirport} → ${toAirport}`);\n  console.log(`Flight bearing: ${flightBearing.toFixed(1)}°`);\n  console.log(`Sunrise: ${willSeeSunrise}, Sunset: ${willSeeSunset}`);\n  \n  if (willSeeSunrise) {\n    // Sunrise is at 90° (East)\n    // Calculate relative position of sunrise to flight direction\n    let relativeSunPosition = 90 - flightBearing;\n    relativeSunPosition = ((relativeSunPosition + 360) % 360);\n    \n    console.log(`Sunrise relative position: ${relativeSunPosition.toFixed(1)}°`);\n    \n    // If sunrise is on RIGHT side of flight direction (270° to 90°), recommend LEFT seat to look right\n    // If sunrise is on LEFT side of flight direction (90° to 270°), recommend RIGHT seat to look left\n    if (relativeSunPosition >= 270 || relativeSunPosition <= 90) {\n      console.log(`Sunrise on RIGHT side → LEFT seat recommended`);\n      return 'left'; // Sit on left to look right at sunrise\n    } else {\n      console.log(`Sunrise on LEFT side → RIGHT seat recommended`);\n      return 'right'; // Sit on right to look left at sunrise\n    }\n  }\n  \n  if (willSeeSunset) {\n    // Sunset is at 270° (West)\n    // Calculate relative position of sunset to flight direction\n    let relativeSunPosition = 270 - flightBearing;\n    relativeSunPosition = ((relativeSunPosition + 360) % 360);\n    \n    console.log(`Sunset relative position: ${relativeSunPosition.toFixed(1)}°`);\n    \n    // If sunset is on RIGHT side of flight direction (270° to 90°), recommend LEFT seat to look right\n    // If sunset is on LEFT side of flight direction (90° to 270°), recommend RIGHT seat to look left\n    if (relativeSunPosition >= 270 || relativeSunPosition <= 90) {\n      console.log(`Sunset on RIGHT side → LEFT seat recommended`);\n      return 'left'; // Sit on left to look right at sunset\n    } else {\n      console.log(`Sunset on LEFT side → RIGHT seat recommended`);\n      return 'right'; // Sit on right to look left at sunset\n    }\n  }\n  \n  console.log(`No sunrise/sunset → EITHER side recommended`);\n  return 'either';\n};\n\n// Helper function to determine side-specific views for seat cards\nconst getSideSpecificViews = (\n  fromAirport: string,\n  toAirport: string, \n  side: 'left' | 'right',\n  enhancedAnalysis: any\n) => {\n  if (!enhancedAnalysis) return { sunrise: false, sunset: false, night: false };\n  \n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  \n  if (!fromCoords || !toCoords) {\n    return { \n      sunrise: enhancedAnalysis.willSeeSunrise, \n      sunset: enhancedAnalysis.willSeeSunset, \n      night: enhancedAnalysis.willSeeNight \n    };\n  }\n  \n  // Calculate flight bearing\n  const lat1Rad = fromCoords[0] * Math.PI / 180;\n  const lat2Rad = toCoords[0] * Math.PI / 180;\n  const dLon = (toCoords[1] - fromCoords[1]) * Math.PI / 180;\n  \n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  \n  let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n  flightBearing = (flightBearing + 360) % 360;\n  \n  // Check sunrise visibility for this side\n  let sunriseVisible = false;\n  if (enhancedAnalysis.willSeeSunrise) {\n    let relativeSunrisePosition = 90 - flightBearing;\n    relativeSunrisePosition = ((relativeSunrisePosition + 360) % 360);\n    \n    // Sunrise on RIGHT side of flight (270° to 90°) → visible from LEFT seat\n    // Sunrise on LEFT side of flight (90° to 270°) → visible from RIGHT seat\n    if (side === 'left') {\n      sunriseVisible = (relativeSunrisePosition >= 270 || relativeSunrisePosition <= 90);\n    } else {\n      sunriseVisible = (relativeSunrisePosition > 90 && relativeSunrisePosition < 270);\n    }\n  }\n  \n  // Check sunset visibility for this side\n  let sunsetVisible = false;\n  if (enhancedAnalysis.willSeeSunset) {\n    let relativeSunsetPosition = 270 - flightBearing;\n    relativeSunsetPosition = ((relativeSunsetPosition + 360) % 360);\n    \n    // Sunset on RIGHT side of flight (270° to 90°) → visible from LEFT seat\n    // Sunset on LEFT side of flight (90° to 270°) → visible from RIGHT seat\n    if (side === 'left') {\n      sunsetVisible = (relativeSunsetPosition >= 270 || relativeSunsetPosition <= 90);\n    } else {\n      sunsetVisible = (relativeSunsetPosition > 90 && relativeSunsetPosition < 270);\n    }\n  }\n  \n  return {\n    sunrise: sunriseVisible,\n    sunset: sunsetVisible,\n    night: enhancedAnalysis.willSeeNight // Night is visible from both sides\n  };\n};\n\n// Function to get the correct marker/emoji for each sun condition\nconst getSunConditionMarker = (condition: SunCondition): string => {\n  switch (condition) {\n    case 'GOLDEN_HOUR_BEFORE_SUNRISE':\n      return '🌄'; // Golden hour before sunrise - mountain sunrise\n    case 'SUNRISE':\n      return '🌅'; // Sunrise\n    case 'DAYLIGHT':\n      return '☀️'; // Bright sun\n    case 'GOLDEN_HOUR_BEFORE_SUNSET':\n      return '🌇'; // Golden hour before sunset - cityscape sunset\n    case 'SUNSET':\n      return '🌆'; // Sunset over buildings\n    case 'NIGHT':\n      return '🌙'; // Crescent moon\n    default:\n      return '☀️'; // Default to sun\n  }\n};\n\n// Function to get tooltip content based on sun condition\nconst getSunTooltipContent = (sunPos: SunPosition | null): string => {\n  if (!sunPos) return '';\n\n  // Handle cases where condition might be undefined (for backward compatibility)\n  if (!sunPos.condition) {\n    const elevation = sunPos.elevation?.toFixed(1) || '--';\n    if (sunPos.elevation && sunPos.elevation < 0) {\n      return `🌙 Night • ${Math.abs(sunPos.elevation).toFixed(1)}° below horizon`;\n    } else if (sunPos.elevation && sunPos.elevation < 10) {\n      return `🌅 Golden Hour • ${elevation}° above horizon`;\n    } else {\n      return `☀️ Sun • ${elevation}° above horizon`;\n    }\n  }\n\n  const marker = getSunConditionMarker(sunPos.condition);\n  const elevation = sunPos.elevation?.toFixed(1) || '--';\n\n  switch (sunPos.condition) {\n    case 'GOLDEN_HOUR_BEFORE_SUNRISE':\n      return `${marker} Golden Hour Before Sunrise • ${elevation}° above horizon`;\n    case 'SUNRISE':\n      return `${marker} Sunrise • ${elevation}° above horizon`;\n    case 'DAYLIGHT':\n      return `${marker} Daylight • ${elevation}° above horizon`;\n    case 'GOLDEN_HOUR_BEFORE_SUNSET':\n      return `${marker} Golden Hour Before Sunset • ${elevation}° above horizon`;\n    case 'SUNSET':\n      return `${marker} Sunset • ${elevation}° above horizon`;\n    case 'NIGHT':\n      return `${marker} Night • Moon visible`;\n    default:\n      return `${marker} Sun • ${elevation}° above horizon`;\n  }\n};\n\n// Hardcoded city pair mappings for consistent sun positioning\nconst CITY_PAIR_SUN_MAPPINGS: { [key: string]: { sunrise: 'left' | 'right', sunset: 'left' | 'right' } } = {\n  // West-bound flights (flying west)\n  'DEL-JAI': { sunrise: 'left', sunset: 'right' },   // Delhi → Jaipur\n  'DEL-BOM': { sunrise: 'left', sunset: 'right' },   // Delhi → Mumbai  \n  'BLR-BOM': { sunrise: 'left', sunset: 'right' },   // Bangalore → Mumbai\n  'MAA-BOM': { sunrise: 'left', sunset: 'right' },   // Chennai → Mumbai\n  'HYD-BOM': { sunrise: 'left', sunset: 'right' },   // Hyderabad → Mumbai\n  'CCU-DEL': { sunrise: 'left', sunset: 'right' },   // Kolkata → Delhi\n  'BLR-DEL': { sunrise: 'left', sunset: 'right' },   // Bangalore → Delhi\n  'MAA-DEL': { sunrise: 'left', sunset: 'right' },   // Chennai → Delhi\n  \n  // East-bound flights (flying east)  \n  'JAI-DEL': { sunrise: 'right', sunset: 'left' },   // Jaipur → Delhi\n  'BOM-DEL': { sunrise: 'right', sunset: 'left' },   // Mumbai → Delhi\n  'BOM-BLR': { sunrise: 'right', sunset: 'left' },   // Mumbai → Bangalore\n  'BOM-MAA': { sunrise: 'right', sunset: 'left' },   // Mumbai → Chennai\n  'BOM-HYD': { sunrise: 'right', sunset: 'left' },   // Mumbai → Hyderabad\n  'DEL-CCU': { sunrise: 'right', sunset: 'left' },   // Delhi → Kolkata\n  'DEL-BLR': { sunrise: 'right', sunset: 'left' },   // Delhi → Bangalore  \n  'DEL-MAA': { sunrise: 'right', sunset: 'left' },   // Delhi → Chennai\n  \n  // International routes\n  'DEL-JFK': { sunrise: 'right', sunset: 'left' },   // Delhi → New York (east)\n  'JFK-DEL': { sunrise: 'left', sunset: 'right' },   // New York → Delhi (west)\n  'BOM-LHR': { sunrise: 'right', sunset: 'left' },   // Mumbai → London (east)\n  'LHR-BOM': { sunrise: 'left', sunset: 'right' },   // London → Mumbai (west)\n  'DEL-NRT': { sunrise: 'right', sunset: 'left' },   // Delhi → Tokyo (east)\n  'NRT-DEL': { sunrise: 'left', sunset: 'right' },   // Tokyo → Delhi (west)\n  'BOM-SYD': { sunrise: 'right', sunset: 'left' },   // Mumbai → Sydney (east)\n  'SYD-BOM': { sunrise: 'left', sunset: 'right' },   // Sydney → Mumbai (west)\n};\n\n// Function to get hardcoded sun side for specific city pairs\nconst getHardcodedSunSide = (fromAirport: string, toAirport: string, isSunrise: boolean): 'left' | 'right' | null => {\n  const routeKey = `${fromAirport}-${toAirport}`;\n  const mapping = CITY_PAIR_SUN_MAPPINGS[routeKey];\n  \n  if (mapping) {\n    return isSunrise ? mapping.sunrise : mapping.sunset;\n  }\n  \n  return null; // No hardcoded mapping found\n};\n\n// Function to calculate smooth circular sun movement based purely on time progression\nconst calculateRealisticSunAzimuth = (timeInMinutes: number, flightLonDiff: number, fromAirport: string, toAirport: string): number => {\n  // Convert 24-hour time to a continuous circular progression (0-360 degrees)\n  // 6 AM = 90° (East), 12 PM = 180° (South), 6 PM = 270° (West), 12 AM = 0° (North)\n  \n  const hour = timeInMinutes / 60;\n  \n  // Create smooth circular motion: time directly maps to degrees\n  // 24 hours = 360 degrees, so each hour = 15 degrees\n  let sunAzimuth = (hour * 15) % 360;\n  \n  // Offset so that:\n  // 6 AM (sunrise) = 90° (East)\n  // 12 PM (noon) = 180° (South) \n  // 6 PM (sunset) = 270° (West)\n  // 12 AM (midnight) = 0° (North)\n  sunAzimuth = (sunAzimuth + 90) % 360; // Add 90° offset\n  \n  // Get flight bearing to calculate relative position\n  const fromCoords = AIRPORTS[fromAirport];\n  const toCoords = AIRPORTS[toAirport];\n  \n  if (!fromCoords || !toCoords) {\n    // Fallback: direct map coordinates\n    return ((sunAzimuth + 180) % 360);\n  }\n  \n  // Calculate aircraft heading\n  const dLon = (toCoords[1] - fromCoords[1]) * Math.PI / 180;\n  const lat1Rad = fromCoords[0] * Math.PI / 180;\n  const lat2Rad = toCoords[0] * Math.PI / 180;\n  \n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  \n  let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n  flightBearing = (flightBearing + 360) % 360;\n  \n  // Calculate sun position relative to aircraft's perspective\n  // This creates the effect where the sun appears to move around the plane\n  let relativeSunAzimuth = sunAzimuth - flightBearing + 90;\n  relativeSunAzimuth = ((relativeSunAzimuth + 360) % 360);\n  \n  // Final map coordinate conversion\n  const mapAzimuth = ((relativeSunAzimuth + 180) % 360);\n  \n  console.log(`SMOOTH SUN: Time ${hour.toFixed(1)}h → Sun ${sunAzimuth.toFixed(1)}° → Relative ${relativeSunAzimuth.toFixed(1)}° → Map ${mapAzimuth.toFixed(1)}°`);\n  \n  return mapAzimuth;\n};\n\n// Function to calculate bearing between two points\nconst calculateBearing = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const lat1Rad = lat1 * Math.PI / 180;\n  const lat2Rad = lat2 * Math.PI / 180;\n  \n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  \n  let bearing = Math.atan2(y, x) * 180 / Math.PI;\n  bearing = (bearing + 360) % 360; // Normalize to 0-360\n  \n  // No adjustment needed for custom SVG airplane - it points north by default\n  // The SVG is designed to point upward (0 degrees = north)\n  \n  return bearing;\n};\n\n// Function to create rotated airplane icon\nconst createAirplaneIcon = (rotation: number) => {\n  return L.divIcon({\n    className: 'custom-airplane-icon',\n    html: `<div style=\"\n      transform: rotate(${rotation}deg); \n      display: flex; \n      align-items: center; \n      justify-content: center; \n      width: 100%; \n      height: 100%;\n      transform-origin: center center;\n    \">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width=\"60\" height=\"60\" style=\"fill: #000000; filter: drop-shadow(0 3px 6px rgba(255,255,255,1.0));\">\n        <!-- Airplane fuselage (main body) - tapered from nose to tail -->\n        <ellipse cx=\"256\" cy=\"300\" rx=\"16\" ry=\"160\"/>\n        \n        <!-- Very thick pointed nose - clearly shows front direction -->\n        <polygon points=\"256,40 225,130 287,130\"/>\n        \n        <!-- Thick cockpit/nose section -->\n        <ellipse cx=\"256\" cy=\"150\" rx=\"25\" ry=\"40\"/>\n        \n        <!-- Forward fuselage (thick front section) -->\n        <ellipse cx=\"256\" cy=\"200\" rx=\"22\" ry=\"30\"/>\n        \n        <!-- Main wings - positioned toward front -->\n        <path d=\"M40 200 L256 160 L472 200 L472 260 L256 220 L40 260 Z\"/>\n        \n        <!-- Wing tip extensions -->\n        <rect x=\"35\" y=\"190\" width=\"20\" height=\"80\" rx=\"3\"/>\n        <rect x=\"457\" y=\"190\" width=\"20\" height=\"80\" rx=\"3\"/>\n        \n        <!-- Horizontal tail stabilizers (smaller, at back) -->\n        <path d=\"M200 420 L256 410 L312 420 L312 440 L256 435 L200 440 Z\"/>\n        \n        <!-- Vertical tail fin (at back) -->\n        <polygon points=\"256,390 245,450 267,450\"/>\n        \n        <!-- Engine details under wings -->\n        <ellipse cx=\"150\" cy=\"230\" rx=\"8\" ry=\"20\"/>\n        <ellipse cx=\"362\" cy=\"230\" rx=\"8\" ry=\"20\"/>\n        \n        <!-- Rear fuselage taper -->\n        <ellipse cx=\"256\" cy=\"450\" rx=\"8\" ry=\"20\"/>\n      </svg>\n    </div>`,\n    iconSize: [60, 60],\n    iconAnchor: [30, 30],\n  });\n};\n\n// InteractiveAirplane component\ninterface InteractiveAirplaneProps {\n  flightData: FlightData;\n  flightProgress: number;\n  onPositionChange: (position: { lat: number; lon: number; sunPosition: SunPosition | null }) => void;\n}\n\nconst InteractiveAirplane: React.FC<InteractiveAirplaneProps> = ({ \n  flightData, \n  flightProgress, \n  onPositionChange \n}) => {\n  const airplaneRef = useRef<L.Marker>(null);\n\n  const getCurrentAirplaneData = (): { position: [number, number] | null; rotation: number } => {\n    if (!flightData || flightData.path.length === 0) return { position: null, rotation: 0 };\n    \n    // Calculate exact position along the flight path\n    const totalDistance = flightData.path.length - 1;\n    const exactProgress = (flightProgress / 100) * totalDistance;\n    \n    // Get the two waypoints we're between\n    const currentIndex = Math.floor(exactProgress);\n    const nextIndex = Math.min(currentIndex + 1, flightData.path.length - 1);\n    \n    const currentWaypoint = flightData.path[currentIndex];\n    const nextWaypoint = flightData.path[nextIndex];\n    \n    // Calculate the exact position between waypoints (0-1 progress within this segment)\n    const progressInSegment = exactProgress - currentIndex;\n    \n    // Interpolate position smoothly between waypoints\n    const lat = currentWaypoint.lat + (nextWaypoint.lat - currentWaypoint.lat) * progressInSegment;\n    const lon = currentWaypoint.lon + (nextWaypoint.lon - currentWaypoint.lon) * progressInSegment;\n    \n    // Calculate rotation based on current direction of travel\n    let rotation = 0;\n    if (nextIndex > currentIndex) {\n      // Flying forward - point towards next waypoint\n      rotation = calculateBearing(currentWaypoint.lat, currentWaypoint.lon, nextWaypoint.lat, nextWaypoint.lon);\n    } else {\n      // At the end of the path - use direction from previous to current\n      const prevIndex = Math.max(currentIndex - 1, 0);\n      const prevWaypoint = flightData.path[prevIndex];\n      rotation = calculateBearing(prevWaypoint.lat, prevWaypoint.lon, currentWaypoint.lat, currentWaypoint.lon);\n    }\n    \n    return { \n      position: [lat, lon],\n      rotation: rotation\n    };\n  };\n\n  const { position: currentPosition, rotation: airplaneRotation } = useMemo(() => getCurrentAirplaneData(), [flightData, flightProgress]);\n\n  useEffect(() => {\n    if (!flightData || flightData.path.length === 0) return;\n    \n    // Calculate smooth position using the same logic as getCurrentAirplaneData\n    const totalDistance = flightData.path.length - 1;\n    const exactProgress = (flightProgress / 100) * totalDistance;\n    \n    const currentIndex = Math.floor(exactProgress);\n    const nextIndex = Math.min(currentIndex + 1, flightData.path.length - 1);\n    \n    const currentWaypoint = flightData.path[currentIndex];\n    const nextWaypoint = flightData.path[nextIndex];\n    \n    const progressInSegment = exactProgress - currentIndex;\n    \n    // Interpolate position smoothly between waypoints\n    const lat = currentWaypoint.lat + (nextWaypoint.lat - currentWaypoint.lat) * progressInSegment;\n    const lon = currentWaypoint.lon + (nextWaypoint.lon - currentWaypoint.lon) * progressInSegment;\n    \n    // Interpolate sun position based on current progress\n    let currentSunPosition: SunPosition | null = null;\n    if (flightData.sunPositions && flightData.sunPositions.length > 0) {\n      const sunProgress = exactProgress / totalDistance;\n      const sunIndex = Math.floor(sunProgress * (flightData.sunPositions.length - 1));\n      const nextSunIndex = Math.min(sunIndex + 1, flightData.sunPositions.length - 1);\n      \n      const currentSun = flightData.sunPositions[sunIndex];\n      const nextSun = flightData.sunPositions[nextSunIndex];\n      \n      const sunProgressInSegment = (sunProgress * (flightData.sunPositions.length - 1)) - sunIndex;\n      \n      currentSunPosition = {\n        lat: currentSun.lat + (nextSun.lat - currentSun.lat) * sunProgressInSegment,\n        lon: currentSun.lon + (nextSun.lon - currentSun.lon) * sunProgressInSegment,\n        time: currentSun.time,\n        azimuth: currentSun.azimuth + (nextSun.azimuth - currentSun.azimuth) * sunProgressInSegment,\n        elevation: currentSun.elevation + (nextSun.elevation - currentSun.elevation) * sunProgressInSegment\n      };\n    }\n\n    // Update position callback with smooth position\n    onPositionChange({\n      lat: lat,\n      lon: lon,\n      sunPosition: currentSunPosition\n    });\n\n    // Update map view to follow airplane with smooth animation\n    if (airplaneRef.current) {\n      const leafletElement = airplaneRef.current as any;\n      const map = leafletElement._map;\n      if (map) {\n        map.setView([lat, lon], map.getZoom(), { \n          animate: true,\n          duration: 0.1 // Very short animation for smooth following\n        });\n      }\n    }\n  }, [flightData, flightProgress, onPositionChange]);\n\n  if (!currentPosition) return null;\n\n  return (\n    <Marker\n      ref={airplaneRef}\n      position={currentPosition}\n      icon={createAirplaneIcon(airplaneRotation)}\n      draggable={false}\n      interactive={false}\n      bubblingMouseEvents={false}\n      eventHandlers={{\n        dragstart: (e) => { (e as any).preventDefault?.(); return false; },\n        drag: (e) => { (e as any).preventDefault?.(); return false; },\n        dragend: (e) => { (e as any).preventDefault?.(); return false; },\n        mousedown: (e) => { e.originalEvent?.preventDefault(); return false; },\n        mouseup: (e) => { e.originalEvent?.preventDefault(); return false; },\n        mousemove: (e) => { e.originalEvent?.preventDefault(); return false; },\n        add: () => {\n          if (airplaneRef.current) {\n            const element = airplaneRef.current.getElement();\n            if (element) {\n              element.style.pointerEvents = 'none';\n              element.style.userSelect = 'none';\n              element.style.touchAction = 'none';\n              element.draggable = false;\n            }\n          }\n        }\n      }}\n    >\n      <Popup>\n        Airplane Position<br />\n        Use the timeline slider to move me!\n      </Popup>\n    </Marker>\n  );\n};\n\n// Page enum for navigation\nenum AppPage {\n  SEARCH = 'search',\n  RESULTS = 'results',\n  EXPERIENCE = 'experience'\n}\n\n// Navigation Component\ninterface NavigationProps {\n  currentPage: AppPage;\n  onPageChange: (page: AppPage) => void;\n}\n\nconst Navigation: React.FC<NavigationProps> = ({ currentPage, onPageChange }) => {\n  return (\n    <nav style={{\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      padding: '15px 0',\n      boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n      position: 'sticky',\n      top: 0,\n      zIndex: 1000\n    }}>\n      <div style={{\n        maxWidth: '1200px',\n        margin: '0 auto',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '0 20px'\n      }}>\n        {/* Logo */}\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          gap: '10px',\n          color: 'white',\n          fontSize: '24px',\n          fontWeight: 'bold'\n        }}>\n          <span>✈️</span>\n          <span>FlightSeat</span>\n        </div>\n\n        {/* Navigation Items */}\n        <div style={{\n          display: 'flex',\n          gap: '20px'\n        }}>\n          <button\n            onClick={() => onPageChange(AppPage.SEARCH)}\n            style={{\n              background: currentPage === AppPage.SEARCH ? 'rgba(255,255,255,0.3)' : 'transparent',\n              border: 'none',\n              color: 'white',\n              padding: '12px 24px',\n              borderRadius: '25px',\n              fontSize: '16px',\n              fontWeight: '500',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            }}\n            onMouseEnter={(e) => {\n              if (currentPage !== AppPage.SEARCH) {\n                e.currentTarget.style.background = 'rgba(255,255,255,0.2)';\n              }\n            }}\n            onMouseLeave={(e) => {\n              if (currentPage !== AppPage.SEARCH) {\n                e.currentTarget.style.background = 'transparent';\n              }\n            }}\n          >\n            <span>🏠</span>\n            <span>Home</span>\n          </button>\n\n          <button\n            onClick={() => onPageChange(AppPage.EXPERIENCE)}\n            style={{\n              background: currentPage === AppPage.EXPERIENCE ? 'rgba(255,255,255,0.3)' : 'transparent',\n              border: 'none',\n              color: 'white',\n              padding: '12px 24px',\n              borderRadius: '25px',\n              fontSize: '16px',\n              fontWeight: '500',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            }}\n            onMouseEnter={(e) => {\n              if (currentPage !== AppPage.EXPERIENCE) {\n                e.currentTarget.style.background = 'rgba(255,255,255,0.2)';\n              }\n            }}\n            onMouseLeave={(e) => {\n              if (currentPage !== AppPage.EXPERIENCE) {\n                e.currentTarget.style.background = 'transparent';\n              }\n            }}\n          >\n            <span>🪑</span>\n            <span>Experience Inside Plane</span>\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n// ExperiencePage Component\ninterface ExperiencePageProps {\n  onBack: () => void;\n}\n\nconst ExperiencePage: React.FC<ExperiencePageProps> = ({ onBack }) => {\n  const [selectedSeat, setSelectedSeat] = useState<string>('');\n\n  return (\n    <div style={{ height: '100vh', overflow: 'hidden' }}>\n      <AirplaneExperience\n        selectedSeat={selectedSeat}\n        onSeatChange={setSelectedSeat}\n      />\n    </div>\n  );\n};\n\n// SearchPage Component\ninterface SearchPageProps {\n  fromAirport: string;\n  setFromAirport: (value: string) => void;\n  toAirport: string;\n  setToAirport: (value: string) => void;\n  departureTime: string;\n  setDepartureTime: (value: string) => void;\n  flightDuration: number | '';\n  setFlightDuration: (value: number | '') => void;\n\n  loading: boolean;\n  error: string | null;\n  onSubmit: (e: React.FormEvent) => void;\n  formatTimeDisplay: (date: Date) => string;\n  getFlightEndTime: () => Date;\n}\n\nconst SearchPage: React.FC<SearchPageProps> = ({\n  fromAirport, setFromAirport, toAirport, setToAirport, departureTime, setDepartureTime,\n  flightDuration, setFlightDuration, loading, error, onSubmit,\n  formatTimeDisplay, getFlightEndTime\n}) => {\n  return (\n    <div className=\"search-page fade-in\">\n      <header className=\"app-header\">\n        <h1>✈️ SunSide - Perfect Window Seat Finder</h1>\n        <p>Find the best window seat for sunrise and sunset views during your flight</p>\n      </header>\n\n      <main className=\"search-main\">\n        <div className=\"search-container\">\n          <div className=\"search-form card-elevated slide-up\">\n            <div className=\"form-header\">\n              <h2>🎯 Plan Your Journey</h2>\n              <p>Enter your flight details to get personalized seat recommendations</p>\n            </div>\n            \n            <div className=\"form-body\">\n              <form onSubmit={onSubmit}>\n                {/* Left Column */}\n                <div className=\"form-left-column\">\n                  <div className=\"form-section\">\n                    <h3 className=\"section-title\">\n                      <span className=\"section-icon\">🛫</span>\n                      Flight Details\n                    </h3>\n                    \n                    <div className=\"form-grid\">\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"fromAirport\">From Airport</label>\n                        <select\n                          className=\"input-field\"\n                          id=\"fromAirport\"\n                          value={fromAirport}\n                          onChange={(e) => setFromAirport(e.target.value)}\n                          required\n                        >\n                          <option value=\"\">Select departure</option>\n                          <optgroup label=\"🇮🇳 Indian Cities\">\n                            <option value=\"DEL\">🏛️ Delhi (DEL)</option>\n                            <option value=\"JAI\">🏰 Jaipur (JAI)</option>\n                            <option value=\"BLR\">🌆 Bangalore (BLR)</option>\n                            <option value=\"BOM\">🏙️ Mumbai (BOM)</option>\n                            <option value=\"BHO\">🌸 Bhopal (BHO)</option>\n                            <option value=\"LKO\">🕌 Lucknow (LKO)</option>\n                          </optgroup>\n                          <optgroup label=\"🌍 International Cities\">\n                            <option value=\"JFK\">🗽 New York (JFK)</option>\n                            <option value=\"LHR\">🇬🇧 London (LHR)</option>\n                            <option value=\"NRT\">🗾 Tokyo (NRT)</option>\n                            <option value=\"LAX\">🌴 Los Angeles (LAX)</option>\n                            <option value=\"DXB\">🏜️ Dubai (DXB)</option>\n                            <option value=\"SIN\">🌺 Singapore (SIN)</option>\n                            <option value=\"SYD\">🦘 Sydney (SYD)</option>\n                            <option value=\"CDG\">🗼 Paris (CDG)</option>\n                            <option value=\"FRA\">🇩🇪 Frankfurt (FRA)</option>\n                            <option value=\"HKG\">🏙️ Hong Kong (HKG)</option>\n                            <option value=\"ICN\">🇰🇷 Seoul (ICN)</option>\n                            <option value=\"BKK\">🇹🇭 Bangkok (BKK)</option>\n                            <option value=\"DOH\">🏺 Doha (DOH)</option>\n                            <option value=\"IST\">🕌 Istanbul (IST)</option>\n                            <option value=\"MAD\">🇪🇸 Madrid (MAD)</option>\n                          </optgroup>\n                        </select>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"toAirport\">To Airport</label>\n                        <select\n                          className=\"input-field\"\n                          id=\"toAirport\"\n                          value={toAirport}\n                          onChange={(e) => setToAirport(e.target.value)}\n                          required\n                        >\n                          <option value=\"\">Select destination</option>\n                          <optgroup label=\"🇮🇳 Indian Cities\">\n                            <option value=\"DEL\">🏛️ Delhi (DEL)</option>\n                            <option value=\"JAI\">🏰 Jaipur (JAI)</option>\n                            <option value=\"BLR\">🌆 Bangalore (BLR)</option>\n                            <option value=\"BOM\">🏙️ Mumbai (BOM)</option>\n                            <option value=\"BHO\">🌸 Bhopal (BHO)</option>\n                            <option value=\"LKO\">🕌 Lucknow (LKO)</option>\n                          </optgroup>\n                          <optgroup label=\"🌍 International Cities\">\n                            <option value=\"JFK\">🗽 New York (JFK)</option>\n                            <option value=\"LHR\">🇬🇧 London (LHR)</option>\n                            <option value=\"NRT\">🗾 Tokyo (NRT)</option>\n                            <option value=\"LAX\">🌴 Los Angeles (LAX)</option>\n                            <option value=\"DXB\">🏜️ Dubai (DXB)</option>\n                            <option value=\"SIN\">🌺 Singapore (SIN)</option>\n                            <option value=\"SYD\">🦘 Sydney (SYD)</option>\n                            <option value=\"CDG\">🗼 Paris (CDG)</option>\n                            <option value=\"FRA\">🇩🇪 Frankfurt (FRA)</option>\n                            <option value=\"HKG\">🏙️ Hong Kong (HKG)</option>\n                            <option value=\"ICN\">🇰🇷 Seoul (ICN)</option>\n                            <option value=\"BKK\">🇹🇭 Bangkok (BKK)</option>\n                            <option value=\"DOH\">🏺 Doha (DOH)</option>\n                            <option value=\"IST\">🕌 Istanbul (IST)</option>\n                            <option value=\"MAD\">🇪🇸 Madrid (MAD)</option>\n                          </optgroup>\n                        </select>\n                      </div>\n                    </div>\n\n                    <div className=\"form-grid\">\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"departureTime\">Departure Date & Time</label>\n                        <input\n                          className=\"input-field\"\n                          type=\"datetime-local\"\n                          id=\"departureTime\"\n                          value={departureTime}\n                          onChange={(e) => setDepartureTime(e.target.value)}\n                          required\n                        />\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"flightDuration\">Flight Duration (minutes)</label>\n                        <input\n                          className=\"input-field\"\n                          type=\"number\"\n                          id=\"flightDuration\"\n                          min=\"30\"\n                          max=\"1440\"\n                          step=\"1\"\n                          value={flightDuration}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            if (value === '') {\n                              setFlightDuration('');\n                            } else {\n                              const intValue = parseInt(value, 10);\n                              if (!isNaN(intValue)) {\n                                setFlightDuration(intValue);\n                              }\n                            }\n                          }}\n                          placeholder=\"e.g., 120 (2 hours)\"\n                          required\n                        />\n                        {departureTime && flightDuration && (\n                          <small className=\"duration-help\" style={{ marginTop: '8px', display: 'block', color: 'var(--text-muted)', fontSize: '0.875rem' }}>\n                            Flight time: {formatTimeDisplay(new Date(departureTime))} → {formatTimeDisplay(getFlightEndTime())} \n                            ({Math.floor(Number(flightDuration) / 60)}h {Number(flightDuration) % 60}m)\n                          </small>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Right Column */}\n                <div className=\"form-right-column\">\n\n\n\n\n                  {/* Flight Tips Section - Always visible to fill space */}\n                  <div className=\"form-section\">\n                    <div className=\"flight-tips-card\">\n                      <h4>\n                        <span className=\"section-icon\">💡</span>\n                        Flight Seat Tips\n                      </h4>\n                      <div className=\"tips-content\">\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">🌅</span>\n                          <div className=\"tip-text\">\n                            <strong>Best Sunrise Views:</strong> East-facing windows during morning flights\n                          </div>\n                        </div>\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">🌇</span>\n                          <div className=\"tip-text\">\n                            <strong>Best Sunset Views:</strong> West-facing windows during evening flights\n                          </div>\n                        </div>\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">🗺️</span>\n                          <div className=\"tip-text\">\n                            <strong>Flight Direction:</strong> Our algorithm considers your exact route for precise recommendations\n                          </div>\n                        </div>\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">⏰</span>\n                          <div className=\"tip-text\">\n                            <strong>Timing Matters:</strong> Sun position changes throughout your flight duration\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Submit Section - Full Width */}\n                <div className=\"form-submit-section\">\n                  {error && (\n                    <div className=\"error\" style={{ marginBottom: 'var(--space-4)' }}>\n                      <span className=\"error-icon\">⚠️</span>\n                      {error}\n                    </div>\n                  )}\n\n                  <button \n                    type=\"submit\" \n                    className=\"btn btn-primary btn-lg\" \n                    disabled={loading}\n                    style={{ width: '100%' }}\n                  >\n                    {loading ? (\n                      <>\n                        <div className=\"loading-spinner\" style={{ width: '20px', height: '20px', border: '2px solid rgba(255,255,255,0.3)', borderTop: '2px solid white' }}></div>\n                        Finding your perfect seat...\n                      </>\n                    ) : (\n                      <>\n                        🔍 Find My Perfect Seat\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\n// ResultsPage Component\ninterface ResultsPageProps {\n  flightData: FlightData | null;\n  fromAirport: string;\n  toAirport: string;\n  currentPosition: { lat: number; lon: number } | null;\n  currentSunPosition: SunPosition | null;\n  flightProgress: number;\n  handleProgressChange: (newProgress: number) => void;\n  handlePositionChange: (position: { lat: number; lon: number; sunPosition: SunPosition | null }) => void;\n  isDragging: boolean;\n  handleMouseDown: (e: React.MouseEvent) => void;\n  handleClick: (e: React.MouseEvent) => void;\n  onBack: () => void;\n  departureTime: string;\n  flightDuration: number | '';\n}\n\n\n\n// Calculate actual astronomical sunrise and sunset times during flight\nconst getOptimalPeriodsInFlight = (\n  departureTime: string, \n  flightDuration: number | '',\n  flightData: FlightData | null\n): { \n  sunrise: boolean; \n  sunset: boolean; \n  details: string[];\n  sunriseTime?: Date;\n  sunsetTime?: Date;\n  sunriseProgress?: number;\n  sunsetProgress?: number;\n} => {\n  if (!departureTime || !flightDuration || !flightData?.path?.length) {\n    return { sunrise: false, sunset: false, details: [] };\n  }\n  \n  const startTime = new Date(departureTime);\n  const endTime = new Date(startTime.getTime() + (typeof flightDuration === 'number' ? flightDuration * 60 * 60 * 1000 : 0));\n  const details: string[] = [];\n  let sunriseInFlight = false;\n  let sunsetInFlight = false;\n  let sunriseTime: Date | undefined;\n  let sunsetTime: Date | undefined;\n  let sunriseProgress: number | undefined;\n  let sunsetProgress: number | undefined;\n\n  // Check each waypoint for sunrise/sunset during flight\n  console.log('Checking sun positions for sunrise/sunset...');\n  console.log('Flight start time:', startTime);\n  console.log('Flight end time:', endTime);\n  console.log('Sun positions count:', flightData.sunPositions?.length || 0);\n  \n  if (flightData.sunPositions) {\n    flightData.sunPositions.forEach((sunPos, index) => {\n      const currentTime = new Date(sunPos.time);\n      const prevSunPos = index > 0 ? flightData.sunPositions[index - 1] : null;\n      \n      console.log(`Waypoint ${index}: ${currentTime.toISOString()}, elevation: ${sunPos.elevation}°`);\n      \n      if (currentTime >= startTime && currentTime <= endTime) {\n        // For the first waypoint, consider if sun is already rising (elevation > -10°)\n        if (index === 0 && sunPos.elevation > -10 && sunPos.elevation < 10 && !sunriseInFlight) {\n          sunriseInFlight = true;\n          sunriseTime = currentTime;\n          sunriseProgress = (index / (flightData.path.length - 1)) * 100;\n          // Removed: details.push(`🌅 Golden hour/Sunrise conditions at takeoff ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n          console.log('Sunrise detected at takeoff');\n        }\n        \n        // Check for horizon crossings between waypoints\n        if (prevSunPos) {\n          // Check for sunrise (sun elevation crosses from below to above horizon)\n          if (prevSunPos.elevation <= 0 && sunPos.elevation > 0 && !sunriseInFlight) {\n            sunriseInFlight = true;\n            sunriseTime = currentTime;\n            sunriseProgress = (index / (flightData.path.length - 1)) * 100;\n            details.push(`🌅 Sunrise at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} during flight`);\n            console.log('Sunrise detected - horizon crossing');\n          }\n          \n          // Check for sunset (sun elevation crosses from above to below horizon)\n          if (prevSunPos.elevation > 0 && sunPos.elevation <= 0 && !sunsetInFlight) {\n            sunsetInFlight = true;\n            sunsetTime = currentTime;\n            sunsetProgress = (index / (flightData.path.length - 1)) * 100;\n            // Removed: details.push(`🌇 Sunset at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} during flight`);\n            console.log('Sunset detected - horizon crossing');\n          }\n        }\n      }\n    });\n  }\n\n  // If no exact crossing found, check for golden hour periods and sun conditions\n  if (!sunriseInFlight || !sunsetInFlight) {\n    flightData.sunPositions.forEach((sunPos, index) => {\n      const currentTime = new Date(sunPos.time);\n      const prevSunPos = index > 0 ? flightData.sunPositions[index - 1] : null;\n      \n      if (currentTime >= startTime && currentTime <= endTime) {\n        // Check for morning conditions (sunrise-like)\n        if (!sunriseInFlight) {\n          // Early morning with low sun (good for sunrise viewing)\n          if (sunPos.elevation > -5 && sunPos.elevation < 15) {\n            const hour = currentTime.getHours();\n            if (hour >= 5 && hour <= 9) { // Morning hours\n              sunriseInFlight = true;\n              sunriseTime = currentTime;\n              sunriseProgress = (index / (flightData.path.length - 1)) * 100;\n              details.push(`🌅 Morning golden hour at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n            }\n          }\n          \n          // Golden hour transition (sun crosses 10° elevation upward)\n          if (prevSunPos && prevSunPos.elevation <= 10 && sunPos.elevation > 10) {\n            sunriseInFlight = true;\n            sunriseTime = currentTime;\n            sunriseProgress = (index / (flightData.path.length - 1)) * 100;\n            details.push(`🌅 Golden hour begins at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n          }\n        }\n        \n        // Check for evening conditions (sunset-like)\n        if (!sunsetInFlight) {\n          // Evening with low sun (good for sunset viewing)\n          if (sunPos.elevation > -5 && sunPos.elevation < 15) {\n            const hour = currentTime.getHours();\n            if (hour >= 17 && hour <= 21) { // Evening hours\n              sunsetInFlight = true;\n              sunsetTime = currentTime;\n              sunsetProgress = (index / (flightData.path.length - 1)) * 100;\n              details.push(`🌇 Evening golden hour at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n            }\n          }\n          \n          // Golden hour transition (sun crosses 10° elevation downward)\n          if (prevSunPos && prevSunPos.elevation > 10 && sunPos.elevation <= 10) {\n            sunsetInFlight = true;\n            sunsetTime = currentTime;\n            sunsetProgress = (index / (flightData.path.length - 1)) * 100;\n            details.push(`🌇 Golden hour begins at ${currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`);\n          }\n        }\n      }\n    });\n  }\n\n  return { \n    sunrise: sunriseInFlight, \n    sunset: sunsetInFlight, \n    details,\n    sunriseTime,\n    sunsetTime,\n    sunriseProgress,\n    sunsetProgress\n  };\n};\n\nconst ResultsPage: React.FC<ResultsPageProps> = ({\n  flightData, fromAirport, toAirport, currentPosition, currentSunPosition,\n  flightProgress, handleProgressChange, handlePositionChange, isDragging,\n  handleMouseDown, handleClick, onBack, departureTime, flightDuration\n}) => {\n  // Resizable layout state\n  const [mapWidth, setMapWidth] = useState(60); // 60% default width for map\n  const [isDraggingResize, setIsDraggingResize] = useState(false);\n\n  // Resize handler for the divider\n  const handleResizeMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setIsDraggingResize(true);\n    \n    const handleMouseMove = (e: MouseEvent) => {\n      const containerWidth = window.innerWidth;\n      const newMapWidth = (e.clientX / containerWidth) * 100;\n      \n      // Constrain between 30% and 80%\n      const constrainedWidth = Math.max(30, Math.min(80, newMapWidth));\n      setMapWidth(constrainedWidth);\n    };\n    \n    const handleMouseUp = () => {\n      setIsDraggingResize(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  // Smart tooltip positioning to prevent off-screen tooltips\n  React.useEffect(() => {\n    const adjustTooltipPositions = () => {\n      const tooltipContainers = document.querySelectorAll('.sun-tooltip-container');\n      \n      tooltipContainers.forEach((container) => {\n        const rect = container.getBoundingClientRect();\n        const viewportWidth = window.innerWidth;\n        \n        // Remove existing positioning classes\n        container.classList.remove('tooltip-left', 'tooltip-right');\n        \n        // If tooltip would go off the right edge\n        if (rect.right > viewportWidth - 150) {\n          container.classList.add('tooltip-right');\n        }\n        // If tooltip would go off the left edge\n        else if (rect.left < 150) {\n          container.classList.add('tooltip-left');\n        }\n      });\n    };\n\n    // Adjust on mount and window resize\n    adjustTooltipPositions();\n    window.addEventListener('resize', adjustTooltipPositions);\n    \n    return () => window.removeEventListener('resize', adjustTooltipPositions);\n  }, [currentSunPosition, flightProgress]);\n  if (!flightData) {\n    return (\n      <div className=\"results-page\">\n        <div className=\"error\">No flight data available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"results-page fade-in\">\n      <header className=\"results-header\">\n        <button onClick={onBack} className=\"back-btn\">\n          ← Back to Search\n        </button>\n        <div className=\"results-header-content\">\n          <h1>✈️ Flight Results</h1>\n        </div>\n      </header>\n\n      <main className=\"results-main\">\n        <div className=\"results-container\">\n          <div className=\"map-section\" style={{ width: `${mapWidth}%` }}>\n            <MapContainer\n              center={[28.6139, 77.2090]}\n              zoom={6}\n              style={{ height: '100vh', width: '100%' }}\n            >\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              />\n\n              {flightData.path && flightData.path.length > 1 && (\n                <Polyline\n                  positions={flightData.path.map(wp => [wp.lat, wp.lon])}\n                  color=\"blue\"\n                  weight={3}\n                />\n              )}\n\n              {flightData.path && flightData.path.length > 0 && (\n                <Marker\n                  position={[flightData.path[0].lat, flightData.path[0].lon]}\n                  icon={L.divIcon({\n                    className: 'custom-marker from-marker',\n                    html: '<div style=\"background: green; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',\n                    iconSize: [20, 20],\n                    iconAnchor: [10, 10],\n                  })}\n                >\n                  <Popup>Departure: {fromAirport}</Popup>\n                </Marker>\n              )}\n\n              {flightData.path && flightData.path.length > 0 && (\n                <Marker\n                  position={[flightData.path[flightData.path.length - 1].lat, flightData.path[flightData.path.length - 1].lon]}\n                  icon={L.divIcon({\n                    className: 'custom-marker to-marker',\n                    html: '<div style=\"background: red; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',\n                    iconSize: [20, 20],\n                    iconAnchor: [10, 10],\n                  })}\n                >\n                  <Popup>Arrival: {toAirport}</Popup>\n                </Marker>\n              )}\n\n              <InteractiveAirplane \n                flightData={flightData}\n                flightProgress={flightProgress}\n                onPositionChange={handlePositionChange}\n              />\n\n              {/* Sun Marker on Map */}\n              {currentPosition && currentSunPosition && flightData && (() => {\n                // Calculate pure flight bearing for reference\n                const startPoint = flightData.path[0];\n                const endPoint = flightData.path[flightData.path.length - 1];\n                \n                const dLon = (endPoint.lon - startPoint.lon) * Math.PI / 180;\n                const lat1Rad = startPoint.lat * Math.PI / 180;\n                const lat2Rad = endPoint.lat * Math.PI / 180;\n                \n                const y = Math.sin(dLon) * Math.cos(lat2Rad);\n                const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n                \n                let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n                flightBearing = (flightBearing + 360) % 360; // Normalize to 0-360\n                \n                // Use REAL sun azimuth from astronomical calculations\n                // SunCalc: South=0°, West=+90°, North=180°/-180°, East=-90°\n                // Map: North=0°, East=90°, South=180°, West=270°\n                // Convert: Add 180° to shift from South=0° to North=0°\n                let sunBearing = (currentSunPosition.azimuth + 180) % 360;\n                \n                // Position sun using real azimuth and elevation\n                // Distance from airplane based on elevation (higher sun = farther for better visibility)\n                const elevationDegrees = currentSunPosition.elevation;\n                const sunDistance = Math.max(0.3, 0.8 + (90 - Math.abs(elevationDegrees)) / 180); // 0.3 to 1.3 degrees\n                \n                // Convert bearing to map coordinates\n                const sunLat = currentPosition.lat + Math.cos(sunBearing * Math.PI / 180) * sunDistance;\n                const sunLon = currentPosition.lon + Math.sin(sunBearing * Math.PI / 180) * sunDistance;\n                \n                return (\n                  <>\n                    <Marker\n                      position={[sunLat, sunLon]}\n                      icon={L.divIcon({\n                        className: 'sun-marker',\n                        html: `\n                          <div class=\"map-sun-marker\" style=\"\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            width: 40px;\n                            height: 40px;\n                            background: ${elevationDegrees < 0 \n                              ? 'radial-gradient(circle, #4a5568 30%, #2d3748 60%, #1a202c 100%)' \n                              : elevationDegrees < 10 \n                                ? 'radial-gradient(circle, #ff8c00 30%, #ff6b35 60%, #e53e3e 100%)' \n                                : 'radial-gradient(circle, #ffd700 30%, #ffed4e 60%, #ff8c00 100%)'\n                            };\n                            border-radius: 50%;\n                            border: 3px solid #fff;\n                            box-shadow: 0 0 20px rgba(255, 215, 0, 0.6), 0 0 40px rgba(255, 215, 0, 0.3);\n                            position: relative;\n                            font-size: 20px;\n                            text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);\n                            cursor: pointer;\n                            transition: all 0.3s ease;\n                          \" title=\"${elevationDegrees < 0 \n                            ? `🌙 Nighttime • ${Math.abs(elevationDegrees).toFixed(1)}° below horizon` \n                            : elevationDegrees < 10 \n                              ? `🌅 Golden Hour • ${elevationDegrees.toFixed(1)}° above horizon` \n                              : `☀️ Daylight • ${elevationDegrees.toFixed(1)}° above horizon`\n                          }\">\n                            ${elevationDegrees < 0 ? '🌙' : elevationDegrees < 10 ? '🌅' : '☀️'}\n                            <div style=\"\n                              position: absolute;\n                              width: 60px;\n                              height: 60px;\n                              border: 2px solid #ffd700;\n                              border-radius: 50%;\n                              border-style: dashed;\n                              animation: rotate 8s linear infinite;\n                              opacity: 0.4;\n                            \"></div>\n                            <div class=\"map-sun-tooltip\" style=\"\n                              position: absolute;\n                              bottom: 120%;\n                              left: 50%;\n                              transform: translateX(-50%);\n                              background: rgba(0, 0, 0, 0.9);\n                              color: white;\n                              padding: 8px 12px;\n                              border-radius: 6px;\n                              font-size: 12px;\n                              white-space: nowrap;\n                              z-index: 1000;\n                              opacity: 0;\n                              visibility: hidden;\n                              transition: opacity 0.3s ease, visibility 0.3s ease;\n                              pointer-events: none;\n                              box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n                            \">\n                              ${elevationDegrees < 0 \n                                ? `🌙 Nighttime • ${Math.abs(elevationDegrees).toFixed(1)}° below horizon` \n                                : elevationDegrees < 10 \n                                  ? `🌅 Golden Hour • ${elevationDegrees.toFixed(1)}° above horizon` \n                                  : `☀️ Daylight • ${elevationDegrees.toFixed(1)}° above horizon`\n                              }\n                            </div>\n                          </div>\n                          <style>\n                            @keyframes rotate {\n                              from { transform: rotate(0deg); }\n                              to { transform: rotate(360deg); }\n                            }\n                            .map-sun-marker:hover {\n                              transform: scale(1.1) !important;\n                            }\n                            .map-sun-marker:hover .map-sun-tooltip {\n                              opacity: 1 !important;\n                              visibility: visible !important;\n                            }\n                          </style>\n                        `,\n                        iconSize: [40, 40],\n                        iconAnchor: [20, 20],\n                      })}\n                    >\n                      <Popup>\n                        <div>\n                          <strong>☀️ Real Sun Position</strong><br/>\n                          <strong>Recommended Seat:</strong> {flightData.recommendation === 'left' ? 'Left' : 'Right'} Side<br/>\n                          <strong>Sun Azimuth:</strong> {currentSunPosition.azimuth?.toFixed(1)}° (from South)<br/>\n                          <strong>Sun Elevation:</strong> {currentSunPosition.elevation?.toFixed(1)}° (above horizon)<br/>\n                          <strong>Map Bearing:</strong> {sunBearing.toFixed(1)}° (from North)<br/>\n                          <strong>Flight Direction:</strong> {flightBearing.toFixed(1)}°<br/>\n                          {elevationDegrees < 0 && <em style={{color: '#ff6b6b'}}>Sun below horizon</em>}\n                          {elevationDegrees >= 0 && elevationDegrees < 10 && <em style={{color: '#ffa500'}}>Sun near horizon</em>}\n                          {elevationDegrees >= 10 && <em style={{color: '#4dabf7'}}>Sun well above horizon</em>}\n                        </div>\n                      </Popup>\n                    </Marker>\n\n                    {/* Sun Direction Line */}\n                    <Polyline\n                      positions={[\n                        [currentPosition.lat, currentPosition.lon],\n                        [sunLat, sunLon]\n                      ]}\n                      color=\"#ffd700\"\n                      weight={3}\n                      opacity={0.8}\n                      dashArray=\"10, 5\"\n                    />\n                  </>\n                );\n              })()}\n\n              {/* Mountain Markers */}\n              {flightData.path && (() => {\n                const visibleMountains = getMountainsVisibleFromPath(flightData.path, 200);\n                \n                return visibleMountains.map(mountainKey => {\n                  const mountain = MOUNTAINS[mountainKey];\n                  \n                  return (\n                    <Marker\n                      key={mountainKey}\n                      position={[mountain.lat, mountain.lon]}\n                      icon={L.divIcon({\n                        className: 'mountain-marker',\n                        html: `\n                          <div class=\"map-mountain-marker\" style=\"\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            width: 35px;\n                            height: 35px;\n                            background: linear-gradient(135deg, #8B4513 0%, #D2691E  30%, #F4A460 60%, #FFFFFF 85%);\n                            border-radius: 8px 8px 20px 20px;\n                            border: 2px solid #654321;\n                            box-shadow: 0 4px 12px rgba(139, 69, 19, 0.5), 0 2px 6px rgba(0, 0, 0, 0.3);\n                            position: relative;\n                            font-size: 16px;\n                            cursor: pointer;\n                            transition: all 0.3s ease;\n                            transform-origin: bottom center;\n                          \" title=\"${mountain.name} • ${mountain.elevation}m • ${mountain.region}\">\n                            🏔️\n                            <div style=\"\n                              position: absolute;\n                              width: 45px;\n                              height: 45px;\n                              border: 2px solid #8B4513;\n                              border-radius: 8px;\n                              border-style: dashed;\n                              animation: pulse 3s ease-in-out infinite;\n                              opacity: 0.3;\n                            \"></div>\n                            <div class=\"map-mountain-tooltip\" style=\"\n                              position: absolute;\n                              bottom: 120%;\n                              left: 50%;\n                              transform: translateX(-50%);\n                              background: rgba(139, 69, 19, 0.95);\n                              color: white;\n                              padding: 10px 14px;\n                              border-radius: 8px;\n                              font-size: 12px;\n                              white-space: nowrap;\n                              z-index: 1000;\n                              opacity: 0;\n                              visibility: hidden;\n                              transition: opacity 0.3s ease, visibility 0.3s ease;\n                              pointer-events: none;\n                              box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);\n                              border: 1px solid #F4A460;\n                            \">\n                              <div style=\"font-weight: bold; margin-bottom: 4px;\">🏔️ ${mountain.name}</div>\n                              <div style=\"font-size: 11px; opacity: 0.9;\">\n                                📏 ${mountain.elevation.toLocaleString()}m elevation<br/>\n                                🗺️ ${mountain.region}\n                              </div>\n                              <div style=\"\n                                position: absolute;\n                                top: 100%;\n                                left: 50%;\n                                transform: translateX(-50%);\n                                width: 0;\n                                height: 0;\n                                border-left: 6px solid transparent;\n                                border-right: 6px solid transparent;\n                                border-top: 6px solid rgba(139, 69, 19, 0.95);\n                              \"></div>\n                            </div>\n                          </div>\n                          <style>\n                            @keyframes pulse {\n                              0%, 100% { transform: scale(1); opacity: 0.3; }\n                              50% { transform: scale(1.1); opacity: 0.6; }\n                            }\n                            .map-mountain-marker:hover {\n                              transform: scale(1.15) !important;\n                              box-shadow: 0 6px 20px rgba(139, 69, 19, 0.7), 0 3px 10px rgba(0, 0, 0, 0.4) !important;\n                            }\n                            .map-mountain-marker:hover .map-mountain-tooltip {\n                              opacity: 1 !important;\n                              visibility: visible !important;\n                            }\n                          </style>\n                        `,\n                        iconSize: [35, 35],\n                        iconAnchor: [17, 35],\n                      })}\n                    >\n                      <Popup>\n                        <div style={{ minWidth: '200px' }}>\n                          <strong style={{ display: 'flex', alignItems: 'center', gap: '8px', marginBottom: '8px' }}>\n                            🏔️ {mountain.name}\n                          </strong>\n                          <div style={{ fontSize: '13px', lineHeight: '1.5' }}>\n                            <div><strong>Elevation:</strong> {mountain.elevation.toLocaleString()}m</div>\n                            <div><strong>Region:</strong> {mountain.region}</div>\n                            <div style={{ marginTop: '8px', padding: '8px', background: '#f0f8ff', borderRadius: '4px', fontSize: '12px' }}>\n                              <strong>🔭 Mountain View Available</strong><br/>\n                              This peak is visible from your flight path!\n                            </div>\n                          </div>\n                        </div>\n                      </Popup>\n                    </Marker>\n                  );\n                });\n              })()}\n            </MapContainer>\n          </div>\n\n          {/* Resizable Divider */}\n          <div \n            className={`resize-divider ${isDraggingResize ? 'dragging' : ''}`}\n            onMouseDown={handleResizeMouseDown}\n          >\n            <div className=\"resize-handle\">\n              <div className=\"resize-dots\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flight-details\" style={{ width: `${100 - mapWidth}%` }}>\n            {/* Professional Header */}\n            <div className=\"flight-header\">\n              <h2>\n                <span>✈️</span>\n                Flight Results\n              </h2>\n              <div className=\"flight-route\">\n                {fromAirport}\n                <span className=\"route-arrow\">→</span>\n                {toAirport}\n              </div>\n            </div>\n\n            {/* Scroll Indicator */}\n            <div className=\"scroll-indicator\">\n              <div className=\"scroll-hint\">\n                <span className=\"scroll-icon\">⬇️</span>\n                <span className=\"scroll-text\">Scroll for Flight Timeline</span>\n              </div>\n            </div>\n\n            {/* Enhanced Sun Analysis Results */}\n            {flightData.enhancedAnalysis && (\n              <div className=\"content-section\">\n                <div className=\"enhanced-analysis-card\">\n                  <h3>\n                    <span className=\"section-icon\">🔮</span>\n                    Flight Sun Analysis\n                  </h3>\n                  \n                  {/* Summary Messages */}\n                  <div className=\"analysis-summary\">\n                    {flightData.enhancedAnalysis.summary.map((message, index) => (\n                      <div key={index} className=\"summary-message\">\n                        {message}\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Quick Stats */}\n                  <div className=\"analysis-stats\">\n                    <div className=\"stat-item\">\n                      <span className=\"stat-icon\">🌅</span>\n                      <span className=\"stat-label\">Sunrise</span>\n                      <span className={`stat-value ${flightData.enhancedAnalysis.willSeeSunrise ? 'positive' : 'negative'}`}>\n                        {flightData.enhancedAnalysis.willSeeSunrise ? 'YES' : 'NO'}\n                      </span>\n                    </div>\n                    <div className=\"stat-item\">\n                      <span className=\"stat-icon\">🌇</span>\n                      <span className=\"stat-label\">Sunset</span>\n                      <span className={`stat-value ${flightData.enhancedAnalysis.willSeeSunset ? 'positive' : 'negative'}`}>\n                        {flightData.enhancedAnalysis.willSeeSunset ? 'YES' : 'NO'}\n                      </span>\n                    </div>\n                    <div className=\"stat-item\">\n                      <span className=\"stat-icon\">🌙</span>\n                      <span className=\"stat-label\">Night</span>\n                      <span className={`stat-value ${flightData.enhancedAnalysis.willSeeNight ? 'positive' : 'negative'}`}>\n                        {flightData.enhancedAnalysis.willSeeNight ? 'YES' : 'NO'}\n                      </span>\n                    </div>\n                    <div className=\"stat-item\">\n                      <span className=\"stat-icon\">✨</span>\n                      <span className=\"stat-label\">Golden Hour</span>\n                      <span className={`stat-value ${flightData.enhancedAnalysis.willSeeGoldenHour ? 'positive' : 'negative'}`}>\n                        {flightData.enhancedAnalysis.willSeeGoldenHour ? 'YES' : 'NO'}\n                      </span>\n                    </div>\n                  </div>\n\n                  {/* Recommendations */}\n                  {flightData.enhancedAnalysis.recommendations.length > 0 && (\n                    <div className=\"analysis-recommendations\">\n                      <h4>💡 Recommendations</h4>\n                      {flightData.enhancedAnalysis.recommendations.map((rec, index) => (\n                        <div key={index} className=\"recommendation-item\">\n                          {rec}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n\n                  {/* Event Times */}\n                  {(flightData.enhancedAnalysis.sunrise || flightData.enhancedAnalysis.sunset) && (\n                    <div className=\"event-times\">\n                      {flightData.enhancedAnalysis.sunrise && (\n                        <div className=\"event-time sunrise\">\n                          <span className=\"event-icon\">🌅</span>\n                          <div className=\"event-details\">\n                            <div className=\"event-label\">Sunrise</div>\n                            <div className=\"event-time-value\">{flightData.enhancedAnalysis.sunrise.timeString}</div>\n                            <div className=\"event-progress\">\n                              {Math.round(flightData.enhancedAnalysis.sunrise.progressPercent)}% through flight\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                      {flightData.enhancedAnalysis.sunset && (\n                        <div className=\"event-time sunset\">\n                          <span className=\"event-icon\">🌇</span>\n                          <div className=\"event-details\">\n                            <div className=\"event-label\">Sunset</div>\n                            <div className=\"event-time-value\">{flightData.enhancedAnalysis.sunset.timeString}</div>\n                            <div className=\"event-progress\">\n                              {Math.round(flightData.enhancedAnalysis.sunset.progressPercent)}% through flight\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Seat Recommendation Cards */}\n            <div className=\"content-section\">\n              <div className=\"seat-comparison-container\">\n                <h3>Seat Recommendations & View Analysis</h3>\n              \n              <div className=\"seat-options\">\n                {/* Left Seat Recommendation */}\n                <div className={`seat-option ${flightData.recommendation === 'left' ? 'recommended' : ''}`}>\n                  <div className=\"seat-header\">\n                    <h4>🪟 Left Side Seats</h4>\n                    {flightData.recommendation === 'left' && <span className=\"recommended-badge\">⭐ Recommended</span>}\n                  </div>\n                  \n                  <div className=\"view-counts\">\n                    {(() => {\n                      const leftViews = getSideSpecificViews(fromAirport, toAirport, 'left', flightData.enhancedAnalysis);\n                      return (\n                        <>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌅</span>\n                            <span className=\"count-text\">Sunrise Views: {leftViews.sunrise ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌇</span>\n                            <span className=\"count-text\">Sunset Views: {leftViews.sunset ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌙</span>\n                            <span className=\"count-text\">Night Views: {leftViews.night ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🏔️</span>\n                            <span className=\"count-text\">Mountain Views: {flightData.enhancedAnalysis?.mountainCount || 0} peaks</span>\n                          </div>\n                        </>\n                      );\n                    })()}\n                  </div>\n                </div>\n\n                {/* Right Seat Recommendation */}\n                <div className={`seat-option ${flightData.recommendation === 'right' ? 'recommended' : ''}`}>\n                  <div className=\"seat-header\">\n                    <h4>🪟 Right Side Seats</h4>\n                    {flightData.recommendation === 'right' && <span className=\"recommended-badge\">⭐ Recommended</span>}\n                  </div>\n                  \n                  <div className=\"view-counts\">\n                    {(() => {\n                      const rightViews = getSideSpecificViews(fromAirport, toAirport, 'right', flightData.enhancedAnalysis);\n                      return (\n                        <>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌅</span>\n                            <span className=\"count-text\">Sunrise Views: {rightViews.sunrise ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌇</span>\n                            <span className=\"count-text\">Sunset Views: {rightViews.sunset ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🌙</span>\n                            <span className=\"count-text\">Night Views: {rightViews.night ? 'YES' : 'NO'}</span>\n                          </div>\n                          <div className=\"count-item\">\n                            <span className=\"count-icon\">🏔️</span>\n                            <span className=\"count-text\">Mountain Views: {flightData.enhancedAnalysis?.mountainCount || 0} peaks</span>\n                          </div>\n                        </>\n                      );\n                    })()}\n                  </div>\n                </div>\n              </div>\n              </div>\n            </div>\n\n            {/* Current View Analysis Card */}\n            <div className=\"content-section\">\n              {currentSunPosition && (\n                <div className=\"current-view-card slide-up\">\n                <h3>\n                  <span className=\"section-icon\">📊</span>\n                  Current View Analysis\n                </h3>\n                <div className=\"view-details\">\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Aircraft Position:</span>\n                    <span className=\"view-value\">\n                      {currentPosition?.lat?.toFixed(4) ?? '--'}, {currentPosition?.lon?.toFixed(4) ?? '--'}\n                    </span>\n                  </div>\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Sun Elevation:</span>\n                    <span className=\"view-value\">{currentSunPosition.elevation?.toFixed(1) ?? '--'}°</span>\n                  </div>\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Sun Azimuth:</span>\n                    <span className=\"view-value\">{currentSunPosition.azimuth?.toFixed(1) ?? '--'}°</span>\n                  </div>\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Sun Visibility:</span>\n                    <span className=\"view-value\">\n                      {currentSunPosition ? (\n                        <>\n                          <span className=\"sun-tooltip-container\">\n                            {currentSunPosition.condition ? getSunConditionMarker(currentSunPosition.condition) : '☀️'}\n                            <div className={`sun-tooltip ${currentSunPosition.condition ? currentSunPosition.condition.toLowerCase() : 'daylight'}`}>\n                              {currentSunPosition.condition ? getSunTooltipContent(currentSunPosition) : `Sun • ${currentSunPosition.elevation?.toFixed(1) || '--'}° above horizon`}\n                            </div>\n                          </span>\n                          {' '}\n                          {currentSunPosition.condition === 'NIGHT' ? 'Below Horizon' : 'Visible'}\n                        </>\n                      ) : (\n                        'Not Available'\n                      )}\n                    </span>\n                  </div>\n                </div>\n                </div>\n              )}\n            </div>\n\n            {/* Flight Timeline */}\n            <div className=\"content-section\">\n              <div className=\"flight-progress-container slide-up\">\n              <h4>\n                <span className=\"section-icon\">🕐</span>\n                Flight Timeline\n              </h4>\n              \n              <p className=\"progress-instructions\">\n                Drag the slider to explore different moments of your flight\n              </p>\n\n              <div className=\"progress-slider-container\">\n                <div className=\"progress-labels\">\n                  <div className=\"progress-label\">\n                    <span className=\"progress-icon\">🛫</span>\n                    Departure\n                  </div>\n                  <div className=\"progress-label\">\n                    <span className=\"progress-icon\">🛬</span>\n                    Arrival\n                  </div>\n                </div>\n\n                <div \n                  className=\"horizontal-slider-container\"\n                  onMouseDown={handleMouseDown}\n                  onClick={handleClick}\n                >\n                  <div className=\"horizontal-slider-track\">\n                    <div \n                      className=\"horizontal-progress-bar\"\n                      style={{\n                        width: `${flightProgress}%`\n                      }}\n                    />\n                    \n                    {/* Sunrise/Sunset markers on timeline */}\n                    {(() => {\n                      const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                      return (\n                        <>\n                          {periods.sunriseProgress !== undefined && (\n                            <div \n                              className=\"timeline-event-marker sunrise-marker\"\n                              style={{ left: `${periods.sunriseProgress}%` }}\n                              title={`Sunrise at ${periods.sunriseTime?.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`}\n                            >\n                              🌅\n                            </div>\n                          )}\n                          {periods.sunsetProgress !== undefined && (\n                            <div \n                              className=\"timeline-event-marker sunset-marker\"\n                              style={{ left: `${periods.sunsetProgress}%` }}\n                              title={`Sunset at ${periods.sunsetTime?.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`}\n                            >\n                              🌇\n                            </div>\n                          )}\n                        </>\n                      );\n                    })()}\n                    \n                    <div \n                      className=\"horizontal-slider-handle\"\n                      style={{\n                        left: `${flightProgress}%`\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"progress-display\">\n                  Flight Progress: {Math.round(flightProgress)}%\n                </div>\n                \n                {/* Sunrise/Sunset Information */}\n                {(() => {\n                  const periods = getOptimalPeriodsInFlight(departureTime, flightDuration, flightData);\n                  if (periods.sunrise || periods.sunset) {\n                    return (\n                      <div className=\"sun-events-info\">\n                        <h5 style={{ margin: '10px 0 5px 0', fontSize: '14px', color: '#ffd700' }}>\n                          ☀️ Sun Events During Flight\n                        </h5>\n                        {periods.details.map((detail, index) => (\n                          <div key={index} style={{ fontSize: '12px', margin: '3px 0', color: '#e2e8f0' }}>\n                            {detail}\n                          </div>\n                        ))}\n                        {(periods.sunrise && periods.sunset) && (\n                          <div style={{ fontSize: '11px', margin: '5px 0', color: '#10b981', fontWeight: 'bold' }}>\n                            🌟 Perfect flight for both sunrise and sunset viewing!\n                          </div>\n                        )}\n                      </div>\n                    );\n                  }\n                  return null;\n                })()}\n              </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nfunction App() {\n  // Page navigation state\n  const [currentPage, setCurrentPage] = useState<AppPage>(AppPage.SEARCH);\n\n  // Form data state - All fields start empty\n  const [fromAirport, setFromAirport] = useState('');\n  const [toAirport, setToAirport] = useState('');\n  const [departureTime, setDepartureTime] = useState('');\n  const [flightDuration, setFlightDuration] = useState<number | ''>(''); // Start empty\n  const [flightData, setFlightData] = useState<FlightData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [flightProgress, setFlightProgress] = useState<number>(0);\n  const [currentPosition, setCurrentPosition] = useState<{ lat: number; lon: number } | null>(null);\n  const [currentSunPosition, setCurrentSunPosition] = useState<SunPosition | null>(null);\n\n  // View Preferences State - removed (no longer needed)\n\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Helper functions for flight duration calculations\n  const getFlightEndTime = (): Date => {\n    if (!departureTime || !flightDuration) {\n      return new Date(); // Return current time if invalid\n    }\n    const startTime = new Date(departureTime);\n    const endTime = new Date(startTime.getTime() + Number(flightDuration) * 60 * 1000); // Convert minutes to milliseconds\n    return endTime;\n  };\n\n  const formatTimeDisplay = (date: Date): string => {\n    return date.toLocaleTimeString('en-US', { \n      hour: '2-digit', \n      minute: '2-digit', \n      hour12: true \n    });\n  };\n\n\n\n\n\n\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Comprehensive form validation\n    if (!fromAirport || !toAirport || !departureTime || !flightDuration) {\n      setError('Please fill all the details including departure airport, arrival airport, departure time, and flight duration.');\n      setLoading(false);\n      return;\n    }\n\n\n\n    // Check if source and destination are the same\n    if (fromAirport === toAirport) {\n      setError('No flights available for the same source and destination airports. Please select different departure and arrival airports.');\n      setLoading(false);\n      return;\n    }\n\n    // Validate flight duration\n    if (typeof flightDuration === 'string' || flightDuration < 30 || flightDuration > 1440) {\n      setError('Flight duration must be a number between 30 and 1440 minutes (24 hours).');\n      setLoading(false);\n      return;\n    }\n\n    // SIMPLIFIED APPROACH: Generate flight analysis directly in frontend\n    try {\n      console.log('Generating simplified flight analysis...');\n      \n      const mockFlightData = generateSimplifiedFlightAnalysis(\n        fromAirport,\n        toAirport,\n        departureTime,\n        flightDuration\n      );\n\n      setFlightData(mockFlightData);\n      \n      // Set initial flight progress to 0% (departure)\n      setFlightProgress(0);\n      \n      console.log('Simplified flight analysis completed:', mockFlightData);\n      \n      // Navigate to results page\n      setCurrentPage(AppPage.RESULTS);\n      \n    } catch (err) {\n      setError('Unable to generate flight analysis. Please check your input and try again.');\n      console.error('Error generating flight analysis:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleProgressChange = useCallback((newProgress: number) => {\n    setFlightProgress(newProgress);\n  }, []);\n\n  // Throttled version for smooth dragging with optimized frequency\n  const throttledProgressChange = useCallback(\n    throttle((newProgress: number) => {\n      setFlightProgress(newProgress);\n    }, 8), // ~120 FPS for ultra-smooth airplane movement\n    []\n  );\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    \n    // Immediately update position on click for instant feedback\n    if (flightData) {\n      const sliderElement = e.currentTarget.closest('.horizontal-slider-container') as HTMLElement;\n      if (sliderElement) {\n        const rect = sliderElement.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        let percentage = (x / rect.width) * 100;\n        \n        // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n        if (percentage > 95) percentage = 100;\n        if (percentage < 5) percentage = 0;\n        \n        percentage = Math.max(0, Math.min(100, percentage));\n        \n        // Immediately update the visual elements without waiting for React state\n        const handle = document.querySelector('.horizontal-slider-handle') as HTMLElement;\n        const progressBar = document.querySelector('.horizontal-progress-bar') as HTMLElement;\n        const progressText = document.querySelector('.progress-display') as HTMLElement;\n        \n        if (handle) handle.style.left = `${percentage}%`;\n        if (progressBar) progressBar.style.width = `${percentage}%`;\n        if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n        \n        handleProgressChange(percentage);\n      }\n    }\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n    \n    const sliderElement = e.currentTarget as HTMLElement;\n    let isDraggingLocal = true;\n    \n    // Function to update slider position\n    const updateSliderPosition = (clientX: number) => {\n      if (!flightData || !sliderElement) return;\n      \n      const rect = sliderElement.getBoundingClientRect();\n      const x = clientX - rect.left;\n      let percentage = (x / rect.width) * 100;\n      \n      // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n      if (percentage > 95) percentage = 100;\n      if (percentage < 5) percentage = 0;\n      \n      percentage = Math.max(0, Math.min(100, percentage));\n      \n      // INSTANT updates - both visual and airplane position\n      const handle = document.querySelector('.horizontal-slider-handle') as HTMLElement;\n      const progressBar = document.querySelector('.horizontal-progress-bar') as HTMLElement;\n      const progressText = document.querySelector('.progress-display') as HTMLElement;\n      \n      if (handle) handle.style.left = `${percentage}%`;\n      if (progressBar) progressBar.style.width = `${percentage}%`;\n      if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n      \n      // IMMEDIATE React state update\n      setFlightProgress(percentage);\n    };\n    \n    // Initial update on mouse down\n    updateSliderPosition(e.clientX);\n    \n    // Mouse move handler\n    const mouseMoveHandler = (e: MouseEvent) => {\n      e.preventDefault();\n      if (!isDraggingLocal) return;\n      updateSliderPosition(e.clientX);\n    };\n    \n    // Mouse up handler\n    const mouseUpHandler = () => {\n      isDraggingLocal = false;\n      setIsDragging(false);\n      document.removeEventListener('mousemove', mouseMoveHandler);\n      document.removeEventListener('mouseup', mouseUpHandler);\n    };\n    \n    document.addEventListener('mousemove', mouseMoveHandler, { passive: false });\n    document.addEventListener('mouseup', mouseUpHandler, { passive: false });\n  };\n\n\n\n  const handlePositionChange = (position: { lat: number; lon: number; sunPosition: SunPosition | null }) => {\n    setCurrentPosition({ lat: position.lat, lon: position.lon });\n    setCurrentSunPosition(position.sunPosition);\n  };\n\n  // Navigation function to go back to search\n  const goBackToSearch = () => {\n    setCurrentPage(AppPage.SEARCH);\n    setError(null); // Clear any errors when going back\n  };\n\n  // Navigation function to change pages\n  const handlePageChange = (page: AppPage) => {\n    setCurrentPage(page);\n    setError(null); // Clear any errors when changing pages\n  };\n\n  const renderCurrentPage = () => {\n    switch (currentPage) {\n      case AppPage.SEARCH:\n        return (\n          <SearchPage \n            fromAirport={fromAirport}\n            setFromAirport={setFromAirport}\n            toAirport={toAirport}\n            setToAirport={setToAirport}\n            departureTime={departureTime}\n            setDepartureTime={setDepartureTime}\n            flightDuration={flightDuration}\n            setFlightDuration={setFlightDuration}\n            loading={loading}\n            error={error}\n            onSubmit={handleSubmit}\n            formatTimeDisplay={formatTimeDisplay}\n            getFlightEndTime={getFlightEndTime}\n          />\n        );\n      case AppPage.RESULTS:\n        return (\n          <ResultsPage \n            flightData={flightData}\n            fromAirport={fromAirport}\n            toAirport={toAirport}\n            currentPosition={currentPosition}\n            currentSunPosition={currentSunPosition}\n            flightProgress={flightProgress}\n            handleProgressChange={handleProgressChange}\n            handlePositionChange={handlePositionChange}\n            isDragging={isDragging}\n            handleMouseDown={handleMouseDown}\n            handleClick={handleClick}\n            onBack={goBackToSearch}\n            departureTime={departureTime}\n            flightDuration={flightDuration}\n          />\n        );\n      case AppPage.EXPERIENCE:\n        return (\n          <ExperiencePage \n            onBack={goBackToSearch}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navigation \n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n      {renderCurrentPage()}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}