{"ast":null,"code":"import React,{useState,useRef,useEffect,useCallback}from'react';import'./index.css';import'leaflet/dist/leaflet.css';import{MapContainer,TileLayer,Marker,Popup,Polyline}from'react-leaflet';import L from'leaflet';import axios from'axios';// Fix for default markers\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";L.Icon.Default.mergeOptions({iconRetinaUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',iconUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',shadowUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'});// Types\n// Function to calculate bearing between two points\nconst calculateBearing=(lat1,lon1,lat2,lon2)=>{const dLon=(lon2-lon1)*Math.PI/180;const lat1Rad=lat1*Math.PI/180;const lat2Rad=lat2*Math.PI/180;const y=Math.sin(dLon)*Math.cos(lat2Rad);const x=Math.cos(lat1Rad)*Math.sin(lat2Rad)-Math.sin(lat1Rad)*Math.cos(lat2Rad)*Math.cos(dLon);let bearing=Math.atan2(y,x)*180/Math.PI;bearing=(bearing+360)%360;// Normalize to 0-360\n// Adjust for airplane emoji orientation (airplane emoji points northeast by default)\n// Subtract 45 degrees to align with the route properly\nbearing=bearing-45;return bearing;};// Function to create rotated airplane icon\nconst createAirplaneIcon=rotation=>{return L.divIcon({className:'airplane-icon',html:`<div style=\"\n      transform: rotate(${rotation}deg); \n      font-size: 24px; \n      display: flex; \n      align-items: center; \n      justify-content: center; \n      width: 100%; \n      height: 100%;\n      transform-origin: center center;\n    \">✈️</div>`,iconSize:[30,30],iconAnchor:[15,15]});};// InteractiveAirplane component\nconst InteractiveAirplane=_ref=>{let{flightData,flightProgress,onPositionChange}=_ref;const airplaneRef=useRef(null);const getCurrentAirplaneData=()=>{if(!flightData||flightData.path.length===0)return{position:null,rotation:0};const waypointIndex=flightProgress>=100?flightData.path.length-1:Math.floor(flightProgress/100*(flightData.path.length-1));const currentWaypoint=flightData.path[waypointIndex];let rotation=0;if(flightData.path.length>1){// Always use the overall flight direction from start to end for consistency\nconst startPoint=flightData.path[0];const endPoint=flightData.path[flightData.path.length-1];rotation=calculateBearing(startPoint.lat,startPoint.lon,endPoint.lat,endPoint.lon);}return{position:[currentWaypoint.lat,currentWaypoint.lon],rotation:rotation};};const{position:currentPosition,rotation:airplaneRotation}=getCurrentAirplaneData();useEffect(()=>{if(!flightData||flightData.path.length===0)return;const waypointIndex=flightProgress>=100?flightData.path.length-1:Math.floor(flightProgress/100*(flightData.path.length-1));const currentWaypoint=flightData.path[waypointIndex];const currentSunPosition=flightData.sunPositions[waypointIndex]||null;// Update position callback\nonPositionChange({lat:currentWaypoint.lat,lon:currentWaypoint.lon,sunPosition:currentSunPosition});// Update map view to follow airplane with smooth animation\nif(airplaneRef.current){const leafletElement=airplaneRef.current;const map=leafletElement._map;if(map){map.setView([currentWaypoint.lat,currentWaypoint.lon],map.getZoom(),{animate:true,duration:0.1// Very short animation for smooth following\n});}}},[flightData,flightProgress]);// Removed onPositionChange from dependencies\nif(!currentPosition)return null;return/*#__PURE__*/_jsx(Marker,{ref:airplaneRef,position:currentPosition,icon:createAirplaneIcon(airplaneRotation),draggable:false,interactive:false,bubblingMouseEvents:false,eventHandlers:{dragstart:e=>{var _preventDefault,_ref2;(_preventDefault=(_ref2=e).preventDefault)===null||_preventDefault===void 0?void 0:_preventDefault.call(_ref2);return false;},drag:e=>{var _preventDefault2,_ref3;(_preventDefault2=(_ref3=e).preventDefault)===null||_preventDefault2===void 0?void 0:_preventDefault2.call(_ref3);return false;},dragend:e=>{var _preventDefault3,_ref4;(_preventDefault3=(_ref4=e).preventDefault)===null||_preventDefault3===void 0?void 0:_preventDefault3.call(_ref4);return false;},mousedown:e=>{var _e$originalEvent;(_e$originalEvent=e.originalEvent)===null||_e$originalEvent===void 0?void 0:_e$originalEvent.preventDefault();return false;},mouseup:e=>{var _e$originalEvent2;(_e$originalEvent2=e.originalEvent)===null||_e$originalEvent2===void 0?void 0:_e$originalEvent2.preventDefault();return false;},mousemove:e=>{var _e$originalEvent3;(_e$originalEvent3=e.originalEvent)===null||_e$originalEvent3===void 0?void 0:_e$originalEvent3.preventDefault();return false;},add:()=>{if(airplaneRef.current){const element=airplaneRef.current.getElement();if(element){element.style.pointerEvents='none';element.style.userSelect='none';element.style.touchAction='none';element.draggable=false;}}}},children:/*#__PURE__*/_jsxs(Popup,{children:[\"Airplane Position\",/*#__PURE__*/_jsx(\"br\",{}),\"Use the timeline slider to move me!\"]})});};// Page enum for navigation\nvar AppPage=/*#__PURE__*/function(AppPage){AppPage[\"SEARCH\"]=\"search\";AppPage[\"RESULTS\"]=\"results\";return AppPage;}(AppPage||{});// SearchPage Component\nconst SearchPage=_ref5=>{let{fromAirport,setFromAirport,toAirport,setToAirport,departureTime,setDepartureTime,flightDuration,setFlightDuration,wantSunrise,setWantSunrise,wantSunset,setWantSunset,sunrisePreference,setSunrisePreference,loading,error,onSubmit,formatTimeDisplay,getFlightEndTime,getOptimalPeriodsInFlight}=_ref5;return/*#__PURE__*/_jsxs(\"div\",{className:\"search-page fade-in\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u2708\\uFE0F SunSide - Perfect Window Seat Finder\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Find the best window seat for sunrise and sunset views during your flight\"})]}),/*#__PURE__*/_jsx(\"main\",{className:\"search-main\",children:/*#__PURE__*/_jsx(\"div\",{className:\"search-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"search-form card-elevated slide-up\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFAF Plan Your Journey\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Enter your flight details to get personalized seat recommendations\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-body\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-left-column\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"section-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83D\\uDEEB\"}),\"Flight Details\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"input-label\",htmlFor:\"fromAirport\",children:\"From Airport\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"input-field\",id:\"fromAirport\",value:fromAirport,onChange:e=>setFromAirport(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select departure\"}),/*#__PURE__*/_jsx(\"option\",{value:\"DEL\",children:\"\\uD83C\\uDFDB\\uFE0F Delhi (DEL)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"JAI\",children:\"\\uD83C\\uDFF0 Jaipur (JAI)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BLR\",children:\"\\uD83C\\uDF06 Bangalore (BLR)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BOM\",children:\"\\uD83C\\uDFD9\\uFE0F Mumbai (BOM)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BHO\",children:\"\\uD83C\\uDF38 Bhopal (BHO)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"LKO\",children:\"\\uD83D\\uDD4C Lucknow (LKO)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"input-label\",htmlFor:\"toAirport\",children:\"To Airport\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"input-field\",id:\"toAirport\",value:toAirport,onChange:e=>setToAirport(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select destination\"}),/*#__PURE__*/_jsx(\"option\",{value:\"DEL\",children:\"\\uD83C\\uDFDB\\uFE0F Delhi (DEL)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"JAI\",children:\"\\uD83C\\uDFF0 Jaipur (JAI)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BLR\",children:\"\\uD83C\\uDF06 Bangalore (BLR)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BOM\",children:\"\\uD83C\\uDFD9\\uFE0F Mumbai (BOM)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BHO\",children:\"\\uD83C\\uDF38 Bhopal (BHO)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"LKO\",children:\"\\uD83D\\uDD4C Lucknow (LKO)\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"input-label\",htmlFor:\"departureTime\",children:\"Departure Date & Time\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-field\",type:\"datetime-local\",id:\"departureTime\",value:departureTime,onChange:e=>setDepartureTime(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"input-label\",htmlFor:\"flightDuration\",children:\"Flight Duration (minutes)\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input-field\",type:\"number\",id:\"flightDuration\",min:\"30\",max:\"1440\",step:\"1\",value:flightDuration,onChange:e=>{const value=e.target.value;if(value===''){setFlightDuration('');}else{const intValue=parseInt(value,10);if(!isNaN(intValue)){setFlightDuration(intValue);}}},placeholder:\"e.g., 120 (2 hours)\",required:true}),departureTime&&flightDuration&&/*#__PURE__*/_jsxs(\"small\",{className:\"duration-help\",style:{marginTop:'8px',display:'block',color:'var(--text-muted)',fontSize:'0.875rem'},children:[\"Flight time: \",formatTimeDisplay(new Date(departureTime)),\" \\u2192 \",formatTimeDisplay(getFlightEndTime()),\"(\",Math.floor(Number(flightDuration)/60),\"h \",Number(flightDuration)%60,\"m)\"]})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-right-column\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"sun-preferences\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83C\\uDF05\"}),\"Sun Viewing Preferences\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"preference-note\",children:\"\\uD83D\\uDCA1 Select what you'd like to see during your flight for optimal seat placement\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:wantSunrise,onChange:e=>setWantSunrise(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"checkbox-text\",children:\"\\uD83C\\uDF05 I want to see the sunrise\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:wantSunset,onChange:e=>setWantSunset(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"checkbox-text\",children:\"\\uD83C\\uDF07 I want to see the sunset\"})]})]}),wantSunrise&&wantSunset&&/*#__PURE__*/_jsxs(\"div\",{className:\"priority-selection\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"priority-question\",children:\"\\uD83E\\uDD14 If both are visible during your flight, which would you prefer?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"radio-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"radio-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"sunPreference\",value:\"sunrise\",checked:sunrisePreference==='sunrise',onChange:e=>setSunrisePreference(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{className:\"radio-text\",children:\"\\uD83C\\uDF05 Prioritize Sunrise\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"radio-label\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"sunPreference\",value:\"sunset\",checked:sunrisePreference==='sunset',onChange:e=>setSunrisePreference(e.target.value)}),/*#__PURE__*/_jsx(\"span\",{className:\"radio-text\",children:\"\\uD83C\\uDF07 Prioritize Sunset\"})]})]})]})]})}),departureTime&&flightDuration&&/*#__PURE__*/_jsx(\"div\",{className:\"form-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flight-timing-info bounce-in\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83D\\uDCC5\"}),\"Flight Timing Analysis\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timing-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Departure:\"}),\" \",formatTimeDisplay(new Date(departureTime))]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Arrival:\"}),\" \",formatTimeDisplay(getFlightEndTime())]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Duration:\"}),\" \",Math.floor(Number(flightDuration)/60),\"h \",Number(flightDuration)%60,\"m\"]}),(()=>{const optimalPeriods=getOptimalPeriodsInFlight();return/*#__PURE__*/_jsxs(\"div\",{className:\"optimal-periods\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDFAF Available viewing opportunities:\"})}),optimalPeriods.details.length>0?/*#__PURE__*/_jsx(\"ul\",{children:optimalPeriods.details.map((detail,index)=>/*#__PURE__*/_jsx(\"li\",{children:detail},index))}):/*#__PURE__*/_jsx(\"p\",{className:\"no-optimal\",children:\"\\u26A0\\uFE0F No optimal sunrise/sunset viewing times during this flight\"})]});})()]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flight-tips-card\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83D\\uDCA1\"}),\"Flight Seat Tips\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tips-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tip-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tip-icon\",children:\"\\uD83C\\uDF05\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tip-text\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Best Sunrise Views:\"}),\" East-facing windows during morning flights\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tip-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tip-icon\",children:\"\\uD83C\\uDF07\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tip-text\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Best Sunset Views:\"}),\" West-facing windows during evening flights\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tip-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tip-icon\",children:\"\\uD83D\\uDDFA\\uFE0F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tip-text\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Flight Direction:\"}),\" Our algorithm considers your exact route for precise recommendations\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tip-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tip-icon\",children:\"\\u23F0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tip-text\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Timing Matters:\"}),\" Sun position changes throughout your flight duration\"]})]})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-submit-section\",children:[error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error\",style:{marginBottom:'var(--space-4)'},children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-icon\",children:\"\\u26A0\\uFE0F\"}),error]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary btn-lg\",disabled:loading,style:{width:'100%'},children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",style:{width:'20px',height:'20px',border:'2px solid rgba(255,255,255,0.3)',borderTop:'2px solid white'}}),\"Finding your perfect seat...\"]}):/*#__PURE__*/_jsx(_Fragment,{children:\"\\uD83D\\uDD0D Find My Perfect Seat\"})})]})]})})]})})})]});};// ResultsPage Component\n// Helper function to get tooltip content based on sun position and time\nconst getSunTooltipContent=(sunPosition,flightProgress,startTime)=>{if(!sunPosition||!startTime)return'';const currentTime=new Date(startTime.getTime()+flightProgress/100*3.5*60*60*1000);// Assuming ~3.5h flight\nconst timeString=currentTime.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});if(sunPosition.elevation<-6){return`Night Time • ${timeString} • Sun ${Math.abs(sunPosition.elevation).toFixed(1)}° below horizon`;}else if(sunPosition.elevation<0){return`Civil Twilight • ${timeString} • Sun ${Math.abs(sunPosition.elevation).toFixed(1)}° below horizon`;}else if(sunPosition.elevation<10){return`Golden Hour • ${timeString} • Perfect for sunrise/sunset photos`;}else{return`Daylight • ${timeString} • Sun ${sunPosition.elevation.toFixed(1)}° above horizon`;}};const ResultsPage=_ref6=>{var _currentSunPosition$e2,_currentSunPosition$e3,_currentSunPosition$e4,_currentSunPosition$e5,_currentSunPosition$e6,_currentSunPosition$e7,_currentSunPosition$e8,_currentSunPosition$e9,_currentPosition$lat$,_currentPosition$lat,_currentPosition$lon$,_currentPosition$lon,_currentSunPosition$e0,_currentSunPosition$e1,_currentSunPosition$a2,_currentSunPosition$a3,_currentSunPosition$e10,_currentSunPosition$e11;let{flightData,fromAirport,toAirport,currentPosition,currentSunPosition,flightProgress,handleProgressChange,handlePositionChange,isDragging,handleMouseDown,handleClick,onBack,departureTime,flightDuration}=_ref6;if(!flightData){return/*#__PURE__*/_jsx(\"div\",{className:\"results-page\",children:/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:\"No flight data available\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"results-page fade-in\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"results-header\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:onBack,className:\"back-btn\",children:\"\\u2190 Back to Search\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"results-header-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u2708\\uFE0F Flight Results\"}),/*#__PURE__*/_jsxs(\"p\",{children:[fromAirport,\" \\u2192 \",toAirport]})]})]}),/*#__PURE__*/_jsx(\"main\",{className:\"results-main\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"results-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"map-section\",children:/*#__PURE__*/_jsxs(MapContainer,{center:[28.6139,77.2090],zoom:6,style:{height:'100vh',width:'100%'},children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"}),flightData.path&&flightData.path.length>1&&/*#__PURE__*/_jsx(Polyline,{positions:flightData.path.map(wp=>[wp.lat,wp.lon]),color:\"blue\",weight:3}),flightData.path&&flightData.path.length>0&&/*#__PURE__*/_jsx(Marker,{position:[flightData.path[0].lat,flightData.path[0].lon],icon:L.divIcon({className:'custom-marker from-marker',html:'<div style=\"background: green; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',iconSize:[20,20],iconAnchor:[10,10]}),children:/*#__PURE__*/_jsxs(Popup,{children:[\"Departure: \",fromAirport]})}),flightData.path&&flightData.path.length>0&&/*#__PURE__*/_jsx(Marker,{position:[flightData.path[flightData.path.length-1].lat,flightData.path[flightData.path.length-1].lon],icon:L.divIcon({className:'custom-marker to-marker',html:'<div style=\"background: red; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',iconSize:[20,20],iconAnchor:[10,10]}),children:/*#__PURE__*/_jsxs(Popup,{children:[\"Arrival: \",toAirport]})}),/*#__PURE__*/_jsx(InteractiveAirplane,{flightData:flightData,flightProgress:flightProgress,onPositionChange:handlePositionChange}),currentPosition&&currentSunPosition&&flightData&&((_currentSunPosition$a,_currentSunPosition$e)=>{// Calculate pure flight bearing for reference\nconst startPoint=flightData.path[0];const endPoint=flightData.path[flightData.path.length-1];const dLon=(endPoint.lon-startPoint.lon)*Math.PI/180;const lat1Rad=startPoint.lat*Math.PI/180;const lat2Rad=endPoint.lat*Math.PI/180;const y=Math.sin(dLon)*Math.cos(lat2Rad);const x=Math.cos(lat1Rad)*Math.sin(lat2Rad)-Math.sin(lat1Rad)*Math.cos(lat2Rad)*Math.cos(dLon);let flightBearing=Math.atan2(y,x)*180/Math.PI;flightBearing=(flightBearing+360)%360;// Normalize to 0-360\n// Use REAL sun azimuth from astronomical calculations\n// SunCalc: South=0°, West=+90°, North=180°/-180°, East=-90°\n// Map: North=0°, East=90°, South=180°, West=270°\n// Convert: Add 180° to shift from South=0° to North=0°\nlet sunBearing=(currentSunPosition.azimuth+180)%360;// Position sun using real azimuth and elevation\n// Distance from airplane based on elevation (higher sun = farther for better visibility)\nconst elevationDegrees=currentSunPosition.elevation;const sunDistance=Math.max(0.3,0.8+(90-Math.abs(elevationDegrees))/180);// 0.3 to 1.3 degrees\n// Convert bearing to map coordinates\nconst sunLat=currentPosition.lat+Math.cos(sunBearing*Math.PI/180)*sunDistance;const sunLon=currentPosition.lon+Math.sin(sunBearing*Math.PI/180)*sunDistance;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Marker,{position:[sunLat,sunLon],icon:L.divIcon({className:'sun-marker',html:`\n                          <div style=\"\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            width: 40px;\n                            height: 40px;\n                            background: ${elevationDegrees<0?'radial-gradient(circle, #4a5568 30%, #2d3748 60%, #1a202c 100%)':elevationDegrees<10?'radial-gradient(circle, #ff8c00 30%, #ff6b35 60%, #e53e3e 100%)':'radial-gradient(circle, #ffd700 30%, #ffed4e 60%, #ff8c00 100%)'};\n                            border-radius: 50%;\n                            border: 3px solid #fff;\n                            box-shadow: 0 0 20px rgba(255, 215, 0, 0.6), 0 0 40px rgba(255, 215, 0, 0.3);\n                            position: relative;\n                            font-size: 20px;\n                            text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);\n                          \">\n                            ${elevationDegrees<0?'🌙':elevationDegrees<10?'🌅':'☀️'}\n                            <div style=\"\n                              position: absolute;\n                              width: 60px;\n                              height: 60px;\n                              border: 2px solid #ffd700;\n                              border-radius: 50%;\n                              border-style: dashed;\n                              animation: rotate 8s linear infinite;\n                              opacity: 0.4;\n                            \"></div>\n                          </div>\n                          <style>\n                            @keyframes rotate {\n                              from { transform: rotate(0deg); }\n                              to { transform: rotate(360deg); }\n                            }\n                          </style>\n                        `,iconSize:[40,40],iconAnchor:[20,20]}),children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u2600\\uFE0F Real Sun Position\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Recommended Seat:\"}),\" \",flightData.recommendation==='left'?'Left':'Right',\" Side\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Sun Azimuth:\"}),\" \",(_currentSunPosition$a=currentSunPosition.azimuth)===null||_currentSunPosition$a===void 0?void 0:_currentSunPosition$a.toFixed(1),\"\\xB0 (from South)\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Sun Elevation:\"}),\" \",(_currentSunPosition$e=currentSunPosition.elevation)===null||_currentSunPosition$e===void 0?void 0:_currentSunPosition$e.toFixed(1),\"\\xB0 (above horizon)\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Map Bearing:\"}),\" \",sunBearing.toFixed(1),\"\\xB0 (from North)\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Flight Direction:\"}),\" \",flightBearing.toFixed(1),\"\\xB0\",/*#__PURE__*/_jsx(\"br\",{}),elevationDegrees<0&&/*#__PURE__*/_jsx(\"em\",{style:{color:'#ff6b6b'},children:\"Sun below horizon\"}),elevationDegrees>=0&&elevationDegrees<10&&/*#__PURE__*/_jsx(\"em\",{style:{color:'#ffa500'},children:\"Sun near horizon\"}),elevationDegrees>=10&&/*#__PURE__*/_jsx(\"em\",{style:{color:'#4dabf7'},children:\"Sun well above horizon\"})]})})}),/*#__PURE__*/_jsx(Polyline,{positions:[[currentPosition.lat,currentPosition.lon],[sunLat,sunLon]],color:\"#ffd700\",weight:3,opacity:0.8,dashArray:\"10, 5\"})]});})()]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flight-info-card slide-up\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flight-route\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"route-city\",children:fromAirport}),/*#__PURE__*/_jsx(\"div\",{className:\"route-arrow\",children:\"\\u2708\\uFE0F\"}),/*#__PURE__*/_jsx(\"div\",{className:\"route-city\",children:toAirport})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-card bounce-in\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Perfect Seat Recommendation\"}),/*#__PURE__*/_jsx(\"p\",{children:flightData.recommendation==='left'?/*#__PURE__*/_jsxs(\"span\",{className:\"sun-tooltip-container\",children:[\"\\u2600\\uFE0F \\u2190 Left Side\",/*#__PURE__*/_jsx(\"div\",{className:`sun-tooltip ${((_currentSunPosition$e2=currentSunPosition===null||currentSunPosition===void 0?void 0:currentSunPosition.elevation)!==null&&_currentSunPosition$e2!==void 0?_currentSunPosition$e2:0)<0?'night':((_currentSunPosition$e3=currentSunPosition===null||currentSunPosition===void 0?void 0:currentSunPosition.elevation)!==null&&_currentSunPosition$e3!==void 0?_currentSunPosition$e3:0)<10?'sunrise':'daylight'}`,children:((_currentSunPosition$e4=currentSunPosition===null||currentSunPosition===void 0?void 0:currentSunPosition.elevation)!==null&&_currentSunPosition$e4!==void 0?_currentSunPosition$e4:0)<0?'Best for nighttime views • Moon/stars visible':((_currentSunPosition$e5=currentSunPosition===null||currentSunPosition===void 0?void 0:currentSunPosition.elevation)!==null&&_currentSunPosition$e5!==void 0?_currentSunPosition$e5:0)<10?'Perfect for sunrise/sunset viewing • Low sun angle':'Optimal sun viewing • Daytime brightness'})]}):flightData.recommendation==='right'?/*#__PURE__*/_jsxs(\"span\",{className:\"sun-tooltip-container\",children:[\"Right Side \\u2192 \\u2600\\uFE0F\",/*#__PURE__*/_jsx(\"div\",{className:`sun-tooltip ${((_currentSunPosition$e6=currentSunPosition===null||currentSunPosition===void 0?void 0:currentSunPosition.elevation)!==null&&_currentSunPosition$e6!==void 0?_currentSunPosition$e6:0)<0?'night':((_currentSunPosition$e7=currentSunPosition===null||currentSunPosition===void 0?void 0:currentSunPosition.elevation)!==null&&_currentSunPosition$e7!==void 0?_currentSunPosition$e7:0)<10?'sunrise':'daylight'}`,children:((_currentSunPosition$e8=currentSunPosition===null||currentSunPosition===void 0?void 0:currentSunPosition.elevation)!==null&&_currentSunPosition$e8!==void 0?_currentSunPosition$e8:0)<0?'Best for nighttime views • Moon/stars visible':((_currentSunPosition$e9=currentSunPosition===null||currentSunPosition===void 0?void 0:currentSunPosition.elevation)!==null&&_currentSunPosition$e9!==void 0?_currentSunPosition$e9:0)<10?'Perfect for sunrise/sunset viewing • Low sun angle':'Optimal sun viewing • Daytime brightness'})]}):flightData.recommendation})]}),currentSunPosition&&/*#__PURE__*/_jsxs(\"div\",{className:\"current-view-card slide-up\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83D\\uDCCA\"}),\"Current View Analysis\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"view-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"view-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"view-label\",children:\"Aircraft Position:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"view-value\",children:[(_currentPosition$lat$=currentPosition===null||currentPosition===void 0?void 0:(_currentPosition$lat=currentPosition.lat)===null||_currentPosition$lat===void 0?void 0:_currentPosition$lat.toFixed(4))!==null&&_currentPosition$lat$!==void 0?_currentPosition$lat$:'--',\", \",(_currentPosition$lon$=currentPosition===null||currentPosition===void 0?void 0:(_currentPosition$lon=currentPosition.lon)===null||_currentPosition$lon===void 0?void 0:_currentPosition$lon.toFixed(4))!==null&&_currentPosition$lon$!==void 0?_currentPosition$lon$:'--']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"view-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"view-label\",children:\"Sun Elevation:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"view-value\",children:[(_currentSunPosition$e0=(_currentSunPosition$e1=currentSunPosition.elevation)===null||_currentSunPosition$e1===void 0?void 0:_currentSunPosition$e1.toFixed(1))!==null&&_currentSunPosition$e0!==void 0?_currentSunPosition$e0:'--',\"\\xB0\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"view-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"view-label\",children:\"Sun Azimuth:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"view-value\",children:[(_currentSunPosition$a2=(_currentSunPosition$a3=currentSunPosition.azimuth)===null||_currentSunPosition$a3===void 0?void 0:_currentSunPosition$a3.toFixed(1))!==null&&_currentSunPosition$a2!==void 0?_currentSunPosition$a2:'--',\"\\xB0\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"view-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"view-label\",children:\"Sun Visibility:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"view-value\",children:currentSunPosition.elevation>0?/*#__PURE__*/_jsxs(\"span\",{className:\"sun-tooltip-container\",children:[\"\\u2600\\uFE0F Visible\",/*#__PURE__*/_jsx(\"div\",{className:`sun-tooltip ${currentSunPosition.elevation<10?'sunrise':'daylight'}`,children:currentSunPosition.elevation<10?`Sunrise/Sunset • ${currentSunPosition.elevation.toFixed(1)}° above horizon`:`Daylight • ${currentSunPosition.elevation.toFixed(1)}° above horizon`})]}):/*#__PURE__*/_jsxs(\"span\",{className:\"sun-tooltip-container\",children:[\"\\uD83C\\uDF19 Below Horizon\",/*#__PURE__*/_jsxs(\"div\",{className:\"sun-tooltip night\",children:[\"Nighttime \\u2022 \",Math.abs(currentSunPosition.elevation).toFixed(1),\"\\xB0 below horizon\"]})]})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight-progress-container slide-up\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"section-icon\",children:\"\\uD83D\\uDD50\"}),\"Flight Timeline\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"progress-instructions\",children:\"Drag the slider to explore different moments of your flight\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-slider-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-labels\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-label\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"sun-tooltip-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"progress-icon\",children:\"\\uD83D\\uDEEB\"}),\"Departure\",/*#__PURE__*/_jsxs(\"div\",{className:\"sun-tooltip daylight\",children:[flightData.path[0]?new Date(departureTime).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'}):'Start time',\" \\u2022 Flight begins\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-label\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"sun-tooltip-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"progress-icon\",children:\"\\uD83D\\uDEEC\"}),\"Arrival\",/*#__PURE__*/_jsxs(\"div\",{className:\"sun-tooltip daylight\",children:[flightData.path[flightData.path.length-1]?new Date(new Date(departureTime).getTime()+(Number(flightDuration)||120)*60*1000).toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'}):'End time',\" \\u2022 Flight ends\"]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-slider-container\",onMouseDown:handleMouseDown,onClick:handleClick,children:/*#__PURE__*/_jsxs(\"div\",{className:\"horizontal-slider-track\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-progress-bar\",style:{width:`${flightProgress}%`}}),/*#__PURE__*/_jsx(\"div\",{className:\"horizontal-slider-handle\",style:{left:`${flightProgress}%`}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-display\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"sun-tooltip-container\",children:[\"Flight Progress: \",Math.round(flightProgress),\"%\",/*#__PURE__*/_jsx(\"div\",{className:`sun-tooltip ${((_currentSunPosition$e10=currentSunPosition===null||currentSunPosition===void 0?void 0:currentSunPosition.elevation)!==null&&_currentSunPosition$e10!==void 0?_currentSunPosition$e10:0)<0?'night':((_currentSunPosition$e11=currentSunPosition===null||currentSunPosition===void 0?void 0:currentSunPosition.elevation)!==null&&_currentSunPosition$e11!==void 0?_currentSunPosition$e11:0)<10?'sunrise':'daylight'}`,children:getSunTooltipContent(currentSunPosition,flightProgress,departureTime?new Date(departureTime):undefined)})]})})]})]})]})]})})]});};function App(){// Page navigation state\nconst[currentPage,setCurrentPage]=useState(AppPage.SEARCH);// Form data state - All fields start empty\nconst[fromAirport,setFromAirport]=useState('');const[toAirport,setToAirport]=useState('');const[departureTime,setDepartureTime]=useState('');const[flightDuration,setFlightDuration]=useState('');// Start empty\nconst[flightData,setFlightData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[flightProgress,setFlightProgress]=useState(0);const[currentPosition,setCurrentPosition]=useState(null);const[currentSunPosition,setCurrentSunPosition]=useState(null);// Sun Preferences State\nconst[wantSunrise,setWantSunrise]=useState(false);const[wantSunset,setWantSunset]=useState(false);const[sunrisePreference,setSunrisePreference]=useState('sunrise');const[isDragging,setIsDragging]=useState(false);// Helper functions for flight duration calculations\nconst getFlightEndTime=()=>{if(!departureTime||!flightDuration){return new Date();// Return current time if invalid\n}const startTime=new Date(departureTime);const endTime=new Date(startTime.getTime()+Number(flightDuration)*60*1000);// Convert minutes to milliseconds\nreturn endTime;};const formatTimeDisplay=date=>{return date.toLocaleTimeString('en-US',{hour:'2-digit',minute:'2-digit',hour12:true});};const getOptimalPeriodsInFlight=()=>{if(!departureTime||!flightDuration){return{sunrise:false,sunset:false,details:[]};}const startTime=new Date(departureTime);const endTime=getFlightEndTime();const startHour=startTime.getHours();const endHour=endTime.getHours();let sunriseInFlight=false;let sunsetInFlight=false;const details=[];// Check if flight spans across sunrise time (4 AM - 10 AM)\nif(startHour<=10&&endHour>=4||// Flight overlaps with sunrise window\nstartHour>=4&&startHour<=10||// Start is in sunrise window\nendHour>=4&&endHour<=10||// End is in sunrise window\nstartHour<4&&endHour>10// Flight spans entire sunrise window\n){sunriseInFlight=true;details.push(`🌅 Sunrise viewing opportunity (4 AM - 10 AM)`);}// Check if flight spans across sunset time (5 PM - 7 PM)  \nif(startHour<=19&&endHour>=17||// Flight overlaps with sunset window\nstartHour>=17&&startHour<=19||// Start is in sunset window\nendHour>=17&&endHour<=19||// End is in sunset window\nstartHour<17&&endHour>19// Flight spans entire sunset window\n){sunsetInFlight=true;details.push(`🌇 Sunset viewing opportunity (5 PM - 7 PM)`);}// Handle cross-midnight flights\nif(endTime.getDate()!==startTime.getDate()){const nextDayHour=endHour;// Check if next day portion covers sunrise\nif(nextDayHour>=4&&nextDayHour<=10){sunriseInFlight=true;if(!details.some(d=>d.includes('Sunrise'))){details.push(`🌅 Sunrise viewing opportunity (next day, 4 AM - 10 AM)`);}}}return{sunrise:sunriseInFlight,sunset:sunsetInFlight,details};};// Validate sun preferences based on entire flight duration\nconst validateSunPreferences=()=>{if(!wantSunrise&&!wantSunset){return null;// No preferences selected, proceed normally\n}const optimalPeriods=getOptimalPeriodsInFlight();const startTime=new Date(departureTime);const endTime=getFlightEndTime();// If both sunrise and sunset are selected\nif(wantSunrise&&wantSunset){if(!optimalPeriods.sunrise&&!optimalPeriods.sunset){return`Flight duration (${formatTimeDisplay(startTime)} - ${formatTimeDisplay(endTime)}) doesn't include optimal sunrise (4-10 AM) or sunset (5-7 PM) viewing times. Consider adjusting your flight time or duration.`;}if(sunrisePreference==='sunrise'&&!optimalPeriods.sunrise&&optimalPeriods.sunset){return`Your flight (${formatTimeDisplay(startTime)} - ${formatTimeDisplay(endTime)}) includes sunset viewing but not sunrise. Consider prioritizing sunset instead.`;}if(sunrisePreference==='sunset'&&!optimalPeriods.sunset&&optimalPeriods.sunrise){return`Your flight (${formatTimeDisplay(startTime)} - ${formatTimeDisplay(endTime)}) includes sunrise viewing but not sunset. Consider prioritizing sunrise instead.`;}}else{// Single preference selected\nif(wantSunrise&&!optimalPeriods.sunrise){return`Your flight (${formatTimeDisplay(startTime)} - ${formatTimeDisplay(endTime)}) doesn't include optimal sunrise viewing time (4-10 AM). Consider adjusting your departure time or flight duration.`;}if(wantSunset&&!optimalPeriods.sunset){return`Your flight (${formatTimeDisplay(startTime)} - ${formatTimeDisplay(endTime)}) doesn't include optimal sunset viewing time (5-7 PM). Consider adjusting your departure time or flight duration.`;}}return null;// All validations passed\n};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError(null);// Comprehensive form validation\nif(!fromAirport||!toAirport||!departureTime||!flightDuration){setError('Please fill all the details including departure airport, arrival airport, departure time, and flight duration.');setLoading(false);return;}// Check if at least one sun preference is selected\nif(!wantSunrise&&!wantSunset){setError('Please select at least one sun preference (sunrise or sunset) to get seat recommendations.');setLoading(false);return;}// Check if source and destination are the same\nif(fromAirport===toAirport){setError('No flights available for the same source and destination airports. Please select different departure and arrival airports.');setLoading(false);return;}// Validate flight duration\nif(typeof flightDuration==='string'||flightDuration<30||flightDuration>1440){setError('Flight duration must be a number between 30 and 1440 minutes (24 hours).');setLoading(false);return;}// Validate sun preferences\nconst sunValidationError=validateSunPreferences();if(sunValidationError){setError(sunValidationError);setLoading(false);return;}try{const response=await axios.get(`http://localhost:3001/api/route`,{params:{from:fromAirport,to:toAirport,depart:departureTime}});// Validate the response data\nif(!response.data||!response.data.path||response.data.path.length===0){setError('No flight path data available for this route. Please try a different route or time.');setLoading(false);return;}setFlightData(response.data);// Set initial flight progress to 0% (departure)\nsetFlightProgress(0);// Navigate to results page after successful API call\nsetCurrentPage(AppPage.RESULTS);}catch(err){setError('Unable to fetch the data');console.error('Error fetching flight data:',err);}finally{setLoading(false);}};const handleProgressChange=useCallback(newProgress=>{setFlightProgress(newProgress);},[]);const handleClick=e=>{e.preventDefault();// Immediately update position on click for instant feedback\nif(flightData){const sliderElement=e.currentTarget.closest('.horizontal-slider-container');if(sliderElement){const rect=sliderElement.getBoundingClientRect();const x=e.clientX-rect.left;let percentage=x/rect.width*100;// Make it easier to reach 100% - if within 5% of the end, snap to 100%\nif(percentage>95)percentage=100;if(percentage<5)percentage=0;percentage=Math.max(0,Math.min(100,percentage));// Immediately update the visual elements without waiting for React state\nconst handle=document.querySelector('.horizontal-slider-handle');const progressBar=document.querySelector('.horizontal-progress-bar');const progressText=document.querySelector('.progress-display');if(handle)handle.style.left=`${percentage}%`;if(progressBar)progressBar.style.width=`${percentage}%`;if(progressText)progressText.textContent=`Flight Progress: ${Math.round(percentage)}%`;handleProgressChange(percentage);}}};const handleMouseDown=e=>{e.preventDefault();setIsDragging(true);// Immediately update position on mouse down for instant feedback\nif(flightData){const sliderElement=e.currentTarget.closest('.horizontal-slider-container');if(sliderElement){const rect=sliderElement.getBoundingClientRect();const x=e.clientX-rect.left;let percentage=x/rect.width*100;// Make it easier to reach 100% - if within 5% of the end, snap to 100%\nif(percentage>95)percentage=100;if(percentage<5)percentage=0;percentage=Math.max(0,Math.min(100,percentage));// Immediately update the visual elements without waiting for React state\nconst handle=document.querySelector('.horizontal-slider-handle');const progressBar=document.querySelector('.horizontal-progress-bar');const progressText=document.querySelector('.progress-display');if(handle)handle.style.left=`${percentage}%`;if(progressBar)progressBar.style.width=`${percentage}%`;if(progressText)progressText.textContent=`Flight Progress: ${Math.round(percentage)}%`;handleProgressChange(percentage);}}document.addEventListener('mousemove',handleMouseMove);document.addEventListener('mouseup',handleMouseUp);};const handleMouseMove=e=>{if(!isDragging||!flightData)return;const sliderElement=document.querySelector('.horizontal-slider-container');if(!sliderElement)return;const rect=sliderElement.getBoundingClientRect();const x=e.clientX-rect.left;let percentage=x/rect.width*100;// Make it easier to reach 100% - if within 5% of the end, snap to 100%\nif(percentage>95)percentage=100;if(percentage<5)percentage=0;percentage=Math.max(0,Math.min(100,percentage));// Immediately update the visual elements without waiting for React state\nconst handle=document.querySelector('.horizontal-slider-handle');const progressBar=document.querySelector('.horizontal-progress-bar');const progressText=document.querySelector('.progress-display');if(handle)handle.style.left=`${percentage}%`;if(progressBar)progressBar.style.width=`${percentage}%`;if(progressText)progressText.textContent=`Flight Progress: ${Math.round(percentage)}%`;// Update React state (this will update airplane position)\nhandleProgressChange(percentage);};const handleMouseUp=()=>{setIsDragging(false);document.removeEventListener('mousemove',handleMouseMove);document.removeEventListener('mouseup',handleMouseUp);};const handlePositionChange=position=>{setCurrentPosition({lat:position.lat,lon:position.lon});setCurrentSunPosition(position.sunPosition);};// Navigation function to go back to search\nconst goBackToSearch=()=>{setCurrentPage(AppPage.SEARCH);setError(null);// Clear any errors when going back\n};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:currentPage===AppPage.SEARCH?/*#__PURE__*/_jsx(SearchPage,{fromAirport:fromAirport,setFromAirport:setFromAirport,toAirport:toAirport,setToAirport:setToAirport,departureTime:departureTime,setDepartureTime:setDepartureTime,flightDuration:flightDuration,setFlightDuration:setFlightDuration,wantSunrise:wantSunrise,setWantSunrise:setWantSunrise,wantSunset:wantSunset,setWantSunset:setWantSunset,sunrisePreference:sunrisePreference,setSunrisePreference:setSunrisePreference,loading:loading,error:error,onSubmit:handleSubmit,formatTimeDisplay:formatTimeDisplay,getFlightEndTime:getFlightEndTime,getOptimalPeriodsInFlight:getOptimalPeriodsInFlight}):/*#__PURE__*/_jsx(ResultsPage,{flightData:flightData,fromAirport:fromAirport,toAirport:toAirport,currentPosition:currentPosition,currentSunPosition:currentSunPosition,flightProgress:flightProgress,handleProgressChange:handleProgressChange,handlePositionChange:handlePositionChange,isDragging:isDragging,handleMouseDown:handleMouseDown,handleClick:handleClick,onBack:goBackToSearch,departureTime:departureTime,flightDuration:flightDuration})});}export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","MapContainer","TileLayer","Marker","Popup","Polyline","L","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Icon","Default","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","calculateBearing","lat1","lon1","lat2","lon2","dLon","Math","PI","lat1Rad","lat2Rad","y","sin","cos","x","bearing","atan2","createAirplaneIcon","rotation","divIcon","className","html","iconSize","iconAnchor","InteractiveAirplane","_ref","flightData","flightProgress","onPositionChange","airplaneRef","getCurrentAirplaneData","path","length","position","waypointIndex","floor","currentWaypoint","startPoint","endPoint","lat","lon","currentPosition","airplaneRotation","currentSunPosition","sunPositions","sunPosition","current","leafletElement","map","_map","setView","getZoom","animate","duration","ref","icon","draggable","interactive","bubblingMouseEvents","eventHandlers","dragstart","e","_preventDefault","_ref2","preventDefault","call","drag","_preventDefault2","_ref3","dragend","_preventDefault3","_ref4","mousedown","_e$originalEvent","originalEvent","mouseup","_e$originalEvent2","mousemove","_e$originalEvent3","add","element","getElement","style","pointerEvents","userSelect","touchAction","children","AppPage","SearchPage","_ref5","fromAirport","setFromAirport","toAirport","setToAirport","departureTime","setDepartureTime","flightDuration","setFlightDuration","wantSunrise","setWantSunrise","wantSunset","setWantSunset","sunrisePreference","setSunrisePreference","loading","error","onSubmit","formatTimeDisplay","getFlightEndTime","getOptimalPeriodsInFlight","htmlFor","id","value","onChange","target","required","type","min","max","step","intValue","parseInt","isNaN","placeholder","marginTop","display","color","fontSize","Date","Number","checked","name","optimalPeriods","details","detail","index","marginBottom","disabled","width","height","border","borderTop","getSunTooltipContent","startTime","currentTime","getTime","timeString","toLocaleTimeString","hour","minute","elevation","abs","toFixed","ResultsPage","_ref6","_currentSunPosition$e2","_currentSunPosition$e3","_currentSunPosition$e4","_currentSunPosition$e5","_currentSunPosition$e6","_currentSunPosition$e7","_currentSunPosition$e8","_currentSunPosition$e9","_currentPosition$lat$","_currentPosition$lat","_currentPosition$lon$","_currentPosition$lon","_currentSunPosition$e0","_currentSunPosition$e1","_currentSunPosition$a2","_currentSunPosition$a3","_currentSunPosition$e10","_currentSunPosition$e11","handleProgressChange","handlePositionChange","isDragging","handleMouseDown","handleClick","onBack","onClick","center","zoom","url","attribution","positions","wp","weight","_currentSunPosition$a","_currentSunPosition$e","flightBearing","sunBearing","azimuth","elevationDegrees","sunDistance","sunLat","sunLon","recommendation","opacity","dashArray","onMouseDown","left","round","undefined","App","currentPage","setCurrentPage","SEARCH","setFlightData","setLoading","setError","setFlightProgress","setCurrentPosition","setCurrentSunPosition","setIsDragging","endTime","date","hour12","sunrise","sunset","startHour","getHours","endHour","sunriseInFlight","sunsetInFlight","push","getDate","nextDayHour","some","d","includes","validateSunPreferences","handleSubmit","sunValidationError","response","get","params","from","to","depart","data","RESULTS","err","console","newProgress","sliderElement","currentTarget","closest","rect","getBoundingClientRect","clientX","percentage","handle","document","querySelector","progressBar","progressText","textContent","addEventListener","handleMouseMove","handleMouseUp","removeEventListener","goBackToSearch"],"sources":["C:/Users/prakh/Desktop/Flight/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport './index.css';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\n\n// Fix for default markers\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\n// Types\ninterface Waypoint {\n  lat: number;\n  lon: number;\n}\n\ninterface SunPosition {\n  azimuth: number;\n  elevation: number;\n}\n\ninterface FlightData {\n  path: Waypoint[];\n  sunPositions: SunPosition[];\n  recommendation: string;\n  distance?: number;\n  flightTime?: number;\n}\n\n// Function to calculate bearing between two points\nconst calculateBearing = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const lat1Rad = lat1 * Math.PI / 180;\n  const lat2Rad = lat2 * Math.PI / 180;\n  \n  const y = Math.sin(dLon) * Math.cos(lat2Rad);\n  const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n  \n  let bearing = Math.atan2(y, x) * 180 / Math.PI;\n  bearing = (bearing + 360) % 360; // Normalize to 0-360\n  \n  // Adjust for airplane emoji orientation (airplane emoji points northeast by default)\n  // Subtract 45 degrees to align with the route properly\n  bearing = bearing - 45;\n  \n  return bearing;\n};\n\n// Function to create rotated airplane icon\nconst createAirplaneIcon = (rotation: number) => {\n  return L.divIcon({\n    className: 'airplane-icon',\n    html: `<div style=\"\n      transform: rotate(${rotation}deg); \n      font-size: 24px; \n      display: flex; \n      align-items: center; \n      justify-content: center; \n      width: 100%; \n      height: 100%;\n      transform-origin: center center;\n    \">✈️</div>`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n  });\n};\n\n// InteractiveAirplane component\ninterface InteractiveAirplaneProps {\n  flightData: FlightData;\n  flightProgress: number;\n  onPositionChange: (position: { lat: number; lon: number; sunPosition: SunPosition }) => void;\n}\n\nconst InteractiveAirplane: React.FC<InteractiveAirplaneProps> = ({ \n  flightData, \n  flightProgress, \n  onPositionChange \n}) => {\n  const airplaneRef = useRef<L.Marker>(null);\n\n  const getCurrentAirplaneData = (): { position: [number, number] | null; rotation: number } => {\n    if (!flightData || flightData.path.length === 0) return { position: null, rotation: 0 };\n    \n    const waypointIndex = flightProgress >= 100 \n      ? flightData.path.length - 1 \n      : Math.floor((flightProgress / 100) * (flightData.path.length - 1));\n    const currentWaypoint = flightData.path[waypointIndex];\n    \n    let rotation = 0;\n    if (flightData.path.length > 1) {\n      // Always use the overall flight direction from start to end for consistency\n      const startPoint = flightData.path[0];\n      const endPoint = flightData.path[flightData.path.length - 1];\n      rotation = calculateBearing(\n        startPoint.lat, startPoint.lon,\n        endPoint.lat, endPoint.lon\n      );\n    }\n    \n    return { \n      position: [currentWaypoint.lat, currentWaypoint.lon],\n      rotation: rotation\n    };\n  };\n\n  const { position: currentPosition, rotation: airplaneRotation } = getCurrentAirplaneData();\n\n  useEffect(() => {\n    if (!flightData || flightData.path.length === 0) return;\n    \n    const waypointIndex = flightProgress >= 100 \n      ? flightData.path.length - 1 \n      : Math.floor((flightProgress / 100) * (flightData.path.length - 1));\n    const currentWaypoint = flightData.path[waypointIndex];\n    const currentSunPosition = flightData.sunPositions[waypointIndex] || null;\n\n    // Update position callback\n    onPositionChange({\n      lat: currentWaypoint.lat,\n      lon: currentWaypoint.lon,\n      sunPosition: currentSunPosition\n    });\n\n    // Update map view to follow airplane with smooth animation\n    if (airplaneRef.current) {\n      const leafletElement = airplaneRef.current as any;\n      const map = leafletElement._map;\n      if (map) {\n        map.setView([currentWaypoint.lat, currentWaypoint.lon], map.getZoom(), { \n          animate: true,\n          duration: 0.1 // Very short animation for smooth following\n        });\n      }\n    }\n  }, [flightData, flightProgress]); // Removed onPositionChange from dependencies\n\n  if (!currentPosition) return null;\n\n  return (\n    <Marker\n      ref={airplaneRef}\n      position={currentPosition}\n      icon={createAirplaneIcon(airplaneRotation)}\n      draggable={false}\n      interactive={false}\n      bubblingMouseEvents={false}\n      eventHandlers={{\n        dragstart: (e) => { (e as any).preventDefault?.(); return false; },\n        drag: (e) => { (e as any).preventDefault?.(); return false; },\n        dragend: (e) => { (e as any).preventDefault?.(); return false; },\n        mousedown: (e) => { e.originalEvent?.preventDefault(); return false; },\n        mouseup: (e) => { e.originalEvent?.preventDefault(); return false; },\n        mousemove: (e) => { e.originalEvent?.preventDefault(); return false; },\n        add: () => {\n          if (airplaneRef.current) {\n            const element = airplaneRef.current.getElement();\n            if (element) {\n              element.style.pointerEvents = 'none';\n              element.style.userSelect = 'none';\n              element.style.touchAction = 'none';\n              element.draggable = false;\n            }\n          }\n        }\n      }}\n    >\n      <Popup>\n        Airplane Position<br />\n        Use the timeline slider to move me!\n      </Popup>\n    </Marker>\n  );\n};\n\n// Page enum for navigation\nenum AppPage {\n  SEARCH = 'search',\n  RESULTS = 'results'\n}\n\n// SearchPage Component\ninterface SearchPageProps {\n  fromAirport: string;\n  setFromAirport: (value: string) => void;\n  toAirport: string;\n  setToAirport: (value: string) => void;\n  departureTime: string;\n  setDepartureTime: (value: string) => void;\n  flightDuration: number | '';\n  setFlightDuration: (value: number | '') => void;\n  wantSunrise: boolean;\n  setWantSunrise: (value: boolean) => void;\n  wantSunset: boolean;\n  setWantSunset: (value: boolean) => void;\n  sunrisePreference: 'sunrise' | 'sunset';\n  setSunrisePreference: (value: 'sunrise' | 'sunset') => void;\n  loading: boolean;\n  error: string | null;\n  onSubmit: (e: React.FormEvent) => void;\n  formatTimeDisplay: (date: Date) => string;\n  getFlightEndTime: () => Date;\n  getOptimalPeriodsInFlight: () => { sunrise: boolean; sunset: boolean; details: string[] };\n}\n\nconst SearchPage: React.FC<SearchPageProps> = ({\n  fromAirport, setFromAirport, toAirport, setToAirport, departureTime, setDepartureTime,\n  flightDuration, setFlightDuration, wantSunrise, setWantSunrise, wantSunset, setWantSunset,\n  sunrisePreference, setSunrisePreference, loading, error, onSubmit,\n  formatTimeDisplay, getFlightEndTime, getOptimalPeriodsInFlight\n}) => {\n  return (\n    <div className=\"search-page fade-in\">\n      <header className=\"app-header\">\n        <h1>✈️ SunSide - Perfect Window Seat Finder</h1>\n        <p>Find the best window seat for sunrise and sunset views during your flight</p>\n      </header>\n\n      <main className=\"search-main\">\n        <div className=\"search-container\">\n          <div className=\"search-form card-elevated slide-up\">\n            <div className=\"form-header\">\n              <h2>🎯 Plan Your Journey</h2>\n              <p>Enter your flight details to get personalized seat recommendations</p>\n            </div>\n            \n            <div className=\"form-body\">\n              <form onSubmit={onSubmit}>\n                {/* Left Column */}\n                <div className=\"form-left-column\">\n                  <div className=\"form-section\">\n                    <h3 className=\"section-title\">\n                      <span className=\"section-icon\">🛫</span>\n                      Flight Details\n                    </h3>\n                    \n                    <div className=\"form-grid\">\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"fromAirport\">From Airport</label>\n                        <select\n                          className=\"input-field\"\n                          id=\"fromAirport\"\n                          value={fromAirport}\n                          onChange={(e) => setFromAirport(e.target.value)}\n                          required\n                        >\n                          <option value=\"\">Select departure</option>\n                          <option value=\"DEL\">🏛️ Delhi (DEL)</option>\n                          <option value=\"JAI\">🏰 Jaipur (JAI)</option>\n                          <option value=\"BLR\">🌆 Bangalore (BLR)</option>\n                          <option value=\"BOM\">🏙️ Mumbai (BOM)</option>\n                          <option value=\"BHO\">🌸 Bhopal (BHO)</option>\n                          <option value=\"LKO\">🕌 Lucknow (LKO)</option>\n                        </select>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"toAirport\">To Airport</label>\n                        <select\n                          className=\"input-field\"\n                          id=\"toAirport\"\n                          value={toAirport}\n                          onChange={(e) => setToAirport(e.target.value)}\n                          required\n                        >\n                          <option value=\"\">Select destination</option>\n                          <option value=\"DEL\">🏛️ Delhi (DEL)</option>\n                          <option value=\"JAI\">🏰 Jaipur (JAI)</option>\n                          <option value=\"BLR\">🌆 Bangalore (BLR)</option>\n                          <option value=\"BOM\">🏙️ Mumbai (BOM)</option>\n                          <option value=\"BHO\">🌸 Bhopal (BHO)</option>\n                          <option value=\"LKO\">🕌 Lucknow (LKO)</option>\n                        </select>\n                      </div>\n                    </div>\n\n                    <div className=\"form-grid\">\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"departureTime\">Departure Date & Time</label>\n                        <input\n                          className=\"input-field\"\n                          type=\"datetime-local\"\n                          id=\"departureTime\"\n                          value={departureTime}\n                          onChange={(e) => setDepartureTime(e.target.value)}\n                          required\n                        />\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"input-label\" htmlFor=\"flightDuration\">Flight Duration (minutes)</label>\n                        <input\n                          className=\"input-field\"\n                          type=\"number\"\n                          id=\"flightDuration\"\n                          min=\"30\"\n                          max=\"1440\"\n                          step=\"1\"\n                          value={flightDuration}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            if (value === '') {\n                              setFlightDuration('');\n                            } else {\n                              const intValue = parseInt(value, 10);\n                              if (!isNaN(intValue)) {\n                                setFlightDuration(intValue);\n                              }\n                            }\n                          }}\n                          placeholder=\"e.g., 120 (2 hours)\"\n                          required\n                        />\n                        {departureTime && flightDuration && (\n                          <small className=\"duration-help\" style={{ marginTop: '8px', display: 'block', color: 'var(--text-muted)', fontSize: '0.875rem' }}>\n                            Flight time: {formatTimeDisplay(new Date(departureTime))} → {formatTimeDisplay(getFlightEndTime())} \n                            ({Math.floor(Number(flightDuration) / 60)}h {Number(flightDuration) % 60}m)\n                          </small>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Right Column */}\n                <div className=\"form-right-column\">\n                  <div className=\"form-section\">\n                    <div className=\"sun-preferences\">\n                      <h4>\n                        <span className=\"section-icon\">🌅</span>\n                        Sun Viewing Preferences\n                      </h4>\n                      <div className=\"preference-note\">\n                        💡 Select what you'd like to see during your flight for optimal seat placement\n                      </div>\n                      \n                      <div className=\"checkbox-group\">\n                        <label className=\"checkbox-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={wantSunrise}\n                            onChange={(e) => setWantSunrise(e.target.checked)}\n                          />\n                          <span className=\"checkbox-text\">🌅 I want to see the sunrise</span>\n                        </label>\n                        \n                        <label className=\"checkbox-label\">\n                          <input\n                            type=\"checkbox\"\n                            checked={wantSunset}\n                            onChange={(e) => setWantSunset(e.target.checked)}\n                          />\n                          <span className=\"checkbox-text\">🌇 I want to see the sunset</span>\n                        </label>\n                      </div>\n\n                      {wantSunrise && wantSunset && (\n                        <div className=\"priority-selection\">\n                          <p className=\"priority-question\">\n                            🤔 If both are visible during your flight, which would you prefer?\n                          </p>\n                          <div className=\"radio-group\">\n                            <label className=\"radio-label\">\n                              <input\n                                type=\"radio\"\n                                name=\"sunPreference\"\n                                value=\"sunrise\"\n                                checked={sunrisePreference === 'sunrise'}\n                                onChange={(e) => setSunrisePreference(e.target.value as 'sunrise' | 'sunset')}\n                              />\n                              <span className=\"radio-text\">🌅 Prioritize Sunrise</span>\n                            </label>\n                            \n                            <label className=\"radio-label\">\n                              <input\n                                type=\"radio\"\n                                name=\"sunPreference\"\n                                value=\"sunset\"\n                                checked={sunrisePreference === 'sunset'}\n                                onChange={(e) => setSunrisePreference(e.target.value as 'sunrise' | 'sunset')}\n                              />\n                              <span className=\"radio-text\">🌇 Prioritize Sunset</span>\n                            </label>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {departureTime && flightDuration && (\n                    <div className=\"form-section\">\n                      <div className=\"flight-timing-info bounce-in\">\n                        <h4>\n                          <span className=\"section-icon\">📅</span>\n                          Flight Timing Analysis\n                        </h4>\n                        <div className=\"timing-details\">\n                          <p><strong>Departure:</strong> {formatTimeDisplay(new Date(departureTime))}</p>\n                          <p><strong>Arrival:</strong> {formatTimeDisplay(getFlightEndTime())}</p>\n                          <p><strong>Duration:</strong> {Math.floor(Number(flightDuration) / 60)}h {Number(flightDuration) % 60}m</p>\n                          \n                          {(() => {\n                            const optimalPeriods = getOptimalPeriodsInFlight();\n                            return (\n                              <div className=\"optimal-periods\">\n                                <p><strong>🎯 Available viewing opportunities:</strong></p>\n                                {optimalPeriods.details.length > 0 ? (\n                                  <ul>\n                                    {optimalPeriods.details.map((detail, index) => (\n                                      <li key={index}>{detail}</li>\n                                    ))}\n                                  </ul>\n                                ) : (\n                                  <p className=\"no-optimal\">\n                                    ⚠️ No optimal sunrise/sunset viewing times during this flight\n                                  </p>\n                                )}\n                              </div>\n                            );\n                          })()}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Flight Tips Section - Always visible to fill space */}\n                  <div className=\"form-section\">\n                    <div className=\"flight-tips-card\">\n                      <h4>\n                        <span className=\"section-icon\">💡</span>\n                        Flight Seat Tips\n                      </h4>\n                      <div className=\"tips-content\">\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">🌅</span>\n                          <div className=\"tip-text\">\n                            <strong>Best Sunrise Views:</strong> East-facing windows during morning flights\n                          </div>\n                        </div>\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">🌇</span>\n                          <div className=\"tip-text\">\n                            <strong>Best Sunset Views:</strong> West-facing windows during evening flights\n                          </div>\n                        </div>\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">🗺️</span>\n                          <div className=\"tip-text\">\n                            <strong>Flight Direction:</strong> Our algorithm considers your exact route for precise recommendations\n                          </div>\n                        </div>\n                        <div className=\"tip-item\">\n                          <span className=\"tip-icon\">⏰</span>\n                          <div className=\"tip-text\">\n                            <strong>Timing Matters:</strong> Sun position changes throughout your flight duration\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Submit Section - Full Width */}\n                <div className=\"form-submit-section\">\n                  {error && (\n                    <div className=\"error\" style={{ marginBottom: 'var(--space-4)' }}>\n                      <span className=\"error-icon\">⚠️</span>\n                      {error}\n                    </div>\n                  )}\n\n                  <button \n                    type=\"submit\" \n                    className=\"btn btn-primary btn-lg\" \n                    disabled={loading}\n                    style={{ width: '100%' }}\n                  >\n                    {loading ? (\n                      <>\n                        <div className=\"loading-spinner\" style={{ width: '20px', height: '20px', border: '2px solid rgba(255,255,255,0.3)', borderTop: '2px solid white' }}></div>\n                        Finding your perfect seat...\n                      </>\n                    ) : (\n                      <>\n                        🔍 Find My Perfect Seat\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\n// ResultsPage Component\ninterface ResultsPageProps {\n  flightData: FlightData | null;\n  fromAirport: string;\n  toAirport: string;\n  currentPosition: { lat: number; lon: number } | null;\n  currentSunPosition: SunPosition | null;\n  flightProgress: number;\n  handleProgressChange: (newProgress: number) => void;\n  handlePositionChange: (position: { lat: number; lon: number; sunPosition: SunPosition }) => void;\n  isDragging: boolean;\n  handleMouseDown: (e: React.MouseEvent) => void;\n  handleClick: (e: React.MouseEvent) => void;\n  onBack: () => void;\n  departureTime: string;\n  flightDuration: number | '';\n}\n\n// Helper function to get tooltip content based on sun position and time\nconst getSunTooltipContent = (sunPosition: SunPosition | null, flightProgress: number, startTime?: Date) => {\n  if (!sunPosition || !startTime) return '';\n  \n  const currentTime = new Date(startTime.getTime() + (flightProgress / 100) * 3.5 * 60 * 60 * 1000); // Assuming ~3.5h flight\n  const timeString = currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  \n  if (sunPosition.elevation < -6) {\n    return `Night Time • ${timeString} • Sun ${Math.abs(sunPosition.elevation).toFixed(1)}° below horizon`;\n  } else if (sunPosition.elevation < 0) {\n    return `Civil Twilight • ${timeString} • Sun ${Math.abs(sunPosition.elevation).toFixed(1)}° below horizon`;\n  } else if (sunPosition.elevation < 10) {\n    return `Golden Hour • ${timeString} • Perfect for sunrise/sunset photos`;\n  } else {\n    return `Daylight • ${timeString} • Sun ${sunPosition.elevation.toFixed(1)}° above horizon`;\n  }\n};\n\nconst ResultsPage: React.FC<ResultsPageProps> = ({\n  flightData, fromAirport, toAirport, currentPosition, currentSunPosition,\n  flightProgress, handleProgressChange, handlePositionChange, isDragging,\n  handleMouseDown, handleClick, onBack, departureTime, flightDuration\n}) => {\n  if (!flightData) {\n    return (\n      <div className=\"results-page\">\n        <div className=\"error\">No flight data available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"results-page fade-in\">\n      <header className=\"results-header\">\n        <button onClick={onBack} className=\"back-btn\">\n          ← Back to Search\n        </button>\n        <div className=\"results-header-content\">\n          <h1>✈️ Flight Results</h1>\n          <p>{fromAirport} → {toAirport}</p>\n        </div>\n      </header>\n\n      <main className=\"results-main\">\n        <div className=\"results-container\">\n          <div className=\"map-section\">\n            <MapContainer\n              center={[28.6139, 77.2090]}\n              zoom={6}\n              style={{ height: '100vh', width: '100%' }}\n            >\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              />\n\n              {flightData.path && flightData.path.length > 1 && (\n                <Polyline\n                  positions={flightData.path.map(wp => [wp.lat, wp.lon])}\n                  color=\"blue\"\n                  weight={3}\n                />\n              )}\n\n              {flightData.path && flightData.path.length > 0 && (\n                <Marker\n                  position={[flightData.path[0].lat, flightData.path[0].lon]}\n                  icon={L.divIcon({\n                    className: 'custom-marker from-marker',\n                    html: '<div style=\"background: green; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',\n                    iconSize: [20, 20],\n                    iconAnchor: [10, 10],\n                  })}\n                >\n                  <Popup>Departure: {fromAirport}</Popup>\n                </Marker>\n              )}\n\n              {flightData.path && flightData.path.length > 0 && (\n                <Marker\n                  position={[flightData.path[flightData.path.length - 1].lat, flightData.path[flightData.path.length - 1].lon]}\n                  icon={L.divIcon({\n                    className: 'custom-marker to-marker',\n                    html: '<div style=\"background: red; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white;\"></div>',\n                    iconSize: [20, 20],\n                    iconAnchor: [10, 10],\n                  })}\n                >\n                  <Popup>Arrival: {toAirport}</Popup>\n                </Marker>\n              )}\n\n              <InteractiveAirplane \n                flightData={flightData}\n                flightProgress={flightProgress}\n                onPositionChange={handlePositionChange}\n              />\n\n              {/* Sun Marker on Map */}\n              {currentPosition && currentSunPosition && flightData && (() => {\n                // Calculate pure flight bearing for reference\n                const startPoint = flightData.path[0];\n                const endPoint = flightData.path[flightData.path.length - 1];\n                \n                const dLon = (endPoint.lon - startPoint.lon) * Math.PI / 180;\n                const lat1Rad = startPoint.lat * Math.PI / 180;\n                const lat2Rad = endPoint.lat * Math.PI / 180;\n                \n                const y = Math.sin(dLon) * Math.cos(lat2Rad);\n                const x = Math.cos(lat1Rad) * Math.sin(lat2Rad) - Math.sin(lat1Rad) * Math.cos(lat2Rad) * Math.cos(dLon);\n                \n                let flightBearing = Math.atan2(y, x) * 180 / Math.PI;\n                flightBearing = (flightBearing + 360) % 360; // Normalize to 0-360\n                \n                // Use REAL sun azimuth from astronomical calculations\n                // SunCalc: South=0°, West=+90°, North=180°/-180°, East=-90°\n                // Map: North=0°, East=90°, South=180°, West=270°\n                // Convert: Add 180° to shift from South=0° to North=0°\n                let sunBearing = (currentSunPosition.azimuth + 180) % 360;\n                \n                // Position sun using real azimuth and elevation\n                // Distance from airplane based on elevation (higher sun = farther for better visibility)\n                const elevationDegrees = currentSunPosition.elevation;\n                const sunDistance = Math.max(0.3, 0.8 + (90 - Math.abs(elevationDegrees)) / 180); // 0.3 to 1.3 degrees\n                \n                // Convert bearing to map coordinates\n                const sunLat = currentPosition.lat + Math.cos(sunBearing * Math.PI / 180) * sunDistance;\n                const sunLon = currentPosition.lon + Math.sin(sunBearing * Math.PI / 180) * sunDistance;\n                \n                return (\n                  <>\n                    <Marker\n                      position={[sunLat, sunLon]}\n                      icon={L.divIcon({\n                        className: 'sun-marker',\n                        html: `\n                          <div style=\"\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            width: 40px;\n                            height: 40px;\n                            background: ${elevationDegrees < 0 \n                              ? 'radial-gradient(circle, #4a5568 30%, #2d3748 60%, #1a202c 100%)' \n                              : elevationDegrees < 10 \n                                ? 'radial-gradient(circle, #ff8c00 30%, #ff6b35 60%, #e53e3e 100%)' \n                                : 'radial-gradient(circle, #ffd700 30%, #ffed4e 60%, #ff8c00 100%)'\n                            };\n                            border-radius: 50%;\n                            border: 3px solid #fff;\n                            box-shadow: 0 0 20px rgba(255, 215, 0, 0.6), 0 0 40px rgba(255, 215, 0, 0.3);\n                            position: relative;\n                            font-size: 20px;\n                            text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);\n                          \">\n                            ${elevationDegrees < 0 ? '🌙' : elevationDegrees < 10 ? '🌅' : '☀️'}\n                            <div style=\"\n                              position: absolute;\n                              width: 60px;\n                              height: 60px;\n                              border: 2px solid #ffd700;\n                              border-radius: 50%;\n                              border-style: dashed;\n                              animation: rotate 8s linear infinite;\n                              opacity: 0.4;\n                            \"></div>\n                          </div>\n                          <style>\n                            @keyframes rotate {\n                              from { transform: rotate(0deg); }\n                              to { transform: rotate(360deg); }\n                            }\n                          </style>\n                        `,\n                        iconSize: [40, 40],\n                        iconAnchor: [20, 20],\n                      })}\n                    >\n                      <Popup>\n                        <div>\n                          <strong>☀️ Real Sun Position</strong><br/>\n                          <strong>Recommended Seat:</strong> {flightData.recommendation === 'left' ? 'Left' : 'Right'} Side<br/>\n                          <strong>Sun Azimuth:</strong> {currentSunPosition.azimuth?.toFixed(1)}° (from South)<br/>\n                          <strong>Sun Elevation:</strong> {currentSunPosition.elevation?.toFixed(1)}° (above horizon)<br/>\n                          <strong>Map Bearing:</strong> {sunBearing.toFixed(1)}° (from North)<br/>\n                          <strong>Flight Direction:</strong> {flightBearing.toFixed(1)}°<br/>\n                          {elevationDegrees < 0 && <em style={{color: '#ff6b6b'}}>Sun below horizon</em>}\n                          {elevationDegrees >= 0 && elevationDegrees < 10 && <em style={{color: '#ffa500'}}>Sun near horizon</em>}\n                          {elevationDegrees >= 10 && <em style={{color: '#4dabf7'}}>Sun well above horizon</em>}\n                        </div>\n                      </Popup>\n                    </Marker>\n\n                    {/* Sun Direction Line */}\n                    <Polyline\n                      positions={[\n                        [currentPosition.lat, currentPosition.lon],\n                        [sunLat, sunLon]\n                      ]}\n                      color=\"#ffd700\"\n                      weight={3}\n                      opacity={0.8}\n                      dashArray=\"10, 5\"\n                    />\n                  </>\n                );\n              })()}\n            </MapContainer>\n          </div>\n\n          <div className=\"flight-details\">\n            {/* Flight Route Card */}\n            <div className=\"flight-info-card slide-up\">\n              <div className=\"flight-route\">\n                <div className=\"route-city\">{fromAirport}</div>\n                <div className=\"route-arrow\">✈️</div>\n                <div className=\"route-city\">{toAirport}</div>\n              </div>\n            </div>\n\n            {/* Seat Recommendation Card */}\n            <div className=\"recommendation-card bounce-in\">\n              <h3>Perfect Seat Recommendation</h3>\n              <p>\n                {flightData.recommendation === 'left' ? (\n                  <span className=\"sun-tooltip-container\">\n                    ☀️ ← Left Side\n                    <div className={`sun-tooltip ${(currentSunPosition?.elevation ?? 0) < 0 ? 'night' : (currentSunPosition?.elevation ?? 0) < 10 ? 'sunrise' : 'daylight'}`}>\n                      {(currentSunPosition?.elevation ?? 0) < 0 \n                        ? 'Best for nighttime views • Moon/stars visible'\n                        : (currentSunPosition?.elevation ?? 0) < 10 \n                          ? 'Perfect for sunrise/sunset viewing • Low sun angle'\n                          : 'Optimal sun viewing • Daytime brightness'\n                      }\n                    </div>\n                  </span>\n                ) : flightData.recommendation === 'right' ? (\n                  <span className=\"sun-tooltip-container\">\n                    Right Side → ☀️\n                    <div className={`sun-tooltip ${(currentSunPosition?.elevation ?? 0) < 0 ? 'night' : (currentSunPosition?.elevation ?? 0) < 10 ? 'sunrise' : 'daylight'}`}>\n                      {(currentSunPosition?.elevation ?? 0) < 0 \n                        ? 'Best for nighttime views • Moon/stars visible'\n                        : (currentSunPosition?.elevation ?? 0) < 10 \n                          ? 'Perfect for sunrise/sunset viewing • Low sun angle'\n                          : 'Optimal sun viewing • Daytime brightness'\n                      }\n                    </div>\n                  </span>\n                ) : (\n                  flightData.recommendation\n                )}\n              </p>\n            </div>\n\n            {/* Current View Analysis Card */}\n            {currentSunPosition && (\n              <div className=\"current-view-card slide-up\">\n                <h3>\n                  <span className=\"section-icon\">📊</span>\n                  Current View Analysis\n                </h3>\n                <div className=\"view-details\">\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Aircraft Position:</span>\n                    <span className=\"view-value\">\n                      {currentPosition?.lat?.toFixed(4) ?? '--'}, {currentPosition?.lon?.toFixed(4) ?? '--'}\n                    </span>\n                  </div>\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Sun Elevation:</span>\n                    <span className=\"view-value\">{currentSunPosition.elevation?.toFixed(1) ?? '--'}°</span>\n                  </div>\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Sun Azimuth:</span>\n                    <span className=\"view-value\">{currentSunPosition.azimuth?.toFixed(1) ?? '--'}°</span>\n                  </div>\n                  <div className=\"view-item\">\n                    <span className=\"view-label\">Sun Visibility:</span>\n                    <span className=\"view-value\">\n                      {currentSunPosition.elevation > 0 ? (\n                        <span className=\"sun-tooltip-container\">\n                          ☀️ Visible\n                          <div className={`sun-tooltip ${currentSunPosition.elevation < 10 ? 'sunrise' : 'daylight'}`}>\n                            {currentSunPosition.elevation < 10 \n                              ? `Sunrise/Sunset • ${currentSunPosition.elevation.toFixed(1)}° above horizon`\n                              : `Daylight • ${currentSunPosition.elevation.toFixed(1)}° above horizon`\n                            }\n                          </div>\n                        </span>\n                      ) : (\n                        <span className=\"sun-tooltip-container\">\n                          🌙 Below Horizon\n                          <div className=\"sun-tooltip night\">\n                            Nighttime • {Math.abs(currentSunPosition.elevation).toFixed(1)}° below horizon\n                          </div>\n                        </span>\n                      )}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Flight Timeline */}\n            <div className=\"flight-progress-container slide-up\">\n              <h4>\n                <span className=\"section-icon\">🕐</span>\n                Flight Timeline\n              </h4>\n              \n              <p className=\"progress-instructions\">\n                Drag the slider to explore different moments of your flight\n              </p>\n\n              <div className=\"progress-slider-container\">\n                <div className=\"progress-labels\">\n                  <div className=\"progress-label\">\n                    <span className=\"sun-tooltip-container\">\n                      <span className=\"progress-icon\">🛫</span>\n                      Departure\n                      <div className=\"sun-tooltip daylight\">\n                        {flightData.path[0] ? new Date(departureTime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) : 'Start time'} • Flight begins\n                      </div>\n                    </span>\n                  </div>\n                  <div className=\"progress-label\">\n                    <span className=\"sun-tooltip-container\">\n                      <span className=\"progress-icon\">🛬</span>\n                      Arrival\n                      <div className=\"sun-tooltip daylight\">\n                        {flightData.path[flightData.path.length - 1] ? new Date(new Date(departureTime).getTime() + (Number(flightDuration) || 120) * 60 * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) : 'End time'} • Flight ends\n                      </div>\n                    </span>\n                  </div>\n                </div>\n\n                <div \n                  className=\"horizontal-slider-container\"\n                  onMouseDown={handleMouseDown}\n                  onClick={handleClick}\n                >\n                  <div className=\"horizontal-slider-track\">\n                    <div \n                      className=\"horizontal-progress-bar\"\n                      style={{\n                        width: `${flightProgress}%`\n                      }}\n                    />\n                    \n                    <div \n                      className=\"horizontal-slider-handle\"\n                      style={{\n                        left: `${flightProgress}%`\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"progress-display\">\n                  <span className=\"sun-tooltip-container\">\n                    Flight Progress: {Math.round(flightProgress)}%\n                    <div className={`sun-tooltip ${(currentSunPosition?.elevation ?? 0) < 0 ? 'night' : (currentSunPosition?.elevation ?? 0) < 10 ? 'sunrise' : 'daylight'}`}>\n                      {getSunTooltipContent(currentSunPosition, flightProgress, departureTime ? new Date(departureTime) : undefined)}\n                    </div>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nfunction App() {\n  // Page navigation state\n  const [currentPage, setCurrentPage] = useState<AppPage>(AppPage.SEARCH);\n\n  // Form data state - All fields start empty\n  const [fromAirport, setFromAirport] = useState('');\n  const [toAirport, setToAirport] = useState('');\n  const [departureTime, setDepartureTime] = useState('');\n  const [flightDuration, setFlightDuration] = useState<number | ''>(''); // Start empty\n  const [flightData, setFlightData] = useState<FlightData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [flightProgress, setFlightProgress] = useState<number>(0);\n  const [currentPosition, setCurrentPosition] = useState<{ lat: number; lon: number } | null>(null);\n  const [currentSunPosition, setCurrentSunPosition] = useState<SunPosition | null>(null);\n\n  // Sun Preferences State\n  const [wantSunrise, setWantSunrise] = useState(false);\n  const [wantSunset, setWantSunset] = useState(false);\n  const [sunrisePreference, setSunrisePreference] = useState<'sunrise' | 'sunset'>('sunrise');\n\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Helper functions for flight duration calculations\n  const getFlightEndTime = (): Date => {\n    if (!departureTime || !flightDuration) {\n      return new Date(); // Return current time if invalid\n    }\n    const startTime = new Date(departureTime);\n    const endTime = new Date(startTime.getTime() + Number(flightDuration) * 60 * 1000); // Convert minutes to milliseconds\n    return endTime;\n  };\n\n  const formatTimeDisplay = (date: Date): string => {\n    return date.toLocaleTimeString('en-US', { \n      hour: '2-digit', \n      minute: '2-digit', \n      hour12: true \n    });\n  };\n\n\n\n  const getOptimalPeriodsInFlight = (): { sunrise: boolean; sunset: boolean; details: string[] } => {\n    if (!departureTime || !flightDuration) {\n      return { sunrise: false, sunset: false, details: [] };\n    }\n    \n    const startTime = new Date(departureTime);\n    const endTime = getFlightEndTime();\n    \n    const startHour = startTime.getHours();\n    const endHour = endTime.getHours();\n    \n    let sunriseInFlight = false;\n    let sunsetInFlight = false;\n    const details: string[] = [];\n\n    // Check if flight spans across sunrise time (4 AM - 10 AM)\n    if (\n      (startHour <= 10 && endHour >= 4) || // Flight overlaps with sunrise window\n      (startHour >= 4 && startHour <= 10) || // Start is in sunrise window\n      (endHour >= 4 && endHour <= 10) || // End is in sunrise window\n      (startHour < 4 && endHour > 10) // Flight spans entire sunrise window\n    ) {\n      sunriseInFlight = true;\n      details.push(`🌅 Sunrise viewing opportunity (4 AM - 10 AM)`);\n    }\n\n    // Check if flight spans across sunset time (5 PM - 7 PM)  \n    if (\n      (startHour <= 19 && endHour >= 17) || // Flight overlaps with sunset window\n      (startHour >= 17 && startHour <= 19) || // Start is in sunset window\n      (endHour >= 17 && endHour <= 19) || // End is in sunset window\n      (startHour < 17 && endHour > 19) // Flight spans entire sunset window\n    ) {\n      sunsetInFlight = true;\n      details.push(`🌇 Sunset viewing opportunity (5 PM - 7 PM)`);\n    }\n\n    // Handle cross-midnight flights\n    if (endTime.getDate() !== startTime.getDate()) {\n      const nextDayHour = endHour;\n      // Check if next day portion covers sunrise\n      if (nextDayHour >= 4 && nextDayHour <= 10) {\n        sunriseInFlight = true;\n        if (!details.some(d => d.includes('Sunrise'))) {\n          details.push(`🌅 Sunrise viewing opportunity (next day, 4 AM - 10 AM)`);\n        }\n      }\n    }\n\n    return { sunrise: sunriseInFlight, sunset: sunsetInFlight, details };\n  };\n\n  // Validate sun preferences based on entire flight duration\n  const validateSunPreferences = (): string | null => {\n    if (!wantSunrise && !wantSunset) {\n      return null; // No preferences selected, proceed normally\n    }\n\n    const optimalPeriods = getOptimalPeriodsInFlight();\n    const startTime = new Date(departureTime);\n    const endTime = getFlightEndTime();\n\n    // If both sunrise and sunset are selected\n    if (wantSunrise && wantSunset) {\n      if (!optimalPeriods.sunrise && !optimalPeriods.sunset) {\n        return `Flight duration (${formatTimeDisplay(startTime)} - ${formatTimeDisplay(endTime)}) doesn't include optimal sunrise (4-10 AM) or sunset (5-7 PM) viewing times. Consider adjusting your flight time or duration.`;\n      }\n      \n      if (sunrisePreference === 'sunrise' && !optimalPeriods.sunrise && optimalPeriods.sunset) {\n        return `Your flight (${formatTimeDisplay(startTime)} - ${formatTimeDisplay(endTime)}) includes sunset viewing but not sunrise. Consider prioritizing sunset instead.`;\n      }\n      \n      if (sunrisePreference === 'sunset' && !optimalPeriods.sunset && optimalPeriods.sunrise) {\n        return `Your flight (${formatTimeDisplay(startTime)} - ${formatTimeDisplay(endTime)}) includes sunrise viewing but not sunset. Consider prioritizing sunrise instead.`;\n      }\n    } else {\n      // Single preference selected\n      if (wantSunrise && !optimalPeriods.sunrise) {\n        return `Your flight (${formatTimeDisplay(startTime)} - ${formatTimeDisplay(endTime)}) doesn't include optimal sunrise viewing time (4-10 AM). Consider adjusting your departure time or flight duration.`;\n      }\n      \n      if (wantSunset && !optimalPeriods.sunset) {\n        return `Your flight (${formatTimeDisplay(startTime)} - ${formatTimeDisplay(endTime)}) doesn't include optimal sunset viewing time (5-7 PM). Consider adjusting your departure time or flight duration.`;\n      }\n    }\n\n    return null; // All validations passed\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Comprehensive form validation\n    if (!fromAirport || !toAirport || !departureTime || !flightDuration) {\n      setError('Please fill all the details including departure airport, arrival airport, departure time, and flight duration.');\n      setLoading(false);\n      return;\n    }\n\n    // Check if at least one sun preference is selected\n    if (!wantSunrise && !wantSunset) {\n      setError('Please select at least one sun preference (sunrise or sunset) to get seat recommendations.');\n      setLoading(false);\n      return;\n    }\n\n    // Check if source and destination are the same\n    if (fromAirport === toAirport) {\n      setError('No flights available for the same source and destination airports. Please select different departure and arrival airports.');\n      setLoading(false);\n      return;\n    }\n\n    // Validate flight duration\n    if (typeof flightDuration === 'string' || flightDuration < 30 || flightDuration > 1440) {\n      setError('Flight duration must be a number between 30 and 1440 minutes (24 hours).');\n      setLoading(false);\n      return;\n    }\n\n    // Validate sun preferences\n    const sunValidationError = validateSunPreferences();\n    if (sunValidationError) {\n      setError(sunValidationError);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await axios.get(`http://localhost:3001/api/route`, {\n        params: {\n          from: fromAirport,\n          to: toAirport,\n          depart: departureTime\n        }\n      });\n\n      // Validate the response data\n      if (!response.data || !response.data.path || response.data.path.length === 0) {\n        setError('No flight path data available for this route. Please try a different route or time.');\n        setLoading(false);\n        return;\n      }\n\n      setFlightData(response.data);\n      \n      // Set initial flight progress to 0% (departure)\n      setFlightProgress(0);\n      \n      // Navigate to results page after successful API call\n      setCurrentPage(AppPage.RESULTS);\n      \n    } catch (err) {\n      setError('Unable to fetch the data');\n      console.error('Error fetching flight data:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleProgressChange = useCallback((newProgress: number) => {\n    setFlightProgress(newProgress);\n  }, []);\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    \n    // Immediately update position on click for instant feedback\n    if (flightData) {\n      const sliderElement = e.currentTarget.closest('.horizontal-slider-container') as HTMLElement;\n      if (sliderElement) {\n        const rect = sliderElement.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        let percentage = (x / rect.width) * 100;\n        \n        // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n        if (percentage > 95) percentage = 100;\n        if (percentage < 5) percentage = 0;\n        \n        percentage = Math.max(0, Math.min(100, percentage));\n        \n        // Immediately update the visual elements without waiting for React state\n        const handle = document.querySelector('.horizontal-slider-handle') as HTMLElement;\n        const progressBar = document.querySelector('.horizontal-progress-bar') as HTMLElement;\n        const progressText = document.querySelector('.progress-display') as HTMLElement;\n        \n        if (handle) handle.style.left = `${percentage}%`;\n        if (progressBar) progressBar.style.width = `${percentage}%`;\n        if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n        \n        handleProgressChange(percentage);\n      }\n    }\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n    \n    // Immediately update position on mouse down for instant feedback\n    if (flightData) {\n      const sliderElement = e.currentTarget.closest('.horizontal-slider-container') as HTMLElement;\n      if (sliderElement) {\n        const rect = sliderElement.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        let percentage = (x / rect.width) * 100;\n        \n        // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n        if (percentage > 95) percentage = 100;\n        if (percentage < 5) percentage = 0;\n        \n        percentage = Math.max(0, Math.min(100, percentage));\n        \n        // Immediately update the visual elements without waiting for React state\n        const handle = document.querySelector('.horizontal-slider-handle') as HTMLElement;\n        const progressBar = document.querySelector('.horizontal-progress-bar') as HTMLElement;\n        const progressText = document.querySelector('.progress-display') as HTMLElement;\n        \n        if (handle) handle.style.left = `${percentage}%`;\n        if (progressBar) progressBar.style.width = `${percentage}%`;\n        if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n        \n        handleProgressChange(percentage);\n      }\n    }\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  const handleMouseMove = (e: MouseEvent) => {\n    if (!isDragging || !flightData) return;\n    \n    const sliderElement = document.querySelector('.horizontal-slider-container') as HTMLElement;\n    if (!sliderElement) return;\n    \n    const rect = sliderElement.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    let percentage = (x / rect.width) * 100;\n    \n    // Make it easier to reach 100% - if within 5% of the end, snap to 100%\n    if (percentage > 95) percentage = 100;\n    if (percentage < 5) percentage = 0;\n    \n    percentage = Math.max(0, Math.min(100, percentage));\n    \n    // Immediately update the visual elements without waiting for React state\n    const handle = document.querySelector('.horizontal-slider-handle') as HTMLElement;\n    const progressBar = document.querySelector('.horizontal-progress-bar') as HTMLElement;\n    const progressText = document.querySelector('.progress-display') as HTMLElement;\n    \n    if (handle) handle.style.left = `${percentage}%`;\n    if (progressBar) progressBar.style.width = `${percentage}%`;\n    if (progressText) progressText.textContent = `Flight Progress: ${Math.round(percentage)}%`;\n    \n    // Update React state (this will update airplane position)\n    handleProgressChange(percentage);\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  const handlePositionChange = (position: { lat: number; lon: number; sunPosition: SunPosition | null }) => {\n    setCurrentPosition({ lat: position.lat, lon: position.lon });\n    setCurrentSunPosition(position.sunPosition);\n  };\n\n  // Navigation function to go back to search\n  const goBackToSearch = () => {\n    setCurrentPage(AppPage.SEARCH);\n    setError(null); // Clear any errors when going back\n  };\n\n  return (\n    <div className=\"App\">\n      {currentPage === AppPage.SEARCH ? (\n        <SearchPage \n          fromAirport={fromAirport}\n          setFromAirport={setFromAirport}\n          toAirport={toAirport}\n          setToAirport={setToAirport}\n          departureTime={departureTime}\n          setDepartureTime={setDepartureTime}\n          flightDuration={flightDuration}\n          setFlightDuration={setFlightDuration}\n          wantSunrise={wantSunrise}\n          setWantSunrise={setWantSunrise}\n          wantSunset={wantSunset}\n          setWantSunset={setWantSunset}\n          sunrisePreference={sunrisePreference}\n          setSunrisePreference={setSunrisePreference}\n          loading={loading}\n          error={error}\n          onSubmit={handleSubmit}\n          formatTimeDisplay={formatTimeDisplay}\n          getFlightEndTime={getFlightEndTime}\n          getOptimalPeriodsInFlight={getOptimalPeriodsInFlight}\n        />\n      ) : (\n        <ResultsPage \n          flightData={flightData}\n          fromAirport={fromAirport}\n          toAirport={toAirport}\n          currentPosition={currentPosition}\n          currentSunPosition={currentSunPosition}\n          flightProgress={flightProgress}\n          handleProgressChange={handleProgressChange}\n          handlePositionChange={handlePositionChange}\n          isDragging={isDragging}\n          handleMouseDown={handleMouseDown}\n          handleClick={handleClick}\n          onBack={goBackToSearch}\n          departureTime={departureTime}\n          flightDuration={flightDuration}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}